variables:
  PLATFORM_MIN_VERSION: 'v6.5.5.1'
  PLATFORM_DEFAULT_VERSION: '6.5.x'
  PLATFORM_BRANCH: $PLATFORM_DEFAULT_VERSION
  CMS_EXTENSION_BRANCH: '6.5.x'
  COMMERCIAL_ENABLED: 'true'
  DEPENDENCIES_WITHOUT_COMMERCIAL: |
    [{ "name": "SwagCmsExtensions", "url": "gitlab.shopware.com/shopware/6/services/cms-extensions", "branch": "$CMS_EXTENSION_BRANCH" }]
  DEPENDENCIES_WITH_COMMERCIAL: |
    [
      { "name": "SwagCmsExtensions", "url": "gitlab.shopware.com/shopware/6/services/cms-extensions", "branch": "$CMS_EXTENSION_BRANCH" },
      { "name": "SwagCommercial", "url": "gitlab.shopware.com/shopware/6/product/commercial.git", "branch": "$PLATFORM_BRANCH" }
    ]
  PLUGIN_DEPENDENCIES: $DEPENDENCIES_WITH_COMMERCIAL

phpunit:
  services:
    -   name: $MYSQL_IMAGE
        alias: database
        entrypoint: [ 'sh', '-c', "docker-entrypoint.sh $MYSQL_CMD" ]
  script:
    -   composer dump-autoload --dev -d "${PROJECT_ROOT}/custom/plugins/${PLUGIN_NAME}"
    -   php
        -d pcov.enabled=1 -d pcov.directory=$PWD/src -d pcov.exclude='~(vendor|tests|node_modules)~'
        ${PROJECT_ROOT}/vendor/bin/phpunit
        --configuration phpunit.xml.dist
        --log-junit ${CI_PROJECT_DIR}/phpunit.junit.xml
        --colors=never
        --coverage-cobertura ${CI_PROJECT_DIR}/cobertura.xml
        --coverage-text | grep -v -E '^Shopware\\|^  Methods:' # do not output covered files lines
  parallel:
    matrix:
      -   MYSQL_IMAGE:
            - mysql:8.0
          DEV_IMAGE: [ 'shopware/development:8.1-composer-2', 'shopware/development:8.2-composer-2' ]
          MYSQL_CMD: $MYSQL8_CMD
          PLATFORM_BRANCH: [ $PLATFORM_MIN_VERSION, $PLATFORM_DEFAULT_VERSION ]
          PLUGIN_DEPENDENCIES: [ $DEPENDENCIES_WITH_COMMERCIAL, $DEPENDENCIES_WITHOUT_COMMERCIAL ]
      -   MYSQL_IMAGE:
            - mariadb:10.3
            - mariadb:10.5
          DEV_IMAGE: [ 'shopware/development:8.1-composer-2', 'shopware/development:8.2-composer-2' ]
          PLATFORM_BRANCH: [ $PLATFORM_MIN_VERSION, $PLATFORM_DEFAULT_VERSION ]
          PLUGIN_DEPENDENCIES: [ $DEPENDENCIES_WITH_COMMERCIAL, $DEPENDENCIES_WITHOUT_COMMERCIAL ]

validate openapi typescript:
  stage: build
  needs: []
  rules:
    - changes:
        - 'src/**/*'
  script:
    - $CI_PROJECT_DIR/bin/console bundle:dump
    - composer init:admin
    - composer openapi:generate
    - git update-index --refresh || printf ''
    - git diff-index "${CI_COMMIT_SHA}" --quiet -- src/Resources/app/administration/src/types/openapi.d.ts || (echo "Please run 'composer openapi:generate' to update openapi.d.ts" && exit 1)

phpstan:
  variables:
    DEV_IMAGE: 'shopware/development:8.1-composer-2'
  script:
    - composer dump-autoload --dev -d "${PROJECT_ROOT}/custom/plugins/SwagCmsExtensions"
    - composer phpstan
  parallel:
    matrix:
      -   PLATFORM_BRANCH: [ $PLATFORM_MIN_VERSION, $PLATFORM_DEFAULT_VERSION ]

linting:
  stage: test
  needs: []
  script:
    - $CI_PROJECT_DIR/bin/console bundle:dump
    - '(cd $CI_PROJECT_DIR/src/Administration/Resources/app/administration/ && npm ci --no-audit --prefer-offline)'
    - '(cd $CI_PROJECT_DIR/src/Storefront/Resources/app/storefront/ && npm ci --no-audit --prefer-offline)'
    - composer -d $CI_PROJECT_DIR admin:generate-entity-schema-types  # for all ts types
    - composer init:admin
    - composer init:storefront
    - composer lint:admin:ci
    - composer lint:storefront

jest (administration vue3):
  rules:
    - when: never

include:
  project: 'shopware/6/product/platform'
  ref: '6.5.x'
  file: '.gitlab/templates/plugin.yml'
