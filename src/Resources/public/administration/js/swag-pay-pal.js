/*! For license information please see swag-pay-pal.js.LICENSE.txt */
!function(e){var t={};function n(a){if(t[a])return t[a].exports;var i=t[a]={i:a,l:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(a,i,function(t){return e[t]}.bind(null,i));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/bundles/swagpaypal/",n(n.s="0cw9")}({"+Z+Y":function(e,t,n){var a=n("XvI/");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7043a57e",a,!0,{})},"/9C4":function(e,t,n){},"/ZQ/":function(e,t,n){var a=n("GfZD");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("a71f5ec6",a,!0,{})},"0cw9":function(e,t,n){"use strict";n.r(t);n("1/ja"),n("c6EI"),n("QILv");Shopware.Component.override("sw-dashboard-index",{template:'{% block sw_dashboard_index_content_campaign_banner %}\n    {% parent %}\n\n    <swag-paypal-campaign-banner v-if="showPayPalBanner"></swag-paypal-campaign-banner>\n{% endblock %}\n',inject:["systemConfigApiService"],data:function(){return{payPalSystemConfig:null}},computed:{showPayPalBanner:function(){return!!this.payPalSystemConfig&&(new Date<new Date("2022-12-31")&&(this.payPalSystemConfig["SwagPayPal.settings.clientId"]||this.payPalSystemConfig["SwagPayPal.settings.clientIdSandbox"]))}},methods:{createdComponent:function(){var e=this;this.$super("createdComponent"),this.systemConfigApiService.getValues("SwagPayPal.settings").then((function(t){e.payPalSystemConfig=t}))}}});n("7EQS");Shopware.Component.register("swag-paypal-campaign-banner",{template:'<sw-meteor-card :class="cardClasses">\n    <div class="sw-campaign-banner__container">\n        <div class="sw-campaign-banner__image">\n            <img :src="image">\n        </div>\n\n        <div class="sw-campaign-banner__content">\n            <div class="sw-campaign-banner__text">\n                <span\n                    v-if="showLabel"\n                    class="sw-campaign-banner__label"\n                >{{ labelText }}</span>\n                <h3>{{ title }}</h3>\n                <p v-html="text"></p>\n            </div>\n\n            <div class="sw-campaign-banner__action">\n                <sw-button variant="ghost" :routerLink="{ name: \'swag.paypal.index\' }">\n                    {{ linkTitle }}\n                </sw-button>\n            </div>\n\n\n            <button\n                class="swag-paypal-campaign-banner__close"\n                @click.prevent="close"\n            >\n                <sw-icon\n                    name="regular-times-s"\n                    small\n                />\n            </button>\n        </div>\n    </div>\n</sw-meteor-card>\n',i18n:{messages:{"de-DE":{"2022-10":{title:"Spare bares Geld!",text:'Am 01.08.2022 hat PayPal die Standardgebühren angepasst. Migriere bis 31.12.2022 zu PayPal Checkout* und behalte deine alten Gebühren bis 31.07.2023.<br>* Erfahre mehr in unserem <a href="https://www.shopware.com/de/news/paypal-aktualisiert-gebuehren/" target="_blank">Blog Beitrag</a>',labelText:""},linkTitle:"Zu den PayPal-Einstellungen"},"en-GB":{"2022-10":{title:"Save money now!",text:'On 1 August 2022, PayPal adjusted the standard fees. Migrate to PayPal Checkout by 31 December 2022* and maintain your old prices until 31 July 2023!<br>* Learn more about in our <a href="https://www.shopware.com/en/news/paypal-updated-fees/" target="_blank">blog</a>',labelText:""},linkTitle:"Go to PayPal settings"}}},data:function(){return{closed:!0}},computed:{linkTitle:function(){return this.$tc("linkTitle")},timePrefix:function(){return"2022-10"},labelText:function(){return this.$tc("".concat(this.timePrefix,".labelText"))},showLabel:function(){return this.labelText!=="".concat(this.timePrefix,".labelText")},title:function(){return this.$tc("".concat(this.timePrefix,".title"))},text:function(){return this.$tc("".concat(this.timePrefix,".text"))},assetFilter:function(){return Shopware.Filter.getByName("asset")},currentLocale:function(){return Shopware.State.get("session").currentLocale},image:function(){var e="de-DE"===this.currentLocale?"de":"en";return this.assetFilter("swagpaypal/static/img/campaign/".concat(this.timePrefix,"_").concat(e,".png"))},cardClasses:function(){return{"sw-campaign-banner":!0,"swag-paypal-campaign-banner":!0,"swag-paypal-campaign-banner__closed":this.closed}},localStorageKey:function(){return"swag-paypal-campaign-banner.".concat(this.timePrefix,".closed")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.closed="true"===window.localStorage.getItem(this.localStorageKey)},close:function(){this.closed=!0,window.localStorage.setItem(this.localStorageKey,"true")}}});n("97CA");function a(e){return function(e){if(Array.isArray(e))return i(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}Shopware.Component.override("sw-first-run-wizard-paypal-credentials",{template:'{% block sw_first_run_wizard_paypal_credentials %}\n    <div class="sw-first-run-wizard-paypal-credentials">\n\n        {% block sw_first_run_wizard_paypal_credentials_inner %}\n            <sw-loader v-if="isLoading"></sw-loader>\n\n            {% block sw_first_run_wizard_paypal_credentials_intro %}\n                <p class="sw-first-run-wizard-paypal-credentials__headerText">\n                    {{ $tc(\'swag-paypal-frw-credentials.textIntroPayPal\') }}\n                </p>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_sandbox %}\n                <sw-switch-field v-model="config[\'SwagPayPal.settings.sandbox\']"\n                                 :label="$tc(\'swag-paypal-frw-credentials.labelSandbox\')"\n                                 :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSandbox\')">\n                </sw-switch-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_button_container %}\n                <div class="sw-first-run-wizard-paypal-credentials__button-container">\n\n                    {% block sw_first_run_wizard_paypal_credentials_button %}\n                        <a class="sw-button sw-button--primary swag-paypal-frw__signup-button"\n                           target="_blank"\n                           :data-paypal-onboard-complete="onboardingCallback"\n                           :href="`${onboardingUrl}`"\n                           data-paypal-button="true">\n                            {{ $tc(\'swag-paypal-frw-credentials.buttonGetCredentials\') }}\n                        </a>\n                    {% endblock %}\n\n                    {% block sw_first_run_wizard_paypal_credentials_indicator %}\n                        <div class="sw-first-run-wizard-paypal-credentials__indicator">\n                            <template v-if="isGetCredentialsSuccessful">\n\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_icon %}\n                                    <sw-icon name="regular-checkmark-s"\n                                             class="sw-first-run-wizard-paypal-credentials__icon-successful">\n                                    </sw-icon>\n                                {% endblock %}\n\n                                {% block sw_first_run_wizard_paypal_credentials_indicator_text %}\n                                    <span class="sw-first-run-wizard-paypal-credentials__text-indicator">\n                                        {{ $tc(\'swag-paypal-frw-credentials.textFetchedSuccessful\') }}\n                                    </span>\n                                {% endblock %}\n                            </template>\n                        </div>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_id %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientId\']"\n                               v-show="!sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientId\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_secret %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientSecret\']"\n                               v-show="!sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientSecret\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_merchant_id %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.merchantPayerId\']"\n                               v-show="!sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelMerchantPayerId\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_id_sandbox %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientIdSandbox\']"\n                               v-show="sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientIdSandbox\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_client_secret_sandbox %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.clientSecretSandbox\']"\n                               v-show="sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelClientSecretSandbox\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_merchant_id_sandbox %}\n                <sw-text-field v-model="config[\'SwagPayPal.settings.merchantPayerIdSandbox\']"\n                               v-show="sandboxMode"\n                               :label="$tc(\'swag-paypal-frw-credentials.labelMerchantPayerIdSandbox\')"\n                               @change="onCredentialsChanged">\n                </sw-text-field>\n            {% endblock %}\n\n            {% block sw_first_run_wizard_paypal_credentials_set_default %}\n                <sw-switch-field v-model="setDefault"\n                                 :disabled="!credentialsProvided"\n                                 :label="$tc(\'swag-paypal-frw-credentials.labelSetDefault\')"\n                                 :helpText="$tc(\'swag-paypal-frw-credentials.tooltipSetDefault\')">\n                </sw-switch-field>\n            {% endblock %}\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["systemConfigApiService","SwagPaypalPaymentMethodService"],mixins:["notification","swag-paypal-credentials-loader"],data:function(){return{config:{},isLoading:!1,setDefault:!1}},computed:{sandboxMode:function(){return this.config["SwagPayPal.settings.sandbox"]||!1},onboardingUrl:function(){return this.sandboxMode?this.onboardingUrlSandbox:this.onboardingUrlLive},onboardingCallback:function(){return this.sandboxMode?"onboardingCallbackSandbox":"onboardingCallbackLive"},buttonConfig:function(){var e=this;return this.$super("buttonConfig").reduce((function(t,n){return"next"===n.key&&(n.action=e.onClickNext.bind(e)),[].concat(a(t),[n])}),[])},credentialsProvided:function(){return!this.sandboxMode&&this.credentialsProvidedLive||this.sandboxMode&&this.credentialsProvidedSandbox},credentialsProvidedLive:function(){return!!this.config["SwagPayPal.settings.clientId"]&&!!this.config["SwagPayPal.settings.clientSecret"]},credentialsProvidedSandbox:function(){return!!this.config["SwagPayPal.settings.clientIdSandbox"]&&!!this.config["SwagPayPal.settings.clientSecretSandbox"]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$super("createdComponent"),this.fetchPayPalConfig()},onPayPalCredentialsLoadSuccess:function(e,t,n,a){this.setConfig(e,t,n,a)},onPayPalCredentialsLoadFailed:function(e){this.setConfig("","",e,""),this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageFetchedError"),duration:1e4})},setConfig:function(e,t,n,a){var i=a?"Sandbox":"";this.$set(this.config,"SwagPayPal.settings.clientId".concat(i),e),this.$set(this.config,"SwagPayPal.settings.clientSecret".concat(i),t),this.$set(this.config,"SwagPayPal.settings.merchantPayerId".concat(i),n)},onClickNext:function(){var e=this;return this.credentialsProvided?this.isGetCredentialsSuccessful?this.saveConfig().then((function(){return e.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),Promise.resolve(!1)})).catch((function(){return Promise.resolve(!0)})):this.testApiCredentials().then((function(){return e.saveConfig()})).then((function(){return e.$emit("frw-redirect","sw.first.run.wizard.index.plugins"),Promise.resolve(!1)})).catch((function(){return Promise.resolve(!0)})):(this.createNotificationError({message:this.$tc("swag-paypal-frw-credentials.messageNoCredentials")}),Promise.resolve(!0))},fetchPayPalConfig:function(){var e=this;return this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings",null).then((function(t){e.config=t})).finally((function(){e.isLoading=!1}))},saveConfig:function(){var e=this;return this.isLoading=!0,this.systemConfigApiService.saveValues(this.config,null).then((function(){return e.setDefault?e.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel():Promise.resolve()})).then((function(){e.isLoading=!1}))},testApiCredentials:function(){var e=this;this.isLoading=!0;var t=this.config["SwagPayPal.settings.sandbox"],n=t?"Sandbox":"",a=this.config["SwagPayPal.settings.clientId".concat(n)],i=this.config["SwagPayPal.settings.clientSecret".concat(n)];return this.SwagPayPalApiCredentialsService.validateApiCredentials(a,i,t).then((function(t){return t.credentialsValid?(e.isLoading=!1,Promise.resolve()):Promise.reject()})).catch((function(t){if(t.response.data&&t.response.data.errors){var n=t.response.data.errors.map((function(e){return e.detail})).join(" / ");e.createNotificationError({message:n}),e.isLoading=!1}return Promise.reject()}))},onCredentialsChanged:function(){this.isGetCredentialsSuccessful=null}}});n("rEJf");var o="1ce0868f406d47d98cfe4b281e62f099",s="paypalPosSalesChannel";Shopware.Component.override("sw-sales-channel-modal-detail",{template:'{% block sw_sales_channel_modal_detail_header_icon %}\n    <span v-if="isPayPalPosSalesChannel(detailType.id)"\n          class="sw-sales-channel-modal-detail__header-icon">\n         <img class="swag-paypal-pos-modal-detail__icon"\n              :src="\'swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n    </span>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n\n{% block sw_sales_channel_modal_detail_header_meta %}\n    <div v-if="isPayPalPosSalesChannel(detailType.id)"\n         class="sw-sales-channel-modal-detail__header-meta">\n        <h4 class="sw-sales-channel-modal-detail__header-name">\n            {{ detailType.translated.name }}\n        </h4>\n        <div class="sw-sales-channel-modal-detail__header-manufacturer">\n            {{ $tc(\'swag-paypal-pos.general.salesChannelDetailDescription.manufacturer\') }}\n        </div>\n    </div>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n\n{% block sw_sales_channel_modal_detail_description %}\n    <template v-if="isPayPalPosSalesChannel(detailType.id)">\n        <h4 class="sw-sales-channel-modal-detail__description-long-title">\n            {{ $tc(\'swag-paypal-pos.general.salesChannelDetailDescription.title\') }}\n        </h4>\n        <div v-if="detailType.translated.descriptionLong"\n             class="sw-sales-channel-modal-detail__description-long-text">\n            {{ detailType.translated.descriptionLong }}\n        </div>\n        <div v-else\n             class="sw-sales-channel-modal-detail__description-long-text">\n            {{ detailType.translated.description }}\n        </div>\n    </template>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n',methods:{isPayPalPosSalesChannel:function(e){return e===o}}});n("kZ4G");Shopware.Component.override("sw-sales-channel-modal-grid",{template:'{% block sw_sales_channel_grid_columns_icon %}\n    <sw-grid-column\n            v-if="isPayPalPosSalesChannel(item.id)"\n            class="sw-sales-channel-modal-grid__icon-column"\n            flex="85px"\n            dataIndex="icon">\n        <span class="sw-sales-channel-modal-grid__icon" @click="onOpenDetail(item.id)">\n             <img class="swag-paypal-pos-modal-grid__icon"\n                  :src="\'swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n        </span>\n    </sw-grid-column>\n\n    <template v-else>\n        {% parent %}\n    </template>\n{% endblock %}\n',methods:{isPayPalPosSalesChannel:function(e){return this.salesChannelTypes.find((function(t){return t.id===e})).id===o}}});function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function l(){l=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",c=i.toStringTag||"@@toStringTag";function p(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{p({},"")}catch(e){p=function(e,t,n){return e[t]=n}}function d(e,t,n,i){var o=t&&t.prototype instanceof h?t:h,s=Object.create(o.prototype),r=new I(i||[]);return a(s,"_invoke",{value:k(e,n,r)}),s}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=d;var g={};function h(){}function y(){}function f(){}var _={};p(_,o,(function(){return this}));var m=Object.getPrototypeOf,w=m&&m(m($([])));w&&w!==t&&n.call(w,o)&&(_=w);var b=f.prototype=h.prototype=Object.create(_);function v(e){["next","throw","return"].forEach((function(t){p(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function i(a,o,s,l){var c=u(e[a],e,o);if("throw"!==c.type){var p=c.arg,d=p.value;return d&&"object"==r(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,l)}),(function(e){i("throw",e,s,l)})):t.resolve(d).then((function(e){p.value=e,s(p)}),(function(e){return i("throw",e,s,l)}))}l(c.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function k(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return L()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=P(s,n);if(r){if(r===g)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=u(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function P(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,P(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var i=u(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,g;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,g):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,g)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function I(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function $(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:L}}function L(){return{value:void 0,done:!0}}return y.prototype=f,a(b,"constructor",{value:f,configurable:!0}),a(f,"constructor",{value:y,configurable:!0}),y.displayName=p(f,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,p(e,c,"GeneratorFunction")),e.prototype=Object.create(b),e},e.awrap=function(e){return{__await:e}},v(S.prototype),p(S.prototype,s,(function(){return this})),e.AsyncIterator=S,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new S(d(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},v(b),p(b,c,"Generator"),p(b,o,(function(){return this})),p(b,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=$,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;x(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:$(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),g}},e}function c(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}Shopware.Component.register("swag-paypal-overview-card",{template:'{% block swag_paypal_overview_card %}\n<sw-sales-channel-config v-model="config"\n                         ref="swagPayPalConfigComponent"\n                         domain="SwagPayPal.settings">\n\n    {% block swag_paypal_overview_card_select %}\n        <template #select>\n            <div></div>\n        </template>\n    {% endblock %}\n\n    {% block swag_paypal_overview_card_content %}\n        <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n            <div v-if="actualConfigData">\n\n                {% block swag_paypal_overview_card_checkout %}\n                    <swag-paypal-checkout\n                        ref="swagPayPalCheckoutComponent"\n                        :pluginId="pluginId"\n                        :allowShowCredentials="false"\n                        :actualConfigData="actualConfigData"\n                        :allConfigs="allConfigs"\n                        :isLoading="isLoading"\n                        showSettingsLink\n                        @on-save-settings="save"\n                        @on-deactivate-paypal-plus="save"\n                        @on-change-loading="onChangeLoading"\n                    />\n                {% endblock %}\n            </div>\n        </template>\n    {% endblock %}\n\n</sw-sales-channel-config>\n{% endblock %}\n',props:{paymentMethods:{type:Array,required:!0}},data:function(){return{isLoading:!1,salesChannels:[],config:null}},computed:{pluginId:function(){return 0===this.paymentMethods.length?"":this.paymentMethods[0].pluginId}},methods:{save:function(){var e,t=this;return(e=l().mark((function e(){var n,a;return l().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.isLoading=!0,e.prev=1,e.next=4,t.$refs.swagPayPalConfigComponent.save();case 4:return(n=e.sent).payPalWebhookErrors&&(a=t.$tc("swag-paypal.settingForm.messageWebhookError"),n.payPalWebhookErrors.forEach((function(e){t.createNotificationError({message:"".concat(a,"<br><br><ul><li>").concat(e,"</li></ul>")})}))),e.next=8,t.$refs.swagPayPalCheckoutComponent.getPaymentMethodsAndMerchantIntegrations();case 8:return e.prev=8,t.isLoading=!1,e.finish(8);case 11:case"end":return e.stop()}}),e,null,[[1,,8,11]])})),function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){c(o,a,i,s,r,"next",e)}function r(e){c(o,a,i,s,r,"throw",e)}s(void 0)}))})()},onChangeLoading:function(e){this.isLoading=e}}});n("pYo2");Shopware.Component.override("sw-settings-payment-list",{template:'{% block sw_settings_payment_list_column_active_editor %}\n<sw-icon\n    v-if="needsOnboarding(item)"\n    v-tooltip.left="{\n        message: $tc(\'sw-settings-payment-list.needOnboardingTooltip\'),\n    }"\n    name="regular-lock"\n    small\n/>\n<template v-else>\n    {% parent %}\n</template>\n{% endblock %}\n\n{% block sw_settings_payment_list_column_active_label %}\n<sw-icon\n    v-if="needsOnboarding(item)"\n    v-tooltip.left="{\n        message: $tc(\'sw-settings-payment-list.needOnboardingTooltip\'),\n    }"\n    name="regular-lock"\n    small\n/>\n<template v-else>\n    {% parent %}\n</template>\n{% endblock %}\n\n{% block sw_settings_payment_list_content_inner %}\n    <swag-paypal-created-component-helper\n        @on-created-component="fetchMerchantIntegrations"\n    />\n\n    {% parent %}\n{% endblock %}\n',inject:["SwagPayPalApiCredentialsService"],data:function(){return{merchantIntegrations:[]}},methods:{needsOnboarding:function(e){return!!Object.keys(this.merchantIntegrations).includes(e.id)&&"INACTIVE"===this.merchantIntegrations[e.id].toUpperCase()},fetchMerchantIntegrations:function(){var e=this;this.SwagPayPalApiCredentialsService.getMerchantInformation().then((function(t){var n;e.merchantIntegrations=null!==(n=t.merchantIntegrations)&&void 0!==n?n:[]}))}}});n("Z+jC");Shopware.Component.override("sw-settings-payment-detail",{template:'{% block sw_settings_payment_detail_content_field_plugin %}\n<template v-if="needsOnboarding(paymentMethod.id)">\n    <swag-paypal-plugin-box-with-onboarding\n        v-if="!!paymentMethod.pluginId"\n        :plugin-id="paymentMethod.pluginId"\n        :payment-method="paymentMethod"\n    />\n</template>\n<template v-else>\n    {% parent %}\n</template>\n{% endblock %}\n\n{% block sw_settings_payment_detail_content_field_active %}\n<template v-if="disableActiveSwitch">\n    <sw-field\n        v-model="paymentMethod.active"\n        v-tooltip.left="{ message: $tc(\'sw-settings-payment-detail.tooltip\') }"\n        class="sw-settings-payment-detail__field-active"\n        type="switch"\n        :disabled="disableActiveSwitch"\n        :label="$tc(\'sw-settings-payment.detail.labelActive\')"\n    />\n</template>\n<template v-else>\n    {% parent %}\n</template>\n{% endblock %}\n',inject:["SwagPayPalApiCredentialsService"],data:function(){return{merchantIntegrations:[]}},computed:{disableActiveSwitch:function(){return!this.acl.can("payment.editor")||this.needsOnboarding(this.paymentMethod.id)}},methods:{createdComponent:function(){this.$super("createdComponent"),this.fetchMerchantIntegrations()},needsOnboarding:function(e){return!!Object.keys(this.merchantIntegrations).includes(e)&&"INACTIVE"===this.merchantIntegrations[e].toUpperCase()},fetchMerchantIntegrations:function(){var e=this;this.SwagPayPalApiCredentialsService.getMerchantInformation().then((function(t){var n;e.merchantIntegrations=null!==(n=t.merchantIntegrations)&&void 0!==n?n:[]}))}}});n("GQ5b");var p=Shopware,d=p.Component,u=p.Utils;d.override("sw-settings-shipping-detail",{template:'{% block sw_settings_shipping_detail_tax_cost %}\n\n    {% block sw_settings_shipping_detail_paypal_default_carrier %}\n    <sw-card\n        v-if="isPayPalEnabled"\n        class="swag-paypal-settings-shipping-carrier"\n        position-identifier="swag-paypal-settings-shipping-carrier"\n    >\n        {% block sw_settings_shipping_detail_paypal_default_carrier_title %}\n        <template #title>\n            <div class="sw-card__title">\n                {{ $tc(\'swag-paypal-settings-shipping-carrier.cardTitle\') }}\n                <sw-help-text :text="$tc(\'swag-paypal-settings-shipping-carrier.cardHelpText\')"></sw-help-text>\n            </div>\n        </template>\n        {% endblock %}\n\n        {% block sw_settings_shipping_detail_paypal_default_carrier_description %}\n            <div\n                v-html="$tc(\'swag-paypal-settings-shipping-carrier.description\')"\n                class="swag-paypal-settings-shipping-carrier__description"\n            ></div>\n        {% endblock %}\n\n        {% block sw_settings_shipping_detail_paypal_default_carrier_input %}\n        <sw-text-field\n            v-model="payPalDefaultCarrier"\n            :label="$tc(\'swag-paypal-settings-shipping-carrier.inputLabel\')"\n            :placeholder="$tc(\'swag-paypal-settings-shipping-carrier.inputPlaceholder\')"\n        ></sw-text-field>\n        {% endblock %}\n\n    </sw-card>\n    {% endblock %}\n\n    {% parent %}\n{% endblock %}\n',inject:["SwagPayPalApiCredentialsService"],data:function(){return{isPayPalEnabled:!1}},computed:{shippingMethodCustomFields:function(){return this.shippingMethod.customFields?this.shippingMethod.customFields:u.object.get(this.shippingMethod,"translated.customFields",null)},payPalDefaultCarrier:{get:function(){return null===this.shippingMethodCustomFields?"":this.shippingMethodCustomFields.swag_paypal_carrier||""},set:function(e){u.object.set(this.shippingMethod,"customFields.swag_paypal_carrier",e)}}},methods:{createdComponent:function(){this.$super("createdComponent"),this.fetchMerchantIntegrations()},fetchMerchantIntegrations:function(){var e=this;this.SwagPayPalApiCredentialsService.getMerchantInformation().then((function(t){e.isPayPalEnabled=t.hasOwnProperty("merchantIntegrations")&&null!==t.merchantIntegrations}))}}});n("lV9L"),n("uem7");var g={MERCHANT_LOCATION_GERMANY:"germany",MERCHANT_LOCATION_OTHER:"other"};function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function f(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==h(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===h(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var _=Shopware,m=_.Component,w=_.Defaults,b=Shopware.Data.Criteria;m.register("swag-paypal",{template:'{% block swag_paypal %}\n    <sw-page class="swag-paypal">\n\n        {% block swag_paypal_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="regular-chevron-right-xs" small></sw-icon>\n                    {{ $tc(\'swag-paypal.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_actions %}\n            <template #smart-bar-actions>\n                {% block swag_paypal_actions_save %}\n                    <sw-button-process v-model="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading || savingDisabled || hasError || !acl.can(\'swag_paypal.editor\')"\n                                       @click="onSave">\n                        {{ $tc(\'global.default.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_content %}\n            <template #content>\n\n                {% block swag_paypal_content_card %}\n                    <sw-card-view>\n\n                        {% block swag_paypal_content_tabs %}\n                            <sw-tabs\n                                default-item="general"\n                                position-identifier="swag-paypal-content-tabs">\n                                <template #default="{ active }">\n                                    <sw-tabs-item\n                                        key="general"\n                                        :active-tab="active"\n                                        :route="{ name: \'swag.paypal.index\', params: { tab: \'general\' } }">\n                                        {{ $tc(\'swag-paypal.tabs.general\') }}\n                                    </sw-tabs-item>\n                                    <sw-tabs-item\n                                        key="storefront"\n                                        :active-tab="active"\n                                        :route="{ name: \'swag.paypal.index\', params: { tab: \'storefront\' } }">\n                                        {{ $tc(\'swag-paypal.tabs.storefront\') }}\n                                    </sw-tabs-item>\n                                </template>\n                            </sw-tabs>\n                        {% endblock %}\n\n                        {# @deprecated tag:v8.0.0 - will be removed without replacement #}\n                        {% block swag_paypal_content_card_shipping_alert %}\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config %}\n                            <sw-sales-channel-config v-model="config"\n                                                     ref="configComponent"\n                                                     domain="SwagPayPal.settings">\n\n                                {% block swag_paypal_content_card_channel_config_sales_channel %}\n                                    <template #select="{ onInput, selectedSalesChannelId }">\n\n                                        {% block swag_paypal_content_card_channel_config_sales_channel_card %}\n                                            <sw-card position-identifier="swag-paypal-sales-channel-card"\n                                                     :title="$tc(\'global.entities.sales_channel\', 2)">\n\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_title %}\n                                                    <sw-single-select v-model="selectedSalesChannelId"\n                                                                      labelProperty="translated.name"\n                                                                      valueProperty="id"\n                                                                      :isLoading="isLoading"\n                                                                      :options="salesChannels"\n                                                                      :disabled="!acl.can(\'swag_paypal.editor\')"\n                                                                      @change="onInput">\n                                                    </sw-single-select>\n                                                {% endblock %}\n\n                                                {% block swag_paypal_content_card_channel_config_sales_channel_card_footer %}\n                                                    <template #footer>\n\n                                                        {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container %}\n                                                        <sw-container columns="2fr 1fr"\n                                                                      gap="0px 30px">\n\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_text %}\n                                                                <p>{{ $tc(\'swag-paypal.saleschannelCard.button.description\') }}</p>\n                                                            {% endblock %}\n\n                                                            {% block swag_paypal_content_card_channel_config_sales_channel_card_footer_container_button %}\n                                                                <sw-button-process v-model="isSetDefaultPaymentSuccessful"\n                                                                                   :isLoading="isSettingDefaultPaymentMethods"\n                                                                                   :disabled="!acl.can(\'swag_paypal.editor\')"\n                                                                                   @click="onSetPaymentMethodDefault">\n                                                                    {{ $tc(\'swag-paypal.saleschannelCard.button.label\') }}\n                                                                </sw-button-process>\n                                                            {% endblock %}\n\n                                                        </sw-container>\n                                                        {% endblock %}\n\n                                                    </template>\n                                                {% endblock %}\n\n                                            </sw-card>\n                                        {% endblock %}\n\n                                    </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_content_card_channel_config_cards %}\n                                    <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n\n                                        {# @deprecated tag:v8.0.0 - Will be removed without replacement #}\n                                        {% block swag_paypal_content_card_channel_config_checkout_card %}\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_cross_border %}\n                                        <swag-paypal-cross-border\n                                            v-if="tab === \'advanced\'"\n                                            :isLoading="isLoading"\n                                            :actual-config-data="actualConfigData"\n                                            :all-configs="allConfigs"\n                                            :selected-sales-channel-id="selectedSalesChannelId"\n                                        />\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_credentials_card %}\n                                            <swag-paypal-credentials v-if="tab === \'general\'"\n                                                                     :actualConfigData="actualConfigData"\n                                                                     :allConfigs="allConfigs"\n                                                                     :selectedSalesChannelId="selectedSalesChannelId"\n                                                                     :clientIdErrorState="clientIdErrorState"\n                                                                     :clientSecretErrorState="clientSecretErrorState"\n                                                                     :clientIdSandboxErrorState="clientIdSandboxErrorState"\n                                                                     :clientSecretSandboxErrorState="clientSecretSandboxErrorState"\n                                                                     :clientIdFilled="clientIdFilled"\n                                                                     :clientSecretFilled="clientSecretFilled"\n                                                                     :clientIdSandboxFilled="clientIdSandboxFilled"\n                                                                     :clientSecretSandboxFilled="clientSecretSandboxFilled"\n                                                                     :isLoading="isLoading">\n                                            </swag-paypal-credentials>\n                                        {% endblock %}\n\n                                        {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                                        {% block swag_paypal_content_card_channel_config_plus %}\n                                            <swag-paypal-plus v-if="showPlusCard && tab === \'storefront\'"\n                                                              :actualConfigData="actualConfigData"\n                                                              :allConfigs="allConfigs"\n                                                              :selectedSalesChannelId="selectedSalesChannelId">\n                                            </swag-paypal-plus>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_behavior %}\n                                            <swag-paypal-behavior v-if="tab === \'general\'"\n                                                                  :actualConfigData="actualConfigData"\n                                                                  :allConfigs="allConfigs"\n                                                                  :selectedSalesChannelId="selectedSalesChannelId">\n                                            </swag-paypal-behavior>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_express %}\n                                            <swag-paypal-express v-if="tab === \'storefront\'"\n                                                                 :actualConfigData="actualConfigData"\n                                                                 :allConfigs="allConfigs"\n                                                                 :selectedSalesChannelId="selectedSalesChannelId"\n                                                                 @preventSave="preventSave">\n                                            </swag-paypal-express>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_installment %}\n                                            <swag-paypal-installment v-if="tab === \'storefront\'"\n                                                                     :actualConfigData="actualConfigData"\n                                                                     :allConfigs="allConfigs"\n                                                                     :selectedSalesChannelId="selectedSalesChannelId">\n                                            </swag-paypal-installment>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_acdc %}\n                                            <swag-paypal-acdc v-if="tab === \'general\'"\n                                                              :actualConfigData="actualConfigData"\n                                                              :allConfigs="allConfigs"\n                                                              :selectedSalesChannelId="selectedSalesChannelId">\n                                            </swag-paypal-acdc>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_pui %}\n                                            <swag-paypal-pui v-if="tab === \'general\'"\n                                                             :actualConfigData="actualConfigData"\n                                                             :allConfigs="allConfigs"\n                                                             :selectedSalesChannelId="selectedSalesChannelId">\n                                            </swag-paypal-pui>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_content_card_channel_config_spb %}\n                                            <swag-paypal-spb v-if="showSPBCard && tab === \'storefront\'"\n                                                             :actualConfigData="actualConfigData"\n                                                             :allConfigs="allConfigs"\n                                                             :selectedSalesChannelId="selectedSalesChannelId"\n                                                             @preventSave="preventSave">\n                                            </swag-paypal-spb>\n                                        {% endblock %}\n                                    </template>\n                                {% endblock %}\n\n                            </sw-sales-channel-config>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_loading %}\n                            <sw-loader v-if="isLoading"></sw-loader>\n                        {% endblock %}\n\n                    </sw-card-view>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["SwagPayPalApiCredentialsService","SwagPaypalPaymentMethodService","repositoryFactory","acl"],mixins:["notification"],data:function(){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(Object(n),!0).forEach((function(t){f(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({isLoading:!1,isSaveSuccessful:!1,isTestSuccessful:!1,isTestSandboxSuccessful:!1,clientIdFilled:!1,clientSecretFilled:!1,clientIdSandboxFilled:!1,clientSecretSandboxFilled:!1,sandboxChecked:!1,salesChannels:[],config:{},isSetDefaultPaymentSuccessful:!1,isSettingDefaultPaymentMethods:!1,savingDisabled:!1,messageBlankErrorState:null,showCredentials:!1,allowShowCredentials:!0},g)},metaInfo:function(){return{title:this.$createTitle()}},computed:{showSPBCard:function(){var e,t,n,a,i,o,s,r;if(null===(e=this.$refs.configComponent)||void 0===e||null===(t=e.allConfigs)||void 0===t||!t.null)return!0;var l=null!==(n=this.config["SwagPayPal.settings.merchantLocation"])&&void 0!==n?n:null===(a=this.$refs.configComponent)||void 0===a||null===(i=a.allConfigs)||void 0===i?void 0:i.null["SwagPayPal.settings.merchantLocation"],c=null!==(o=this.config["SwagPayPal.settings.plusCheckoutEnabled"])&&void 0!==o?o:null===(s=this.$refs.configComponent)||void 0===s||null===(r=s.allConfigs)||void 0===r?void 0:r.null["SwagPayPal.settings.plusCheckoutEnabled"];return l!==this.MERCHANT_LOCATION_GERMANY||!c},showPlusCard:function(){return!this.showSPBCard},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},clientIdErrorState:function(){return this.sandboxChecked||this.clientIdFilled?null:this.messageBlankErrorState},clientSecretErrorState:function(){return this.sandboxChecked||this.clientSecretFilled?null:this.messageBlankErrorState},clientIdSandboxErrorState:function(){return!this.sandboxChecked||this.clientIdSandboxFilled?null:this.messageBlankErrorState},clientSecretSandboxErrorState:function(){return!this.sandboxChecked||this.clientSecretSandboxFilled?null:this.messageBlankErrorState},hasError:function(){return!this.sandboxChecked&&!(this.clientIdFilled&&this.clientSecretFilled)||this.sandboxChecked&&!(this.clientIdSandboxFilled&&this.clientSecretSandboxFilled)},salesChannelCriteria:function(){var e=new b(1,500);return e.addFilter(b.equalsAny("typeId",[w.storefrontSalesChannelTypeId,w.apiSalesChannelTypeId])),e},tab:function(){return this.$route.params.tab||"general"}},watch:{config:{handler:function(){var e,t,n,a=null===(e=this.$refs.configComponent)||void 0===e||null===(t=e.allConfigs)||void 0===t?void 0:t.null;null===(null===(n=this.$refs.configComponent)||void 0===n?void 0:n.selectedSalesChannelId)?(this.clientIdFilled=!!this.config["SwagPayPal.settings.clientId"],this.clientSecretFilled=!!this.config["SwagPayPal.settings.clientSecret"],this.clientIdSandboxFilled=!!this.config["SwagPayPal.settings.clientIdSandbox"],this.clientSecretSandboxFilled=!!this.config["SwagPayPal.settings.clientSecretSandbox"],this.sandboxChecked=!!this.config["SwagPayPal.settings.sandbox"]):(this.clientIdFilled=!!this.config["SwagPayPal.settings.clientId"]||!!a["SwagPayPal.settings.clientId"],this.clientSecretFilled=!!this.config["SwagPayPal.settings.clientSecret"]||!!a["SwagPayPal.settings.clientSecret"],this.clientIdSandboxFilled=!!this.config["SwagPayPal.settings.clientIdSandbox"]||!!a["SwagPayPal.settings.clientIdSandbox"],this.clientSecretSandboxFilled=!!this.config["SwagPayPal.settings.clientSecretSandbox"]||!!a["SwagPayPal.settings.clientSecretSandbox"],this.sandboxChecked=!!this.config["SwagPayPal.settings.sandbox"]||!!a["SwagPayPal.settings.sandbox"])},deep:!0}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.$route.params.tab||this.$router.push({name:"swag.paypal.index",params:{tab:"general"}}),this.isLoading=!0,this.salesChannelRepository.search(this.salesChannelCriteria,Shopware.Context.api).then((function(t){t.add({id:null,translated:{name:e.$tc("sw-sales-channel-switch.labelDefaultOption")}}),e.salesChannels=t})).finally((function(){e.isLoading=!1})),this.messageBlankErrorState={code:1,detail:this.$tc("swag-paypal.messageNotBlank")}},onSave:function(){this.hasError||this.save()},onChangeLoading:function(e){this.isLoading=e},save:function(){var e=this;this.isLoading=!0,this.$refs.configComponent.save().then((function(t){if(e.isSaveSuccessful=!0,t.payPalWebhookErrors){var n=e.$tc("swag-paypal.settingForm.messageWebhookError");t.payPalWebhookErrors.forEach((function(t){e.createNotificationError({message:"".concat(n,"<br><br><ul><li>").concat(t,"</li></ul>")})}))}})).finally((function(){e.isLoading=!1}))},onSetPaymentMethodDefault:function(){var e,t=this;this.isSettingDefaultPaymentMethods=!0,this.SwagPaypalPaymentMethodService.setDefaultPaymentForSalesChannel(null===(e=this.$refs.configComponent)||void 0===e?void 0:e.selectedSalesChannelId).then((function(){t.isSettingDefaultPaymentMethods=!1,t.isSetDefaultPaymentSuccessful=!0}))},preventSave:function(e){this.savingDisabled=!!e},onChangeCredentialsVisibility:function(e){this.showCredentials=e}}});n("YDOV");Shopware.Component.register("swag-paypal-settings-hint",{template:'{% block swag_paypal_settings_hint %}\n    <p class="swag-paypal-settings-hint">\n        {{ hintText }}\n    </p>\n{% endblock %}\n',props:{hintText:{type:String,required:!0}}});Shopware.Component.register("swag-paypal-acdc",{template:'{% block swag_paypal_content_card_channel_config_acdc %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-acdc"\n             :title="$tc(\'swag-paypal.settingForm.acdc.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_acdc_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-acdc-fields">\n\n                {% block swag_paypal_content_card_channel_config_acdc_settings_detail_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.acdcForce3DS\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.acdcForce3DS\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.acdcForce3DS"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.acdc.acdcForce3DS.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.acdc.acdcForce3DS.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function S(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function k(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==v(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==v(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===v(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var P=Shopware.Component,C=Shopware.Data.Criteria;P.register("swag-paypal-behavior",{template:'{% block swag_paypal_content_card_channel_config_behavior %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-behavior"\n             :title="$tc(\'swag-paypal.settingForm.behavior.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_behavior_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-behavior-field">\n\n                {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                {% block swag_paypal_content_card_channel_config_behavior_settings_merchant_location %}\n                    <sw-inherit-wrapper v-if="showMerchantLocation"\n                                        v-model="actualConfigData[\'SwagPayPal.settings.merchantLocation\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.merchantLocation\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.merchantLocation.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.merchantLocation"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="merchantLocationOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_intent %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.intent\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.intent\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.intent.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.intent"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="intentOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_submit_cart %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.submitCart\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.submitCart\']"\n                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.submitCart"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.behavior.submitCart.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.behavior.submitCart.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_brand_name %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.brandName\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.brandName\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <sw-text-field name="SwagPayPal.settings.brandName"\n                                           :mapInheritance="props"\n                                           :label="$tc(\'swag-paypal.settingForm.behavior.brandName.label\')"\n                                           :helpText="$tc(\'swag-paypal.settingForm.behavior.brandName.tooltipText\')"\n                                           :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                           :value="props.currentValue"\n                                           @change="props.updateCurrentValue">\n                            </sw-text-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_landing_page %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.landingPage\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.landingPage\']"\n                                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                                        :label="$tc(\'swag-paypal.settingForm.behavior.landingPage.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.landingPage"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="landingPageOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_landing_page_hint %}\n                                <swag-paypal-settings-hint :hintText="landingPageHint"></swag-paypal-settings-hint>\n                            {% endblock %}\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_send_order_number %}\n                    <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.sendOrderNumber\']"\n                                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sendOrderNumber\']"\n                                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.sendOrderNumber"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.behavior.sendOrderNumber.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.behavior.sendOrderNumber.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_order_number %}\n                    <sw-container columns="1fr 1fr" gap="0px 30px">\n\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_prefix %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.orderNumberPrefix\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.orderNumberPrefix\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.orderNumberPrefix"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.behavior.orderNumberPrefix.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.behavior.orderNumberPrefix.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_behavior_settings_order_number_suffix %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.orderNumberSuffix\']"\n                                                :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.orderNumberSuffix\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.orderNumberSuffix"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.behavior.orderNumberSuffix.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.behavior.orderNumberSuffix.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                    </sw-container>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_logging_level %}\n                    <sw-single-select v-model="loggingLevel"\n                                      :options="loggingLevelOptions"\n                                      :label="$tc(\'swag-paypal.settingForm.behavior.loggingLevel.label\')"\n                                      :helpText="$tc(\'swag-paypal.settingForm.behavior.loggingLevel.tooltipText\')"\n                                      :disabled="!acl.can(\'swag_paypal.editor\')">\n                    </sw-single-select>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_excluded_product_ids %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.excludedProductIds\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.excludedProductIds\']"\n                        :customInheritationCheckFunction="checkArrayFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.behavior.excludedProductIds.label\')"\n                        :helpText="$tc(\'swag-paypal.settingForm.behavior.excludedProductIds.tooltipText\')"\n                    >\n                        <template #content="props">\n                            <sw-entity-multi-id-select\n                                name="SwagPayPal.settings.excludedProductIds"\n                                :repository="productRepository"\n                                :criteria="excludedProductCriteria"\n                                :mapInheritance="props"\n                                :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                :ids="props.currentValue"\n                                @change="props.updateCurrentValue"\n                            >\n\n                                {% block swag_paypal_content_card_channel_config_behavior_settings_excluded_product_ids_label_property %}\n                                    <template #selection-label-property="{ item }">\n                                        <sw-product-variant-info\n                                            :variations="item.variation"\n                                        >\n                                            {{ item.translated.name || item.name }}\n                                        </sw-product-variant-info>\n                                    </template>\n                                {% endblock %}\n\n                                {% block swag_paypal_content_card_channel_config_behavior_settings_excluded_product_ids_result_label_property %}\n                                    <template #result-label-property="{ item, searchTerm, highlightSearchTerm }">\n                                        <sw-product-variant-info\n                                            :variations="item.variation"\n                                        >\n                                            {{ item.translated.name || item.name }}\n                                        </sw-product-variant-info>\n                                    </template>\n                                {% endblock %}\n\n                            </sw-entity-multi-id-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_behavior_settings_excluded_product_streams_ids %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.excludedProductStreamIds\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.excludedProductStreamIds\']"\n                        :customInheritationCheckFunction="checkArrayFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.behavior.excludedProductStreamIds.label\')"\n                        :helpText="$tc(\'swag-paypal.settingForm.behavior.excludedProductStreamIds.tooltipText\')"\n                    >\n                        <template #content="props">\n                            <sw-entity-multi-id-select\n                                name="SwagPayPal.settings.excludedProductStreamIds"\n                                :repository="productStreamRepository"\n                                :mapInheritance="props"\n                                :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                :ids="props.currentValue"\n                                @change="props.updateCurrentValue"\n                            ></sw-entity-multi-id-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n',inject:["repositoryFactory","acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{null:{}}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},data:function(){return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?S(Object(n),!0).forEach((function(t){k(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):S(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},g)},computed:{intentOptions:function(){return[{id:"CAPTURE",name:this.$tc("swag-paypal.settingForm.behavior.intent.CAPTURE")},{id:"AUTHORIZE",name:this.$tc("swag-paypal.settingForm.behavior.intent.AUTHORIZE")}]},merchantLocationOptions:function(){return[{id:this.MERCHANT_LOCATION_GERMANY,name:this.$tc("swag-paypal.settingForm.behavior.merchantLocation.germany")},{id:this.MERCHANT_LOCATION_OTHER,name:this.$tc("swag-paypal.settingForm.behavior.merchantLocation.other")}]},showMerchantLocation:function(){var e,t,n;return null!==(e=this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"])&&void 0!==e?e:null===(t=this.allConfigs)||void 0===t||null===(n=t.null)||void 0===n?void 0:n["SwagPayPal.settings.plusCheckoutEnabled"]},landingPageOptions:function(){return[{id:"LOGIN",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.login")},{id:"BILLING",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.billing")},{id:"NO_PREFERENCE",name:this.$tc("swag-paypal.settingForm.behavior.landingPage.options.no_preference")}]},landingPageHint:function(){var e=this.actualConfigData["SwagPayPal.settings.landingPage"]||"NO_PREFERENCE";e=e.toLowerCase();var t="swag-paypal.settingForm.behavior.landingPage.helpText.".concat(e);return this.$tc(t)},loggingLevelOptions:function(){return[{value:300,label:this.$tc("swag-paypal.settingForm.behavior.loggingLevel.options.basic")},{value:100,label:this.$tc("swag-paypal.settingForm.behavior.loggingLevel.options.advanced")}]},loggingLevel:{get:function(){return this.allConfigs.null?this.allConfigs.null["SwagPayPal.settings.loggingLevel"]:300},set:function(e){this.allConfigs.null["SwagPayPal.settings.loggingLevel"]=e}},productRepository:function(){return this.repositoryFactory.create("product")},productStreamRepository:function(){return this.repositoryFactory.create("product_stream")},excludedProductCriteria:function(){var e=new C(1,25);return e.addAssociation("options.group"),e}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkArrayFieldInheritance:function(e){return!Array.isArray(e)||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});n("/ZQ/");function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function I(){I=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,i){var o=t&&t.prototype instanceof u?t:u,s=Object.create(o.prototype),r=new C(i||[]);return a(s,"_invoke",{value:v(e,n,r)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d={};function u(){}function g(){}function h(){}var y={};l(y,o,(function(){return this}));var f=Object.getPrototypeOf,_=f&&f(f($([])));_&&_!==t&&n.call(_,o)&&(y=_);var m=h.prototype=u.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(a,o,s,r){var l=p(e[a],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==x(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,r)}),(function(e){i("throw",e,s,r)})):t.resolve(d).then((function(e){c.value=e,s(c)}),(function(e){return i("throw",e,s,r)}))}r(l.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function v(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return L()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=S(s,n);if(r){if(r===d)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=p(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=p(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function $(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:L}}function L(){return{value:void 0,done:!0}}return g.prototype=h,a(m,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:g,configurable:!0}),g.displayName=l(h,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,l(e,r,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},w(b.prototype),l(b.prototype,s,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new b(c(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},w(m),l(m,r,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=$,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;P(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:$(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function $(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}function L(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){$(o,a,i,s,r,"next",e)}function r(e){$(o,a,i,s,r,"throw",e)}s(void 0)}))}}var T=Shopware,O=T.Component,E=T.Context,F=Shopware.Data.Criteria;O.register("swag-paypal-checkout",{template:'{% block swag_paypal_content_card_channel_config_checkout %}\n<sw-card\n    class="sw-card--grid"\n    position-identifier="swag-paypal-checkout"\n    :is-loading="isLoading || isLoadingPaymentMethods"\n    :title="$tc(\'swag-paypal.settingForm.checkout.cardTitle\')"\n>\n    <template #avatar>\n        {% block swag_paypal_content_card_channel_config_checkout_avatar %}\n        <img\n            :src="\'swagpaypal/static/img/paypal-logo-avatar.svg\' | asset"\n            :alt="$tc(\'swag-paypal.settingForm.checkout.appImageAlt\')"\n        >\n        {% endblock %}\n    </template>\n\n    <template #header-right>\n        {% block swag_paypal_content_card_channel_config_checkout_settings_link %}\n        <sw-internal-link\n            v-if="showSettingsLink"\n            :routerLink="{ name: \'swag.paypal.index\' }"\n        >\n            {{ $tc(\'swag-paypal.settingForm.checkout.settingsLink\') }}\n        </sw-internal-link>\n        {% endblock %}\n    </template>\n\n    {% block swag_paypal_content_card_channel_config_checkout_container %}\n    <div class="swag-paypal-checkout">\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_box %}\n        <div :class="{\'swag-paypal-checkout__box\': showMerchantInformation }">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_sandbox_switch %}\n            <sw-inherit-wrapper v-if="showSandboxToggle"\n                                v-model="actualConfigData[\'SwagPayPal.settings.sandbox\']"\n                                class="swag-paypal-checkout__sandbox-toggle"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sandbox\']"\n                                :customInheritationCheckFunction="checkBoolFieldInheritance">\n                <template #content="props">\n                    <sw-switch-field v-tooltip.left="{\n                                         message: isSandbox ? $tc(\'swag-paypal.settingForm.checkout.sandbox.onlySandboxTooltip\') : $tc(\'swag-paypal.settingForm.checkout.sandbox.onlyLiveTooltip\'),\n                                         disabled: !sandboxToggleDisabled,\n                                     }"\n                                     name="SwagPayPal.settings.sandbox"\n                                     :mapInheritance="props"\n                                     :label="$tc(\'swag-paypal.settingForm.checkout.sandbox.label\')"\n                                     :helpText="$tc(\'swag-paypal.settingForm.checkout.sandbox.helpText\')"\n                                     :disabled="sandboxToggleDisabled || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                     :value="props.currentValue"\n                                     @change="props.updateCurrentValue">\n                    </sw-switch-field>\n                </template>\n            </sw-inherit-wrapper>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_header %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__header"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.header\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_description %}\n            <p\n                v-if="!showMerchantInformation"\n                class="swag-paypal-checkout__description"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.description\') }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_banner %}\n            <sw-alert\n                v-if="!isOnboardingPPCPFinished"\n                variant="info"\n                class="swag-paypal-checkout__banner"\n            >\n                <span v-html="$tc(\'swag-paypal.settingForm.checkout.banner\')"></span>\n            </sw-alert>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_merchant_information %}\n            <p\n                v-if="showMerchantInformation"\n                class="swag-paypal-checkout__merchant-information"\n            >\n                {{ merchantEmail }}\n                <br>\n                {{ merchantInformation.merchantIntegrations.legal_name }}\n            </p>\n            {% endblock %}\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_onboarding %}\n                {% block swag_paypal_content_card_channel_config_checkout_container_onboarding_button %}\n                <a\n                    class="sw-button sw-button--ghost"\n                    target="_blank"\n                    :href="onboardingUrlLive"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackLive"\n                    data-paypal-button="true"\n                >\n                    {{ liveButtonTitle }}\n                </a>\n                <a\n                    class="swag-paypal-checkout__button-onboarding-sandbox"\n                    target="_blank"\n                    :href="onboardingUrlSandbox"\n                    :disabled="!acl.can(\'swag_paypal.editor\')"\n                    data-paypal-onboard-complete="onboardingCallbackSandbox"\n                    data-paypal-button="true"\n                >\n                    {{ sandboxButtonTitle }}\n                </a>\n                {% endblock %}\n            {% endblock %}\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods %}\n        <p class="swag-paypal-checkout__payment-method-headline">\n            {{ $tc(\'swag-paypal.settingForm.checkout.paymentMethodText\') }}\n        </p>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items %}\n        <div class="swag-paypal-checkout-payment-method_container">\n\n            {% block swag_paypal_content_card_channel_config_checkout_container_payment_methods_items_item %}\n            <swag-paypal-checkout-method\n                v-for="paymentMethod in paymentMethods"\n                :key="paymentMethod.id"\n                :payment-method="paymentMethod"\n                :onboarding-status="onboardingStatus(paymentMethod)"\n            />\n            {% endblock %}\n\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_switch_show_credentials %}\n        <sw-switch-field\n            v-if="allowShowCredentials"\n            v-model="showCredentials"\n            :label="$tc(\'swag-paypal.settingForm.checkout.showCredentials\')"\n            :disabled="!acl.can(\'swag_paypal.editor\')"\n            @change="updateShowCredentials"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_content_card_channel_config_checkout_container_credentials_slot %}\n        <slot name="credentials"></slot>\n        {% endblock %}\n\n    </div>\n    {% endblock %}\n\n    {% block sw_deactivate_paypal_plus_modal %}\n    <sw-modal\n        v-if="plusDeprecationModalOpen"\n        class="swag-paypal-checkout-modal"\n        :title="$tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.title\')"\n        variant="default"\n        @modal-close="closeModal"\n    >\n        {% block sw_deactivate_paypal_plus_modal_text %}\n        <p class="swag-paypal-checkout-modal__text">\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.text\') }}\n        </p>\n        {% endblock %}\n\n        {% block sw_deactivate_paypal_plus_modal_warning %}\n        <sw-alert\n            class="swag-paypal-checkout-modal__warning"\n            variant="warning"\n        >\n            {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.warning\') }}\n        </sw-alert>\n        {% endblock %}\n\n        {% block sw_deactivate_paypal_plus_modal_footer %}\n        <template #modal-footer>\n            {% block sw_deactivate_paypal_plus_modal_cancel_button %}\n            <sw-button @click="closeModal">\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.cancel\') }}\n            </sw-button>\n            {% endblock %}\n\n            {% block ssw_deactivate_paypal_plus_modal_confirm_button %}\n            <sw-button\n                variant="primary"\n                @click="deactivatePayPalPlus"\n            >\n                {{ $tc(\'swag-paypal.settingForm.checkout.deactivatePayPalPlusModal.button.deactivate\') }}\n            </sw-button>\n            {% endblock %}\n\n        </template>\n        {% endblock %}\n    </sw-modal>\n    {% endblock %}\n\n</sw-card>\n{% endblock %}\n',inject:["acl","repositoryFactory","SwagPayPalApiCredentialsService"],mixins:["notification","swag-paypal-credentials-loader"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},clientIdErrorState:{type:Object,required:!1,default:null},clientSecretErrorState:{type:Object,required:!1,default:null},clientIdSandboxErrorState:{type:Object,required:!1,default:null},clientSecretSandboxErrorState:{type:Object,required:!1,default:null},clientIdFilled:{type:Boolean,required:!1,default:!1},clientSecretFilled:{type:Boolean,required:!1,default:!1},clientIdSandboxFilled:{type:Boolean,required:!1,default:!1},clientSecretSandboxFilled:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0},allowShowCredentials:{type:Boolean,required:!1,default:!1},showSettingsLink:{type:Boolean,required:!1,default:!1}},data:function(){return{showCredentials:!1,paymentMethods:[],merchantInformation:{merchantIntegrations:{legalName:null,primaryEmail:null},capabilities:[]},plusDeprecationModalOpen:!1,showHintMerchantIdMustBeEnteredManually:!1,isLoadingPaymentMethods:!1}},computed:{paymentMethodRepository:function(){return this.repositoryFactory.create("payment_method")},paymentMethodCriteria:function(){var e=new F(1,500);return e.addAssociation("media"),e.addFilter(F.equals("plugin.name","SwagPayPal")),e.addSorting(F.sort("position","ASC"),!0),e},isLive:function(){return!this.isSandbox},isSandbox:function(){return this.actualConfigData["SwagPayPal.settings.sandbox"]},liveButtonTitle:function(){var e=this;return this.actualConfigData["SwagPayPal.settings.clientSecret"]?this.isSandbox?this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.some((function(t){return"active"!==e.onboardingStatus(t)}))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingLiveTitle"):this.$tc("swag-paypal.settingForm.checkout.button.liveTitle")},sandboxButtonTitle:function(){var e=this;return this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]?this.isLive?this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.isOnboardingPPCPFinished?this.paymentMethods.find((function(t){return"active"!==e.onboardingStatus(t)}))?this.$tc("swag-paypal.settingForm.checkout.button.restartOnboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.changeSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.onboardingSandboxTitle"):this.$tc("swag-paypal.settingForm.checkout.button.sandboxTitle")},sandboxToggleDisabled:function(){return(!this.actualConfigData["SwagPayPal.settings.clientSecret"]&&this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isSandbox||this.actualConfigData["SwagPayPal.settings.clientSecret"]&&!this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]&&this.isLive)&&!this.selectedSalesChannelId},isOnboardingPPCPFinished:function(){var e=this.paymentMethods.find((function(e){return"handler_swag_sepahandler"===e.formattedHandlerIdentifier}));return!!e&&"active"===this.onboardingStatus(e)},showMerchantInformation:function(){return this.isOnboardingPPCPFinished},showSandboxToggle:function(){return this.actualConfigData["SwagPayPal.settings.clientSecret"]||this.actualConfigData["SwagPayPal.settings.clientSecretSandbox"]||this.selectedSalesChannelId},merchantEmail:function(){var e;return null!==(e=this.merchantInformation.merchantIntegrations.primary_email)&&void 0!==e?e:this.merchantInformation.merchantIntegrations.tracking_id}},watch:{isSandbox:function(){this.$emit("on-save-settings")},isOnboardingPPCPFinished:function(){var e=this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"];e&&(this.plusDeprecationModalOpen=e&&this.isOnboardingPPCPFinished)}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;return L(I().mark((function t(){return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.getPaymentMethodsAndMerchantIntegrations();case 2:case"end":return t.stop()}}),t)})))()},updateShowCredentials:function(){this.$emit("on-change-credentials-visibility",this.showCredentials)},deactivatePayPalPlus:function(){this.$set(this.actualConfigData,"SwagPayPal.settings.plusCheckoutEnabled",!1),this.$set(this.actualConfigData,"SwagPayPal.settings.merchantLocation","other"),this.$set(this.actualConfigData,"SwagPayPal.settings.spbAlternativePaymentMethodsEnabled",!1),this.$emit("on-deactivate-paypal-plus"),this.plusDeprecationModalOpen=!1},getPaymentMethodsAndMerchantIntegrations:function(){var e=this;return L(I().mark((function t(){return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.isLoadingPaymentMethods=!0,t.next=3,e.fetchMerchantIntegrations();case 3:return t.next=5,e.getPaymentMethods();case 5:e.isLoadingPaymentMethods=!1;case 6:case"end":return t.stop()}}),t)})))()},getPaymentMethods:function(){var e=this;return L(I().mark((function t(){return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.paymentMethodRepository.search(e.paymentMethodCriteria,E.api).then((function(e){return e.filter((function(e){return"handler_swag_pospayment"!==e.formattedHandlerIdentifier&&"handler_swag_trustlyapmhandler"!==e.formattedHandlerIdentifier&&"handler_swag_giropayapmhandler"!==e.formattedHandlerIdentifier&&"handler_swag_sofortapmhandler"!==e.formattedHandlerIdentifier}))}));case 2:e.paymentMethods=t.sent;case 3:case"end":return t.stop()}}),t)})))()},fetchMerchantIntegrations:function(){var e=this;return L(I().mark((function t(){return I().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.SwagPayPalApiCredentialsService.getMerchantInformation(e.selectedSalesChannelId).then((function(e){return e}));case 2:e.merchantInformation=t.sent,e.merchantIntegrations=e.merchantInformation.capabilities;case 4:case"end":return t.stop()}}),t)})))()},onboardingStatus:function(e){return this.merchantInformation.capabilities[e.id]},onChangePaymentMethodActive:function(e){var t=this;e.active=!e.active,this.paymentMethodRepository.save(e,E.api).then((function(){var n=e.active?"active":"inactive";t.createNotificationSuccess({message:t.$tc("swag-paypal.settingForm.checkout.paymentMethodStatusChangedSuccess.".concat(n),0,{name:e.name})})}))},closeModal:function(){this.plusDeprecationModalOpen=!1},onPayPalCredentialsLoadSuccess:function(e,t,n,a){this.setConfig(e,t,n,a),this.$emit("on-save-settings")},onPayPalCredentialsLoadFailed:function(e){this.setConfig("","","",e),this.createNotificationError({message:this.$tc("swag-paypal.settingForm.credentials.button.messageFetchedError"),duration:1e4})},setConfig:function(e,t,n,a){var i=a?"Sandbox":"";this.$set(this.actualConfigData,"SwagPayPal.settings.clientId".concat(i),e),this.$set(this.actualConfigData,"SwagPayPal.settings.clientSecret".concat(i),t),this.$set(this.actualConfigData,"SwagPayPal.settings.merchantPayerId".concat(i),n)},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});n("Oiq3");var A=Shopware,D=A.Component,j=A.Context;D.register("swag-paypal-checkout-method",{template:'{% block swag_paypal_checkout_method %}\n<div class="swag-paypal-checkout-method">\n\n    {% block swag_paypal_checkout_method_icon %}\n    <img\n        v-if="paymentMethod.media"\n        class="swag-paypal-checkout-method__icon"\n        :src="paymentMethod.media.url"\n        :alt="paymentMethod.media.translated.alt"\n    >\n    {% endblock %}\n\n    {% block swag_paypal_checkout_method_name %}\n    <div class="swag-paypal-checkout-method__name">\n        {{ paymentMethod.translated.name }}\n    </div>\n    {% endblock %}\n\n    {% block swag_paypal_checkout_method_dynamic %}\n    <div class="swag-paypal-checkout-method__dynamic">\n        {% block swag_paypal_checkout_method_pui_help_text %}\n        <sw-help-text\n            v-if="availabilityToolTip"\n            :text="availabilityToolTip"\n        />\n        {% endblock %}\n\n        {% block swag_paypal_checkout_method_onboarding_status %}\n        <sw-label\n            v-tooltip="{\n                message: onboardingStatusTooltip,\n                position: \'top\',\n                disabled: !onboardingStatusTooltip,\n            }"\n            class="swag-plugin-box-with-onboarding__status-label"\n            size="medium"\n            appearance="pill"\n            :variant="statusBadgeVariant"\n            :ghost="false"\n            :caps="false"\n        >\n\n            {% block swag_paypal_checkout_method_onboarding_status_badge %}\n            <sw-color-badge\n                class="swag-plugin-box-with-onboarding__status-badge"\n                rounded\n                :color="statusBadgeColor"\n            />\n            {% endblock %}\n\n            {% block swag_paypal_checkout_method_onboarding_status_text %}\n            <span class="swag-plugin-box-with-onboarding__status-text">\n                {{ onboardingStatusText }}\n            </span>\n            {% endblock %}\n\n        </sw-label>\n        {% endblock %}\n\n        {% block swag_paypal_checkout_method_edit_detail_link %}\n        <router-link\n            v-if="showEditLink"\n            class="swag-paypal-checkout-method__show-detail-link"\n            :to="editLink"\n        >\n            {{ $tc(\'swag-paypal.settingForm.checkout.editDetail\') }}\n        </router-link>\n        {% endblock %}\n    </div>\n    {% endblock %}\n\n    {% block swag_paypal_checkout_method_active_switch %}\n    <sw-switch-field\n        :label="$tc(\'swag-paypal.settingForm.checkout.switch.label\')"\n        :disabled="paymentMethodToggleDisabled || !acl.can(\'swag_paypal.editor\')"\n        :value="paymentMethod.active"\n        @change="onChangePaymentMethodActive"\n    />\n    {% endblock %}\n</div>\n{% endblock %}\n',inject:["acl","repositoryFactory"],mixins:["notification"],props:{paymentMethod:{type:Object,required:!0},onboardingStatus:{type:String,required:!1,default:"inactive"}},data:function(){return{merchantIntegrations:{}}},computed:{paymentMethodRepository:function(){return this.repositoryFactory.create("payment_method")},editLink:function(){return{name:"sw.settings.payment.detail",params:{id:this.paymentMethod.id}}},needsOnboarding:function(){var e;return"ACTIVE"!==(null===(e=this.onboardingStatus)||void 0===e?void 0:e.toUpperCase())},paymentMethodToggleDisabled:function(){return!this.paymentMethod.active&&!this.showEditLink},showEditLink:function(){return["active","limited","mybank"].includes(this.onboardingStatus)},statusBadgeVariant:function(){var e;switch(this.onboardingStatus){case"active":e="success";break;case"limited":case"mybank":e="danger";break;case"inactive":case"ineligible":default:e="neutral";break;case"pending":e="info"}return e},statusBadgeColor:function(){var e;switch(this.onboardingStatus){case"active":e="#37D046";break;case"limited":case"mybank":e="#ff9800";break;case"inactive":case"ineligible":e="#52667A";break;default:e="#189eff"}return e},onboardingStatusText:function(){return this.$tc("swag-paypal.settingForm.checkout.onboardingStatusText.".concat(this.onboardingStatus))},onboardingStatusTooltip:function(){var e="swag-paypal.settingForm.checkout.onboardingStatusTooltip.".concat(this.onboardingStatus);return this.$te(e)?this.$tc(e):null},availabilityToolTip:function(){var e=this.paymentMethod.formattedHandlerIdentifier.split("_"),t=e[e.length-1],n="swag-paypal.settingForm.checkout.availabilityToolTip.".concat(t);return this.$te(n)?this.$tc(n):null}},methods:{onChangePaymentMethodActive:function(){var e=this;this.paymentMethod.active=!this.paymentMethod.active,this.paymentMethodRepository.save(this.paymentMethod,j.api).then((function(){var t=e.paymentMethod.active?"active":"inactive";e.createNotificationSuccess({message:e.$tc("swag-paypal.settingForm.checkout.paymentMethodStatusChangedSuccess.".concat(t),0,{name:e.paymentMethod.name})})}))}}});Shopware.Component.register("swag-paypal-created-component-helper",{template:"{% block swag_paypal_created_component_helper %}\n    {# only an empty element needed to render the component #}\n    <div/>\n{% endblock %}\n",created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$emit("on-created-component")}}});Shopware.Component.register("swag-paypal-credentials",{template:'{% block swag_paypal_content_card_channel_config_credentials %}\n    <sw-card position-identifier="swag-paypal-credentials"\n             :title="$tc(\'swag-paypal.settingForm.credentials.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_credentials_card_container %}\n            <sw-container>\n\n                {% block swag_paypal_content_card_channel_config_credentials_card_container_settings %}\n                    <div v-if="actualConfigData" class="swag-paypal-settings-credentials-fields">\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientId\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientId"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientId.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientId.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientIdErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientSecret\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientSecret\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientSecret"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientSecret.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientSecret.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientSecretErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_merchant_id %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.merchantPayerId\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.merchantPayerId\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.merchantPayerId"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.merchantPayerId.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.merchantPayerId.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test %}\n                            <sw-button-process v-model="isTestLiveSuccessful"\n                                               class="swag-paypal-settings-credentials-fields__test-button"\n                                               :isLoading="isTestingLive"\n                                               :disabled="testLiveButtonDisabled"\n                                               @click="onTest(false)">\n                                {{ $tc(\'swag-paypal.settingForm.testLive\') }}\n                            </sw-button-process>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.sandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.sandbox\']"\n                                                :customInheritationCheckFunction="checkBoolFieldInheritance">\n                                <template #content="props">\n                                    <sw-switch-field name="SwagPayPal.settings.sandbox"\n                                                     :mapInheritance="props"\n                                                     :label="$tc(\'swag-paypal.settingForm.credentials.sandbox.label\')"\n                                                     :helpText="$tc(\'swag-paypal.settingForm.credentials.sandbox.tooltipText\')"\n                                                     :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                     :value="props.currentValue"\n                                                     @change="props.updateCurrentValue">\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_id_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientIdSandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientIdSandbox\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientIdSandbox"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientIdSandbox.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientIdSandbox.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientIdSandboxErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_client_secret_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.clientSecretSandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.clientSecretSandbox\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.clientSecretSandbox"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.clientSecretSandbox.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.clientSecretSandbox.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   :error="clientSecretSandboxErrorState"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_merchant_id_sandbox %}\n                            <sw-inherit-wrapper v-model="actualConfigData[\'SwagPayPal.settings.merchantPayerIdSandbox\']"\n                                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.merchantPayerIdSandbox\']"\n                                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                                <template #content="props">\n                                    <sw-text-field name="SwagPayPal.settings.merchantPayerIdSandbox"\n                                                   :mapInheritance="props"\n                                                   :label="$tc(\'swag-paypal.settingForm.credentials.merchantPayerIdSandbox.label\')"\n                                                   :helpText="$tc(\'swag-paypal.settingForm.credentials.merchantPayerIdSandbox.tooltipText\')"\n                                                   :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                                   :value="props.currentValue"\n                                                   @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block swag_paypal_content_card_channel_config_credentials_card_container_settings_actions_test_sandbox %}\n                            <sw-button-process v-model="isTestSandboxSuccessful"\n                                               :isLoading="isTestingSandbox"\n                                               :disabled="testSandboxButtonDisabled"\n                                               @click="onTest(true)">\n                                {{ $tc(\'swag-paypal.settingForm.testSandbox\') }}\n                            </sw-button-process>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl","SwagPayPalApiCredentialsService"],mixins:["notification"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null},clientIdErrorState:{type:Object,required:!1,default:null},clientSecretErrorState:{type:Object,required:!1,default:null},clientIdSandboxErrorState:{type:Object,required:!1,default:null},clientSecretSandboxErrorState:{type:Object,required:!1,default:null},clientIdFilled:{type:Boolean,required:!0},clientSecretFilled:{type:Boolean,required:!0},clientIdSandboxFilled:{type:Boolean,required:!0},clientSecretSandboxFilled:{type:Boolean,required:!0},isLoading:{type:Boolean,required:!0}},data:function(){return{isTestingLive:!1,isTestingSandbox:!1,isTestLiveSuccessful:!1,isTestSandboxSuccessful:!1}},computed:{testLiveButtonDisabled:function(){return this.isLoading||!this.clientSecretFilled||!this.clientIdFilled||this.isTestingLive},testSandboxButtonDisabled:function(){return this.isLoading||!this.clientSecretSandboxFilled||!this.clientIdSandboxFilled||this.isTestingSandbox}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},onTest:function(e){var t,n,a=this;e?this.isTestingSandbox=!0:this.isTestingLive=!0;var i=e?"Sandbox":"",o=this.actualConfigData["SwagPayPal.settings.clientId".concat(i)]||(null===(t=this.allConfigs)||void 0===t?void 0:t.null["SwagPayPal.settings.clientId".concat(i)]),s=this.actualConfigData["SwagPayPal.settings.clientSecret".concat(i)]||(null===(n=this.allConfigs)||void 0===n?void 0:n.null["SwagPayPal.settings.clientSecret".concat(i)]);this.SwagPayPalApiCredentialsService.validateApiCredentials(o,s,e).then((function(t){t.credentialsValid&&(e?(a.isTestingSandbox=!1,a.isTestSandboxSuccessful=!0):(a.isTestingLive=!1,a.isTestLiveSuccessful=!0))})).catch((function(t){if(t.response.data&&t.response.data.errors){var n="<b>".concat(a.$tc("swag-paypal.settingForm.messageTestError"),"</b> ");n+=t.response.data.errors.map((function(e){return e.detail})).join(" / "),a.createNotificationError({message:n}),e?(a.isTestingSandbox=!1,a.isTestSandboxSuccessful=!1):(a.isTestingLive=!1,a.isTestLiveSuccessful=!1)}}))}}});n("4c/n");function z(e){return function(e){if(Array.isArray(e))return R(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return R(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return R(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}Shopware.Component.register("swag-paypal-cross-border",{template:'{% block swag_paypal_cross_border %}\n<sw-card\n    :title="$tc(\'swag-paypal.cross-border.cardTitle\')"\n    :disabled="isLoading"\n    class="swag-paypal-cross-border"\n    position-identifier="swag-paypal-cross-border-card"\n>\n\n    {% block swag_paypal_cross_border_warning_text %}\n    <sw-alert class="swag-paypal-cross-border__warning-text" variant="warning">\n        {{ $t(\'swag-paypal.cross-border.warningText\') }}\n    </sw-alert>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_info_text %}\n    <span class="swag-paypal-cross-border__info-text">\n        {{ $tc(\'swag-paypal.cross-border.infoText\') }}\n    </span>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_messaging_enabled %}\n    <sw-inherit-wrapper\n        v-model="actualConfigData[\'SwagPayPal.settings.crossBorderMessagingEnabled\']"\n        :inherited-value="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.crossBorderMessagingEnabled\']"\n    >\n        <template #content="props">\n            <sw-switch-field\n                name="SwagPayPal.settings.crossBorderMessagingEnabled"\n                :map-inheritance="props"\n                :label="$tc(\'swag-paypal.cross-border.crossBorderMessagingEnable\')"\n                :disabled="isLoading || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                :value="props.currentValue"\n                bordered\n                @change="props.updateCurrentValue"\n            />\n        </template>\n    </sw-inherit-wrapper>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_buyer_country_override %}\n    <sw-inherit-wrapper\n        v-model="actualConfigData[\'SwagPayPal.settings.crossBorderBuyerCountry\']"\n        :inherited-value="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.crossBorderBuyerCountry\']"\n    >\n        <template #content="props">\n            <sw-single-select\n                name="SwagPayPal.settings.crossBorderBuyerCountry"\n                :map-inheritance="props"\n                :label="$tc(\'swag-paypal.cross-border.crossBorderBuyerCountryOverride\')"\n                :disabled="isLoading || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                :value="props.currentValue ?? null"\n                :options="countryOverrideOptions"\n                @change="props.updateCurrentValue"\n            />\n        </template>\n    </sw-inherit-wrapper>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["acl"],props:{isLoading:{type:Boolean,required:!1,default:!1},actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{countryOverrideOptions:function(){var e=[{label:this.$tc("locale.en-AU"),value:"en-AU"},{label:this.$tc("locale.de-DE"),value:"de-DE"},{label:this.$tc("locale.es-ES"),value:"es-ES"},{label:this.$tc("locale.fr-FR"),value:"fr-FR"},{label:this.$tc("locale.en-GB"),value:"en-GB"},{label:this.$tc("locale.it-IT"),value:"it-IT"},{label:this.$tc("locale.en-US"),value:"en-US"}].sort((function(e,t){return e.label.localeCompare(t.label)}));return[{value:null,label:this.$tc("swag-paypal.cross-border.crossBorderBuyerCountryAuto")}].concat(z(e))}}});Shopware.Component.register("swag-paypal-express",{template:'{% block swag_paypal_content_card_channel_config_express %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-express"\n             :title="$tc(\'swag-paypal.settingForm.express.cardTitle\')"\n             :subtitle="$tc(\'swag-paypal.settingForm.express.cardSubtitle\')">\n\n        {% block swag_paypal_content_card_channel_config_express_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-express-fields">\n\n                {% block swag_paypal_content_card_channel_config_express_settings_detail_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsDetailEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsDetailEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsDetailEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsDetailEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsDetailEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_cart_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsCartEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsCartEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsCartEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsCartEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsCartEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_off_canvas_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsOffCanvasEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsOffCanvasEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsOffCanvasEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsOffCanvasEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsOffCanvasEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n\n                {% block swag_paypal_content_card_channel_config_express_settings_login_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsLoginEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsLoginEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsLoginEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsLoginEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsLoginEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_listing_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsListingEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsListingEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsListingEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsListingEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsListingEnabled.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_color %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonColor\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonColor\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonColor.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.ecsButtonColor"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonColorOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || renderSettingsDisabled"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_shape %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonShape\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonShape\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonShape.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.ecsButtonShape"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonShapeOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || renderSettingsDisabled"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_button_locale %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsButtonLanguageIso\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsButtonLanguageIso\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <swag-paypal-locale-field name="SwagPayPal.settings.ecsButtonLanguageIso"\n                                                    :mapInheritance="props"\n                                                    :label="$tc(\'swag-paypal.settingForm.express.ecsButtonLanguageIso.label\')"\n                                                    :helpText="$tc(\'swag-paypal.settingForm.express.ecsButtonLanguageIso.helpText\')"\n                                                    :disabled="props.isInherited || renderSettingsDisabled"\n                                                    :value="props.currentValue"\n                                                    @change="props.updateCurrentValue"\n                                                    @preventSave="preventSave">\n                            </swag-paypal-locale-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_express_settings_show_pay_later %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.ecsShowPayLater\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.ecsShowPayLater\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.ecsShowPayLater"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.express.ecsShowPayLater.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.express.ecsShowPayLater.helpText\')"\n                                             :disabled="props.isInherited || renderSettingsDisabled"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{buttonColorOptions:function(){return[{id:"blue",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.blue")},{id:"black",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.black")},{id:"gold",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.gold")},{id:"silver",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.silver")},{id:"white",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.white")}]},buttonShapeOptions:function(){return[{id:"pill",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.pill")},{id:"rect",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.rect")}]},renderSettingsDisabled:function(){return!(this.acl.can("swag_paypal.editor")&&(this.actualConfigData["SwagPayPal.settings.ecsDetailEnabled"]||this.actualConfigData["SwagPayPal.settings.ecsCartEnabled"]||this.actualConfigData["SwagPayPal.settings.ecsOffCanvasEnabled"]||this.actualConfigData["SwagPayPal.settings.ecsProductDetailEnabled"]||this.actualConfigData["SwagPayPal.settings.ecsListingEnabled"]))}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},preventSave:function(e){this.$emit("preventSave",e)}}});Shopware.Component.register("swag-paypal-installment",{template:'{% block swag_paypal_content_card_channel_config_installment %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-installment"\n             :title="$tc(\'swag-paypal.settingForm.installment.cardTitle\')"\n             :subtitle="$tc(\'swag-paypal.settingForm.installment.cardSubtitle\')">\n\n        {% block swag_paypal_content_card_channel_config_installment_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-installment-fields">\n\n                {# @deprecated tag:v8.0.0 - will be removed #}\n                {% block swag_paypal_content_card_channel_config_installment_settings_checkout_enabled %}\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_detail_page_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerDetailPageEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerDetailPageEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerDetailPageEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.detailPage.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.detailPage.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_cart_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerCartEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerCartEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerCartEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.cart.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.cart.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_off_canvas_cart_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerOffCanvasCartEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerOffCanvasCartEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerOffCanvasCartEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.offCanvasCart.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.offCanvasCart.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_login_page_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerLoginPageEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerLoginPageEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerLoginPageEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.loginPage.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.loginPage.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_installment_settings_footer_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.installmentBannerFooterEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.installmentBannerFooterEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.installmentBannerFooterEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.footer.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.installment.installmentBannerEnabled.footer.helpText\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e}}});n("K/IQ");Shopware.Component.register("swag-paypal-plus",{template:'{# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n{% block swag_paypal_content_card_channel_config_plus %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-plus"\n             :title="$tc(\'swag-paypal.settingForm.plus.cardTitle\')">\n\n        {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n        {% block swag_paypal_content_card_channel_config_plus_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-plus-fields">\n\n                {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                {% block swag_paypal_content_card_channel_config_plus_settings_warning %}\n                <template v-if="isPayPalPLUSActive">\n                    <sw-alert\n                        variant="warning"\n                    >\n                        <span v-html="$tc(\'swag-paypal.settingForm.plus.warning.active\')"></span>\n                    </sw-alert>\n                </template>\n\n                <template v-if="isPayPalPLUSInActive">\n                    <sw-alert\n                        variant="info"\n                    >\n                        <span v-html="$tc(\'swag-paypal.settingForm.plus.warning.inactive\')"></span>\n                    </sw-alert>\n                </template>\n                {% endblock %}\n\n                {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                {% block swag_paypal_content_card_channel_config_plus_settings_onboarding %}\n                    <p v-bind:class="{ \'swag-paypal-payal-plus-disabled\': isPayPalPLUSInActive}"\n                       v-html="$tc(\'swag-paypal.settingForm.plus.introduction\')"></p>\n                {% endblock %}\n\n                {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                {% block swag_paypal_content_card_channel_config_plus_settings_checkout_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.plusCheckoutEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.plusCheckoutEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.plusCheckoutEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.plus.plusCheckoutEnabled.label\')"\n                                             :disabled="ifItWasNotActive() || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n\n                            {# @deprecated tag:v7.0.0 - Will be removed without replacement #}\n                            {% block swag_paypal_content_card_channel_config_behaviour_settings_intent_hint %}\n                                <swag-paypal-settings-hint :hintText="$tc(\'swag-paypal.settingForm.plus.hint\')">\n                                </swag-paypal-settings-hint>\n                            {% endblock %}\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{isPayPalPLUSActive:function(){return this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"]},isPayPalPLUSInActive:function(){return!this.isPayPalPLUSActive}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},ifItWasNotActive:function(){return!this.actualConfigData["SwagPayPal.settings.plusCheckoutEnabled"]}}});Shopware.Component.register("swag-paypal-pui",{template:'{% block swag_paypal_content_card_channel_config_pui %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-pui"\n             :title="$tc(\'swag-paypal.settingForm.pui.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_pui_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-pui-fields">\n\n                {% block swag_paypal_content_card_channel_config_pui_settings_customer_service_instructions %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.puiCustomerServiceInstructions\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.puiCustomerServiceInstructions\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <sw-text-field name="SwagPayPal.settings.spbButtonLanguageIso"\n                                           :mapInheritance="props"\n                                           :label="$tc(\'swag-paypal.settingForm.pui.customerServiceInstructions.label\')"\n                                           :helpText="$tc(\'swag-paypal.settingForm.pui.customerServiceInstructions.helpText\')"\n                                           :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                           :value="props.currentValue"\n                                           @change="props.updateCurrentValue">\n                            </sw-text-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0}}});n("3FjW");Shopware.Component.register("swag-paypal-settings-icon",{template:'{% block swag_paypal_settings_icon %}\n    <icons-paypal-multicolor class="swag-paypal-settings-icon"></icons-paypal-multicolor>\n{% endblock %}\n'});Shopware.Component.register("swag-paypal-spb",{template:'{% block swag_paypal_content_card_channel_config_spb %}\n    <sw-card position-identifier="swag-paypal-card-channel-config-spb"\n             :title="$tc(\'swag-paypal.settingForm.spb.cardTitle\')">\n\n        {% block swag_paypal_content_card_channel_config_spb_settings %}\n            <div v-if="actualConfigData" class="swag-paypal-settings-spb-fields">\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_checkout_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbCheckoutEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbCheckoutEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbCheckoutEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbCheckoutEnabled.label\')"\n                                             :disabled="props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_alternaitve_payment_methods_enabled %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbAlternativePaymentMethodsEnabled\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbAlternativePaymentMethodsEnabled\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbAlternativePaymentMethodsEnabled"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.label\')"\n                                             :helpText="$tc(\'swag-paypal.settingForm.spb.spbAlternativePaymentMethodsEnabled.helpText\')"\n                                             :disabled="props.isInherited || renderSettingsDisabled"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_show_pay_later %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbShowPayLater\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbShowPayLater\']"\n                        :customInheritationCheckFunction="checkBoolFieldInheritance">\n                        <template #content="props">\n                            <sw-switch-field name="SwagPayPal.settings.spbShowPayLater"\n                                             bordered\n                                             :mapInheritance="props"\n                                             :label="$tc(\'swag-paypal.settingForm.spb.spbShowPayLater.label\')"\n                                             :disabled="props.isInherited || renderSettingsDisabled"\n                                             :value="props.currentValue"\n                                             @change="props.updateCurrentValue">\n                            </sw-switch-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_color %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbButtonColor\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonColor\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonColor.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.spbButtonColor"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonColorOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || renderSettingsDisabled"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_button_shape %}\n                    <sw-inherit-wrapper\n                        v-model="actualConfigData[\'SwagPayPal.settings.spbButtonShape\']"\n                        :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonShape\']"\n                        :customInheritationCheckFunction="checkTextFieldInheritance"\n                        :label="$tc(\'swag-paypal.settingForm.express.ecsButtonShape.label\')">\n                        <template #content="props">\n                            <sw-single-select name="SwagPayPal.settings.spbButtonShape"\n                                              labelProperty="name"\n                                              valueProperty="id"\n                                              :options="buttonShapeOptions"\n                                              :isInherited="props.isInherited"\n                                              :disabled="props.isInherited || renderSettingsDisabled"\n                                              :value="props.currentValue"\n                                              @change="props.updateCurrentValue">\n                            </sw-single-select>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n\n                {% block swag_paypal_content_card_channel_config_spb_settings_locale %}\n                    <sw-inherit-wrapper\n                            v-model="actualConfigData[\'SwagPayPal.settings.spbButtonLanguageIso\']"\n                            :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.spbButtonLanguageIso\']"\n                            :customInheritationCheckFunction="checkTextFieldInheritance">\n                        <template #content="props">\n                            <swag-paypal-locale-field name="SwagPayPal.settings.spbButtonLanguageIso"\n                                                    :mapInheritance="props"\n                                                    :label="$tc(\'swag-paypal.settingForm.spb.spbButtonLanguageIso.label\')"\n                                                    :helpText="$tc(\'swag-paypal.settingForm.spb.spbButtonLanguageIso.helpText\')"\n                                                    :disabled="props.isInherited || renderSettingsDisabled"\n                                                    :value="props.currentValue"\n                                                    @change="props.updateCurrentValue"\n                                                    @preventSave="preventSave">\n                            </swag-paypal-locale-field>\n                        </template>\n                    </sw-inherit-wrapper>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["acl"],props:{actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{buttonColorOptions:function(){return[{id:"blue",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.blue")},{id:"black",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.black")},{id:"gold",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.gold")},{id:"silver",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.silver")},{id:"white",name:this.$tc("swag-paypal.settingForm.express.ecsButtonColor.options.white")}]},buttonShapeOptions:function(){return[{id:"pill",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.pill")},{id:"rect",name:this.$tc("swag-paypal.settingForm.express.ecsButtonShape.options.rect")}]},renderSettingsDisabled:function(){return!this.acl.can("swag_paypal.editor")||!this.actualConfigData["SwagPayPal.settings.spbCheckoutEnabled"]}},methods:{checkTextFieldInheritance:function(e){return"string"!=typeof e||e.length<=0},checkBoolFieldInheritance:function(e){return"boolean"!=typeof e},preventSave:function(e){this.$emit("preventSave",e)}}});Shopware.Component.extend("swag-paypal-plugin-box-with-onboarding","sw-plugin-box",{template:'{% block sw_plugin_box_container_button %}\n<template>\n    {% block swag_paypal_plugin_box_with_button_link_to_extension %}\n        <sw-button\n            variant="ghost"\n            size="small"\n            class="sw-plugin-box__button"\n            :router-link="{ path: \'/swag/paypal/index\' }"\n        >\n            {{ $tc(\'sw-plugin-box.buttonPluginSettings\') }}\n        </sw-button>\n    {% endblock %}\n</template>\n{% endblock %}\n',props:{paymentMethod:{type:Object,required:!0}},methods:{createdComponent:function(){this.$super("createdComponent")}}});n("Eugn");var B=Shopware.Component,M=Shopware.Utils.debounce;B.extend("swag-paypal-locale-field","sw-text-field",{template:'{% block sw_text_field %}\n    {% block swag_paypal_locale_field %}\n        <div class="swag-paypal-locale-field">\n\n            {% block swag_paypal_locale_field_contextual_field %}\n                <sw-contextual-field class="sw-field--text"\n                                     v-bind="$attrs"\n                                     :name="formFieldName"\n                                     :error="error"\n                                     @inheritance-restore="$emit(\'inheritance-restore\', $event)"\n                                     @inheritance-remove="$emit(\'inheritance-remove\', $event)"\n                                     v-on="$listeners">\n\n                    <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }">\n                        <input type="text"\n                               :name="identification"\n                               :id="identification"\n                               :disabled="disabled"\n                               :value="currentValue"\n                               :placeHolder="placeholder"\n                               @input="onInput"\n                               @focus="setFocusClass"\n                               @blur="onBlur($event, removeFocusClass)"\n                               v-on="additionalListeners">\n                    </template>\n                </sw-contextual-field>\n            {% endblock %}\n\n            {% block swag_paypal_locale_field_information %}\n                <p class="swag-paypal-locale-field__text">\n\n                    {% block swag_paypal_locale_field_information_text %}\n                        {{ $tc(\'swag-paypal.settingForm.locale-field.infobox.text\') }}\n                    {% endblock %}\n\n                    {% block swag_paypal_locale_field_information_href %}\n                        <sw-external-link class="swag-paypal-locale-field__text-href"\n                                          href="https://developer.paypal.com/docs/api/reference/locale-codes/">\n                            {{ $tc(\'swag-paypal.settingForm.locale-field.infobox.href\') }}\n                        </sw-external-link>\n                    {% endblock %}\n\n                </p>\n            {% endblock %}\n\n        </div>\n    {% endblock %}\n\n{% endblock %}\n',data:function(){return{error:null}},methods:{onInput:M((function(e){this.checkValue(e.target.value)}),350),onBlur:function(e,t){t(),this.checkValue(e.target.value)},checkValue:function(e){if(this.$emit("change",e||""),!e||/^[a-z]{2}_[A-Z]{2}$/.exec(e))return this.preventSave(!1),void(this.error=null);this.preventSave(!0),this.error={code:1,detail:this.$tc("swag-paypal.settingForm.locale-field.error.detail")}},preventSave:function(e){this.$emit("preventSave",e)}}}),Shopware.Module.register("swag-paypal",{type:"plugin",name:"SwagPayPal",title:"swag-paypal.general.mainMenuItemGeneral",description:"swag-paypal.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"regular-cog",routes:{index:{component:"swag-paypal",path:":tab?",meta:{parentPath:"sw.settings.index",privilege:"swag_paypal.viewer"}}},settingsItem:{group:"plugins",to:"swag.paypal.index",iconComponent:"swag-paypal-settings-icon",backgroundEnabled:!0,privilege:"swag_paypal.viewer"}});n("1B+8");var N=Shopware.Component,V=Shopware.Utils;N.register("swag-paypal-payment-action-capture",{template:'{% block swag_paypal_payment_action_capture %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_capture_max_amount %}\n            <sw-text-field v-model="maxCaptureValue"\n                           :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n                           :disabled="true">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_value %}\n            <sw-number-field v-model="captureValue"\n                             :max="maxCaptureValue"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')">\n                <template #suffix>\n                    {{ currency }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_is_final_capture %}\n            <sw-checkbox-field v-model="isFinalCapture"\n                               :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')">\n            </sw-checkbox-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_hint %}\n            <sw-alert v-if="showHint">\n                {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_submit_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="capture">\n                    {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},maxCaptureValue:{type:Number,required:!0},orderId:{type:String,required:!0}},data:function(){return{isFinalCapture:!0,captureValue:this.maxCaptureValue,isLoading:!0,currency:this.paymentResource.transactions[0].amount.currency}},computed:{showHint:function(){return this.isFinalCapture&&this.captureValue!==this.maxCaptureValue}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.isLoading=!1},capture:function(){var e=this,t=this.captureValue,n=this.currency,a=this.isFinalCapture,i=this.paymentResource.intent,o=this.getResourceId(this.paymentResource);this.isLoading=!0,this.SwagPayPalPaymentService.capturePayment(this.orderId,i,o,t,n,a).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.captureAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(V.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))},getResourceId:function(e){var t=null;return e.transactions[0].related_resources.forEach((function(e){e.authorization&&(t=e.authorization.id),e.order&&(t=e.order.id)})),t}}});var q="refunded",U="voided",G="captured",H="completed",Z="capture",K="sale",Y="failed",W="cancelled",Q=Shopware,J=Q.Component,X=Q.Filter,ee=Shopware.Utils;J.register("swag-paypal-payment-action-refund",{template:'{% block swag_paypal_payment_action_refund %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_refund_invoice_select %}\n            <sw-select-field v-model="selectedCaptureId"\n                             :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n                             @change="preserveCapture">\n                <option v-for="capture in captures"\n                        :value="capture.id">\n                    {{ capture.label }}\n                </option>\n            </sw-select-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_invoice_number %}\n            <swag-paypal-text-field v-model="refundInvoiceNumber"\n                                    maxLength="127"\n                                    :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n                                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_reason %}\n            <swag-paypal-text-field v-model="refundReason"\n                                    maxLength="30"\n                                    :label="$tc(\'swag-paypal-payment.refundAction.refundReason.label\')"\n                                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundReason.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_amount %}\n            <sw-number-field v-model="refundAmount"\n                             :max="refundableAmount"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n                             :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')">\n                <template #suffix>\n                    {{ selectedCapture.currency }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_description %}\n            <sw-textarea-field v-model="refundDescription"\n                               :placeholder="$tc(\'swag-paypal-payment.refundAction.refundDescription.placeholder\')"\n                               :label="$tc(\'swag-paypal-payment.refundAction.refundDescription.label\')">\n            </sw-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="refund">\n                    {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{captures:[],selectedCapture:{},existingRefunds:[],refundAmount:0,refundableAmount:0,refundDescription:"",refundReason:"",refundInvoiceNumber:"",isLoading:!0,selectedCaptureId:""}},computed:{dateFilter:function(){return X.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getRefundableCaptures(),this.mapRefunds(),this.selectedCaptureId=this.captures[0].id,this.isLoading=!1,this.preserveCapture(),this.refundAmount=Number(this.captures[0].refundableAmount)},getRefundableCaptures:function(){var e=this,t=this.paymentResource.transactions[0].related_resources;this.captures=t.reduce((function(t,n){if(n.sale){var a=n.sale;a.state!==q&&t.push(e.formatCapture(a,K))}if(n.capture){var i=n.capture;i.state!==q&&t.push(e.formatCapture(i,Z))}return n.refund&&e.existingRefunds.push(n.refund),t}),this.captures)},formatCapture:function(e,t){var n=this.dateFilter(e.create_time);return{label:"".concat(n," (").concat(e.amount.total," ").concat(e.amount.currency,")")+" - ".concat(e.id," [").concat(e.state,"]"),id:e.id,refundableAmount:e.amount.total,currency:e.amount.currency,type:t}},mapRefunds:function(){var e=this;this.existingRefunds.forEach((function(t){var n=e.captures.find((function(e){switch(e.type){case Z:return t.capture_id===e.id;case K:return t.sale_id===e.id;default:return!1}}));if(n){var a=Number(t.amount.total);a<0&&(a*=-1),n.refundableAmount-=a}}))},preserveCapture:function(){var e=this,t=this.captures.find((function(t){return t.id===e.selectedCaptureId}));this.selectedCapture=t,this.refundableAmount=Number(t.refundableAmount),this.refundAmount=Number(t.refundableAmount)},refund:function(){var e=this;this.isLoading=!0;var t=this.refundAmount,n=this.refundDescription,a=this.selectedCapture.currency,i=this.selectedCapture.type,o=this.selectedCapture.id,s=this.refundReason,r=this.refundInvoiceNumber;0===t&&(t=this.refundableAmount),this.SwagPayPalPaymentService.refundPayment(this.orderId,i,o,t,a,n,s,r).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.refundAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(ee.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var te=Shopware.Component,ne=Shopware.Utils;te.register("swag-paypal-payment-action-void",{template:'{% block swag_paypal_paymemnt_action_void %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.void`)"\n              @modal-close="closeModal">\n\n        {% block swag_paypal_paymemnt_action_void_headline %}\n            <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n        {% endblock %}\n\n        <template #modal-footer>\n\n            {% block swag_paypal_paymemnt_action_void_cancel_button %}\n                <sw-button @click="closeModal">\n                    {{ $tc(\'global.default.no\') }}\n                </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_paymemnt_action_void_confirm_button %}\n                <sw-button variant="primary"\n                           @click="voidPayment">\n                    {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n                </sw-button>\n            {% endblock %}\n\n        </template>\n\n        <sw-loader v-if="isLoading"\n                   size="43px">\n        </sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalPaymentService"],mixins:["notification"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{isLoading:!1}},methods:{voidPayment:function(){var e=this;this.isLoading=!0;var t=this.paymentResource.intent,n=this.getResourceId(),a=this.$route.params.id;this.SwagPayPalPaymentService.voidPayment(this.orderId,t,n,a).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.voidAction.successMessage")}),e.isLoading=!1,e.closeModal(),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(ne.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))},getResourceId:function(){var e=this.paymentResource.transactions[0].related_resources[0];return e.order?e.order.id:e.authorization.id},closeModal:function(){this.$emit("modal-close")}}}),Shopware.Component.register("swag-paypal-payment-actions",{template:'{% block swag_paypal_payment_actions %}\n    <div>\n        <div class="swag-paypal-payment-actions__button-container">\n            <div class="swag-paypal-payment-actions__authorize-button-group">\n\n                {% block swag_paypal_payment_actions_void %}\n                    <sw-button v-if="showVoidButton"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'void\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_capture %}\n                    <sw-button v-if="captureableAmount > 0"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'capture\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n                    </sw-button>\n                {% endblock %}\n            </div>\n\n            {% block swag_paypal_payment_actions_refund %}\n                <sw-button variant="primary"\n                           size="small"\n                           :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n                           @click="spawnModal(\'refund\')">\n                    {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n                </sw-button>\n            {% endblock %}\n\n        </div>\n\n        {% block swag_paypal_payment_actions_modal %}\n                {% block swag_paypal_payment_actions_modal_capture %}\n                    <swag-paypal-payment-action-capture v-if="modalType === \'capture\'"\n                                                        :orderId="orderId"\n                                                        :paymentResource="paymentResource"\n                                                        :maxCaptureValue="captureableAmount"\n                                                        @modal-close="closeModal">\n                    </swag-paypal-payment-action-capture>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_modal_refund %}\n                    <swag-paypal-payment-action-refund v-if="modalType === \'refund\'"\n                                                       :orderId="orderId"\n                                                       :paymentResource="paymentResource"\n                                                       @modal-close="closeModal">\n                    </swag-paypal-payment-action-refund>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_modal_void %}\n                    <swag-paypal-payment-action-void v-if="modalType === \'void\'"\n                                                     :orderId="orderId"\n                                                     :paymentResource="paymentResource"\n                                                     @modal-close="closeModal">\n                    </swag-paypal-payment-action-void>\n                {% endblock %}\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["acl"],props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{modalType:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1,relatedResources:null}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.relatedResources=this.paymentResource.transactions[0].related_resources,this.setPaymentActionAmounts(),this.setShowVoidButton(),this.captureableAmount=this.formatAmount(this.captureableAmount),this.refundableAmount=this.formatAmount(this.refundableAmount)},spawnModal:function(e){this.modalType=e},closeModal:function(){this.modalType=""},setPaymentActionAmounts:function(){var e=this;null!==this.relatedResources&&this.relatedResources.forEach((function(t){if(t.authorization&&t.authorization.state!==H&&(e.captureableAmount+=Number(t.authorization.amount.total)),t.order&&t.order.state!==H&&(e.captureableAmount+=Number(t.order.amount.total)),t.sale&&(e.refundableAmount+=Number(t.sale.amount.total)),t.capture){var n=Number(t.capture.amount.total);e.captureableAmount-=n,e.refundableAmount+=n}if(t.refund&&t.refund.state!==Y&&t.refund.state!==W){var a=Number(t.refund.amount.total);a>0&&(a*=-1),e.refundableAmount+=a}}))},setShowVoidButton:function(){if(null!==this.relatedResources){var e=this.relatedResources[0];if(e){var t=[U,G,H];if(!e.sale){if(e.order){var n=e.order;if(t.includes(n.state))return void(this.captureableAmount=0);this.showVoidButton=!0}if(e.authorization){var a=e.authorization;if(t.includes(a.state))return void(this.captureableAmount=0);this.showVoidButton=!0}}}}},formatAmount:function(e){return Number("".concat(Math.round("".concat(e,"e2")),"e-2"))}}});var ae=Shopware.Component,ie=Shopware.Utils;ae.register("swag-paypal-payment-action-v2-capture",{template:'{% block swag_paypal_payment_action_capture_v2 %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.capture`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_capture_v2_max_amount %}\n            <sw-text-field v-model="captureableAmount"\n                           :label="$tc(\'swag-paypal-payment.captureAction.maxAmount\')"\n                           :disabled="true">\n                <template #suffix v-if="currencyCode">\n                    {{ currencyCode }}\n                </template>\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_amount %}\n            <sw-number-field v-model="captureAmount"\n                             :max="captureableAmount"\n                             :min="0"\n                             :label="$tc(\'swag-paypal-payment.captureAction.currentAmount\')">\n                <template #suffix v-if="currencyCode">\n                    {{ currencyCode }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_invoice_number %}\n            <swag-paypal-text-field\n                    v-model="captureInvoiceNumber"\n                    maxLength="127"\n                    :label="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.label\')"\n                    :placeholder="$tc(\'swag-paypal-payment.captureAction.captureInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_note_to_payer %}\n            <swag-paypal-textarea-field\n                    v-model="captureNoteToPayer"\n                    maxLength="255"\n                    :placeholder="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.placeholder\')"\n                    :label="$tc(\'swag-paypal-payment.captureAction.captureNoteToPayer.label\')">\n            </swag-paypal-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_is_final_capture %}\n            <sw-checkbox-field\n                    v-model="isFinalCapture"\n                    :label="$tc(\'swag-paypal-payment.captureAction.isFinal\')">\n            </sw-checkbox-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_hint %}\n            <sw-alert v-if="showHint">\n                {{ $tc(\'swag-paypal-payment.captureAction.isFinalHint\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_capture_v2_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="capture">\n                    {{ $tc(\'swag-paypal-payment.captureAction.button.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},captureableAmount:{type:Number,required:!0}},data:function(){return{authorization:{},isFinalCapture:!0,captureAmount:this.captureableAmount,captureInvoiceNumber:"",captureNoteToPayer:"",currencyCode:"",isLoading:!0}},computed:{showHint:function(){return this.isFinalCapture&&this.captureAmount!==this.captureableAmount}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.authorization=this.paypalOrder.purchase_units[0].payments.authorizations[0],this.currencyCode=this.authorization.amount.currency_code,this.isLoading=!1},capture:function(){var e=this;this.isLoading=!0;var t=this.captureAmount;0===t&&(t=this.captureableAmount),this.SwagPayPalOrderService.captureAuthorization(this.orderTransactionId,this.authorization.id,this.currencyCode,t,this.captureInvoiceNumber,this.captureNoteToPayer,this.paypalPartnerAttributionId,this.isFinalCapture).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.captureAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(ie.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var oe="REFUNDED",se="CREATED",re="PARTIALLY_CAPTURED",le="PENDING",ce=Shopware,pe=ce.Component,de=ce.Filter,ue=Shopware.Utils;pe.register("swag-paypal-payment-action-v2-refund",{template:'{% block swag_paypal_payment_action_refund_v2 %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.refund`)"\n              @modal-close="$emit(\'modal-close\')">\n\n        {% block swag_paypal_payment_action_refund_v2_capture_select %}\n            <sw-select-field\n                    v-model="selectedCaptureId"\n                    :label="$tc(\'swag-paypal-payment.refundAction.invoiceSelect.label\')"\n                    @change="setCapture">\n                <option v-for="capture in captures"\n                        :value="capture.id">\n                    {{ dateFilter(capture.create_time) }} ({{ capture.amount.value }} {{ capture.amount.currency_code }}) - {{ capture.id }} [{{ capture.status }}]\n                </option>\n            </sw-select-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_invoice_number %}\n            <swag-paypal-text-field\n                    v-model="refundInvoiceNumber"\n                    maxLength="127"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.label\')"\n                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundInvoiceNumber.placeholder\')">\n            </swag-paypal-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_amount %}\n            <sw-number-field\n                    v-model="refundAmount"\n                    :max="Number(selectedCapture.amount.value)"\n                    :min="0"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundAmount.label\')"\n                    :helpText="$tc(\'swag-paypal-payment.refundAction.refundAmount.helpText\')">\n                <template #suffix>\n                    {{ selectedCapture.amount.currency_code }}\n                </template>\n            </sw-number-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_note_to_payer %}\n            <swag-paypal-textarea-field\n                    v-model="refundNoteToPayer"\n                    maxLength="255"\n                    :placeholder="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.placeholder\')"\n                    :label="$tc(\'swag-paypal-payment.refundAction.refundNoteToPayer.label\')">\n            </swag-paypal-textarea-field>\n        {% endblock %}\n\n        {% block swag_paypal_payment_action_refund_v2_confirm_button %}\n            <template #modal-footer>\n                <sw-button variant="primary"\n                           @click="refund">\n                    {{ $tc(\'swag-paypal-payment.refundAction.confirmButton.text\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        <sw-loader v-if="isLoading"></sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data:function(){return{captures:[],selectedCapture:{},refundAmount:0,refundInvoiceNumber:"",refundNoteToPayer:"",selectedCaptureId:"",isLoading:!0}},computed:{dateFilter:function(){return de.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.getRefundableCaptures();var e=this.captures[0];this.selectedCaptureId=e.id,this.selectedCapture=e,this.refundAmount=Number(e.amount.value),this.isLoading=!1},getRefundableCaptures:function(){var e=this.paypalOrder.purchase_units[0].payments.captures,t=[];e.forEach((function(e){e.status!==oe&&t.push(e)})),this.captures=t},setCapture:function(){var e=this;this.selectedCapture=this.captures.find((function(t){return t.id===e.selectedCaptureId})),this.refundAmount=Number(this.selectedCapture.amount.value)},refund:function(){var e=this;this.isLoading=!0;var t=this.refundAmount;0===t&&(t=this.selectedCapture.amount.value),this.SwagPayPalOrderService.refundCapture(this.orderTransactionId,this.selectedCapture.id,this.paypalOrder.id,this.selectedCapture.amount.currency_code,t,this.refundInvoiceNumber,this.refundNoteToPayer,this.paypalPartnerAttributionId).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.refundAction.successMessage")}),e.isLoading=!1,e.$emit("modal-close"),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(ue.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))}}});var ge=Shopware.Component,he=Shopware.Utils;ge.register("swag-paypal-payment-action-v2-void",{template:'{% block swag_paypal_paymemnt_action_v2_void %}\n    <sw-modal variant="small"\n              :title="$tc(`swag-paypal-payment.modal.title.void`)"\n              @modal-close="closeModal">\n\n        {% block swag_paypal_paymemnt_action_v2_void_headline %}\n            <p>{{ $tc(\'swag-paypal-payment.voidAction.confirm.message\') }}</p>\n        {% endblock %}\n\n        <template #modal-footer>\n\n            {% block swag_paypal_paymemnt_action_v2_void_cancel_button %}\n                <sw-button @click="closeModal">\n                    {{ $tc(\'global.default.no\') }}\n                </sw-button>\n            {% endblock %}\n\n            {% block swag_paypal_paymemnt_action_v2_void_confirm_button %}\n                <sw-button variant="primary"\n                           @click="voidPayment">\n                    {{ $tc(\'swag-paypal-payment.voidAction.confirm.button.confirm\') }}\n                </sw-button>\n            {% endblock %}\n\n        </template>\n\n        <sw-loader v-if="isLoading" size="43px">\n        </sw-loader>\n    </sw-modal>\n{% endblock %}\n',inject:["SwagPayPalOrderService"],mixins:["notification"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0}},data:function(){return{isLoading:!1}},methods:{voidPayment:function(){var e=this;this.isLoading=!0;var t=this.paypalOrder.purchase_units[0].payments.authorizations[0];this.SwagPayPalOrderService.voidAuthorization(this.orderTransactionId,t.id,this.paypalPartnerAttributionId).then((function(){e.createNotificationSuccess({message:e.$tc("swag-paypal-payment.voidAction.successMessage")}),e.isLoading=!1,e.closeModal(),e.$nextTick((function(){e.$router.replace("".concat(e.$route.path,"?hash=").concat(he.createId()))}))})).catch((function(t){try{e.createNotificationError({message:"".concat(t.response.data.errors[0].title,": ").concat(t.response.data.errors[0].detail),autoClose:!1})}catch(n){e.createNotificationError({message:"".concat(t.title,": ").concat(t.message),autoClose:!1})}finally{e.isLoading=!1}}))},closeModal:function(){this.$emit("modal-close")}}});n("0wGc");Shopware.Component.register("swag-paypal-payment-actions-v2",{template:'{% block swag_paypal_payment_actions_v2 %}\n    <div>\n        <div class="swag-paypal-payment-actions-v2__button-container">\n            <div>\n                {% block swag_paypal_payment_actions_v2_void %}\n                    <sw-button v-if="showVoidButton"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'void\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.void\') }}\n                    </sw-button>\n                {% endblock %}\n\n                {% block swag_paypal_payment_actions_v2_capture %}\n                    <sw-button v-if="captureableAmount > 0"\n                               size="small"\n                               :disabled="!acl.can(\'order.editor\')"\n                               @click="spawnModal(\'capture\')">\n                        {{ $tc(\'swag-paypal-payment.buttons.label.capture\') }}\n                    </sw-button>\n                {% endblock %}\n            </div>\n\n            {% block swag_paypal_payment_actions_v2_refund %}\n                <sw-button variant="primary"\n                           size="small"\n                           :disabled="refundableAmount <= 0 || !acl.can(\'order.editor\')"\n                           @click="spawnModal(\'refund\')">\n                    {{ $tc(\'swag-paypal-payment.buttons.label.refund\') }}\n                </sw-button>\n            {% endblock %}\n\n        </div>\n\n        {% block swag_paypal_payment_actions_v2_modal %}\n            {% block swag_paypal_payment_actions_v2_modal_refund %}\n                <swag-paypal-payment-action-v2-refund\n                        v-if="modalType === \'refund\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-refund>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_v2_modal_capture %}\n                <swag-paypal-payment-action-v2-capture\n                        v-if="modalType === \'capture\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        :captureableAmount="captureableAmount"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-capture>\n            {% endblock %}\n\n            {% block swag_paypal_payment_actions_v2_modal_void %}\n                <swag-paypal-payment-action-v2-void\n                        v-if="modalType === \'void\'"\n                        :orderTransactionId="orderTransactionId"\n                        :paypalOrder="paypalOrder"\n                        :paypalPartnerAttributionId="paypalPartnerAttributionId"\n                        @modal-close="closeModal">\n                </swag-paypal-payment-action-v2-void>\n            {% endblock %}\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["acl"],props:{paypalOrder:{type:Object,required:!0},orderTransactionId:{type:String,required:!0},paypalPartnerAttributionId:{type:String,required:!0},refundableAmount:{type:Number,required:!0},captureableAmount:{type:Number,required:!0},showVoidButton:{type:Boolean,required:!0}},data:function(){return{modalType:""}},methods:{spawnModal:function(e){this.modalType=e},closeModal:function(){this.modalType=""}}});var ye=Shopware,fe=ye.Component,_e=ye.Filter;fe.register("swag-paypal-payment-details-v1",{template:'{% block swag_paypal_payment_details_v1 %}\n    <div class="swag-paypal-payment-details_v1">\n        <sw-card position-identifier="swag-paypal-payment-details-v1"\n                 :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')">\n            <template #grid>\n\n                {% block swag_paypal_payment_actions_section %}\n                    <sw-card-section secondary\n                                     slim>\n                        <swag-paypal-payment-actions :orderId="orderId" :paymentResource="paymentResource">\n                        </swag-paypal-payment-actions>\n                    </sw-card-section>\n                {% endblock %}\n\n                <sw-card-section divider="top">\n                    <sw-container columns="1fr"\n                                  gap="0px 30px">\n\n                        {% block swag_paypal_payment_detail_invoice %}\n                            {% block swag_paypal_payment_detail_invoice_heading %}\n                                <h3>\n                                    {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                                </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_invoice_list %}\n                                <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                                    <dd>{{ amount.total }} {{ currency }}</dd>\n\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                                    <dd> {{ amount.details.subtotal }} {{ currency }}</dd>\n\n                                    <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                                    <dd> {{ amount.details.shipping }} {{ currency }}</dd>\n                                </sw-description-list>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment %}\n                                {% block swag_paypal_payment_detail_payment_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                        <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paymentResource.intent}`) }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                        <dd>{{ paymentResource.id }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.cartId\') }}</dt>\n                                        <dd>{{ paymentResource.cart }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                        <dd>{{ paymentResource.state }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                        <dd>{{ createDateTime }}</dd>\n\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                        <dd>{{ updateDateTime }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer %}\n                                {% block swag_paypal_payment_detail_customer_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_customer_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                        <dd>{{ payerId }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n                        {% endblock %}\n\n                    </sw-container>\n                </sw-card-section>\n            </template>\n        </sw-card>\n\n        {% block swag_paypal_payment_transaction_history_card %}\n            <sw-card position-identifier="swag-paypal-payment-transaction-history-v1"\n                     :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')">\n                <template #grid>\n\n                    {% block swag_paypal_payment_transaction_history_grid %}\n                        <sw-data-grid :dataSource="relatedResources"\n                                      :columns="relatedResourceColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n                        </sw-data-grid>\n                    {% endblock %}\n\n                </template>\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',props:{paymentResource:{type:Object,required:!0},orderId:{type:String,required:!0}},data:function(){return{relatedResources:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:""}},computed:{dateFilter:function(){return _e.getByName("date")},relatedResourceColumns:function(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"paymentMode",label:this.$tc("swag-paypal-payment.transactionHistory.types.paymentMode"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.createDateTime=this.formatDate(this.paymentResource.create_time),this.updateDateTime=this.formatDate(this.paymentResource.update_time),this.amount=this.paymentResource.transactions[0].amount,this.currency=this.paymentResource.transactions[0].amount.currency,this.paymentResource.payer&&this.paymentResource.payer.payer_info&&(this.payerId=this.paymentResource.payer.payer_info.payer_id),this.setRelatedResources()},setRelatedResources:function(){var e=this,t=this.paymentResource.transactions[0].related_resources;null!==t&&t.forEach((function(t){t.sale&&e.pushRelatedResource("sale",t.sale),t.authorization&&e.pushRelatedResource("authorization",t.authorization),t.order&&e.pushRelatedResource("order",t.order),t.refund&&e.pushRelatedResource("refund",t.refund),t.capture&&e.pushRelatedResource("capture",t.capture)}))},pushRelatedResource:function(e,t){var n=null,a=t.amount.currency;t.transaction_fee&&(n="".concat(t.transaction_fee.value," ").concat(a)),this.relatedResources.push({id:t.id,type:this.$tc("swag-paypal-payment.transactionHistory.states.".concat(e)),total:"".concat(t.amount.total," ").concat(a),create:this.formatDate(t.create_time),createRaw:t.create_time,update:this.formatDate(t.update_time),transactionFee:n,status:t.state,paymentMode:t.payment_mode}),this.relatedResources.sort((function(e,t){return new Date(e.createRaw)-new Date(t.createRaw)}))},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})}}});var me=Shopware,we=me.Component,be=me.Filter;we.register("swag-paypal-payment-details-v2",{template:'{% block swag_paypal_payment_details_v2 %}\n    <div class="swag-paypal-payment-details_v2">\n        <sw-card position-identifier="swag-paypal-payment-details-v2"\n                 :title="$tc(\'swag-paypal-payment.paymentDetails.cardTitle\')">\n            <template #grid>\n\n                {% block swag_paypal_payment_actions_section %}\n                    <sw-card-section secondary slim>\n                        <swag-paypal-payment-actions-v2\n                                :orderTransactionId="orderTransaction.id"\n                                :paypalOrder="paypalOrder"\n                                :paypalPartnerAttributionId="orderTransaction.customFields.swag_paypal_partner_attribution_id"\n                                :refundableAmount="refundableAmount"\n                                :captureableAmount="captureableAmount"\n                                :showVoidButton="showVoidButton">\n                        </swag-paypal-payment-actions-v2>\n                    </sw-card-section>\n                {% endblock %}\n\n                <sw-card-section divider="top">\n\n                        {% block swag_paypal_payment_detail_invoice %}\n                            {% block swag_paypal_payment_detail_invoice_heading %}\n                                <h3>\n                                    {{ $tc(\'swag-paypal-payment.paymentDetails.invoice.heading\') }}\n                                </h3>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_invoice_list %}\n                                <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n\n                                    {% block swag_paypal_payment_detail_invoice_list_total %}\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.totalAmount\') }}</dt>\n                                        <dd>{{ amount.value }} {{ currency }}</dd>\n                                    {% endblock %}\n\n                                    <template v-if="amount.breakdown">\n                                        {% block swag_paypal_payment_detail_invoice_list_sub_total %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.subTotal\') }}</dt>\n                                            <dd> {{ amount.breakdown.item_total.value }} {{ currency }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_discount %}\n                                            <template v-if="amount.breakdown.discount">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.discount\') }}</dt>\n                                                <dd> {{ amount.breakdown.discount.value }} {{ currency }}</dd>\n                                            </template>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_handling %}\n                                            <template v-if="amount.breakdown.handling">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.handling\') }}</dt>\n                                                <dd> {{ amount.breakdown.handling.value }} {{ currency }}</dd>\n                                            </template>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_insurance %}\n                                            <template v-if="amount.breakdown.insurance">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.insurance\') }}</dt>\n                                                <dd> {{ amount.breakdown.insurance.value }} {{ currency }}</dd>\n                                            </template>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping\') }}</dt>\n                                            <dd> {{ amount.breakdown.shipping.value }} {{ currency }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_invoice_list_shipping_discount %}\n                                            <template v-if="amount.breakdown.insurance">\n                                                <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.invoice.shipping_discount\') }}</dt>\n                                                <dd> {{ amount.breakdown.shipping_discount.value }} {{ currency }}</dd>\n                                            </template>\n                                        {% endblock %}\n                                    </template>\n\n                                </sw-description-list>\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_payment %}\n                                {% block swag_paypal_payment_detail_payment_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.payment.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_payment_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                        {% block swag_paypal_payment_detail_payment_list_intent %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.intent\') }}</dt>\n                                            <dd>{{ $tc(`swag-paypal.settingForm.behavior.intent.${paypalOrder.intent}`) }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_id %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.paymentId\') }}</dt>\n                                            <dd>{{ paypalOrder.id }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_status %}\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.state\') }}</dt>\n                                            <dd>{{ paypalOrder.status }}</dd>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_create_time %}\n                                        <template v-if="createDateTime">\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.createTime\') }}</dt>\n                                            <dd>{{ createDateTime }}</dd>\n                                        </template>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_payment_detail_payment_list_update_time %}\n                                        <template v-if="updateDateTime">\n                                            <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.payment.updateTime\') }}</dt>\n                                            <dd>{{ updateDateTime }}</dd>\n                                        </template>\n                                        {% endblock %}\n\n                                    </sw-description-list>\n                                {% endblock %}\n                            {% endblock %}\n\n                            {% block swag_paypal_payment_detail_customer %}\n                            <template v-if="payerId">\n\n                                {% block swag_paypal_payment_detail_customer_heading %}\n                                    <h3 class="swag-paypal-payment-detail__heading">\n                                        {{ $tc(\'swag-paypal-payment.paymentDetails.customer.heading\') }}\n                                    </h3>\n                                {% endblock %}\n\n                                {% block swag_paypal_payment_detail_customer_list %}\n                                    <sw-description-list class="swag-paypal-payment-detail__data" grid="1fr 1fr">\n                                        <dt>{{ $tc(\'swag-paypal-payment.paymentDetails.customer.payerId\') }}</dt>\n                                        <dd>{{ payerId }}</dd>\n                                    </sw-description-list>\n                                {% endblock %}\n\n                            </template>\n                            {% endblock %}\n                        {% endblock %}\n\n                </sw-card-section>\n            </template>\n        </sw-card>\n\n        {% block swag_paypal_payment_pui_details %}\n            <swag-paypal-pui-details v-if="puiDetails"\n                                     :details="puiDetails"\n                                     :purchase-unit-amount="amount"\n            ></swag-paypal-pui-details>\n        {% endblock %}\n\n        {% block swag_paypal_payment_transaction_history_card %}\n            <sw-card position-identifier="swag-paypal-payment-transaction-history-v2"\n                     :title="$tc(\'swag-paypal-payment.transactionHistory.cardTitle\')">\n                <template #grid>\n\n                    {% block swag_paypal_payment_transaction_history_grid %}\n                        <sw-data-grid :dataSource="payments"\n                                      :columns="paymentColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n                        </sw-data-grid>\n                    {% endblock %}\n                </template>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{paypalOrder:{type:Object,required:!0},orderTransaction:{type:Object,required:!0},orderTransactionId:{type:String,required:!1,default:""},paypalPartnerAttributionId:{type:String,required:!1,default:""}},data:function(){return{payments:[],createDateTime:"",updateDateTime:"",currency:"",amount:{},payerId:"",refundableAmount:0,captureableAmount:0,showVoidButton:!1}},computed:{dateFilter:function(){return be.getByName("date")},paymentColumns:function(){return[{property:"type",label:this.$tc("swag-paypal-payment.transactionHistory.types.type"),rawData:!0},{property:"id",label:this.$tc("swag-paypal-payment.transactionHistory.types.trackingId"),rawData:!0},{property:"total",label:this.$tc("swag-paypal-payment.transactionHistory.types.amount"),rawData:!0},{property:"status",label:this.$tc("swag-paypal-payment.transactionHistory.types.state"),rawData:!0},{property:"transactionFee",label:this.$tc("swag-paypal-payment.transactionHistory.types.transactionFee"),rawData:!0},{property:"create",label:this.$tc("swag-paypal-payment.transactionHistory.types.createTime"),rawData:!0},{property:"update",label:this.$tc("swag-paypal-payment.transactionHistory.types.updateTime"),rawData:!0}]},puiDetails:function(){return this.orderTransaction.customFields.swag_paypal_pui_payment_instruction}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e,t;this.createDateTime=this.formatDate(this.paypalOrder.create_time),this.updateDateTime=this.formatDate(this.paypalOrder.update_time),this.amount=this.paypalOrder.purchase_units[0].amount,this.currency=this.amount.currency_code,this.payerId=null!==(e=null===(t=this.paypalOrder.payer)||void 0===t?void 0:t.payer_id)&&void 0!==e?e:"",this.setPayments()},setPayments:function(){var e=this,t=this.paypalOrder.purchase_units[0].payments;if(null!==t){var n=t.authorizations,a=t.captures,i=t.refunds;null!==n&&n.forEach((function(t){e.pushPayment("authorization",t);var n=t.status;n!==se&&n!==re||(e.captureableAmount+=Number(t.amount.value),e.showVoidButton=!0),n===le&&(e.showVoidButton=!0)})),null!==a&&a.forEach((function(t){e.pushPayment("capture",t);var n=Number(t.amount.value);e.refundableAmount+=n,e.captureableAmount-=n})),null!==i&&i.forEach((function(t){e.pushPayment("refund",t),e.refundableAmount-=Number(t.amount.value)})),this.refundableAmount=this.formatAmount(this.refundableAmount),this.captureableAmount=this.formatAmount(this.captureableAmount)}},pushPayment:function(e,t){this.payments.push({id:t.id,type:this.$tc("swag-paypal-payment.transactionHistory.states.".concat(e)),total:"".concat(t.amount.value," ").concat(t.amount.currency_code),create:this.formatDate(t.create_time),createRaw:t.create_time,update:this.formatDate(t.update_time),transactionFee:this.getTransactionFee(e,t),status:t.status}),this.payments.sort((function(e,t){return new Date(e.createRaw)-new Date(t.createRaw)}))},getTransactionFee:function(e,t){if("capture"===e){var n=t.seller_receivable_breakdown;if(null===n)return null;var a=n.paypal_fee;return null==a?null:"".concat(a.value," ").concat(a.currency_code)}if("refund"===e){var i=t.seller_payable_breakdown;if(null===i)return null;var o=i.paypal_fee;return null===o?null:"".concat(o.value," ").concat(o.currency_code)}return null},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatAmount:function(e){return Number("".concat(Math.round("".concat(e,"e2")),"e-2"))}}});n("4y4Y");function ve(e){return ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ve(e)}function Se(){Se=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,i){var o=t&&t.prototype instanceof u?t:u,s=Object.create(o.prototype),r=new C(i||[]);return a(s,"_invoke",{value:v(e,n,r)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d={};function u(){}function g(){}function h(){}var y={};l(y,o,(function(){return this}));var f=Object.getPrototypeOf,_=f&&f(f(x([])));_&&_!==t&&n.call(_,o)&&(y=_);var m=h.prototype=u.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(a,o,s,r){var l=p(e[a],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==ve(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,r)}),(function(e){i("throw",e,s,r)})):t.resolve(d).then((function(e){c.value=e,s(c)}),(function(e){return i("throw",e,s,r)}))}r(l.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function v(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return I()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=S(s,n);if(r){if(r===d)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=p(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=p(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function x(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return g.prototype=h,a(m,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:g,configurable:!0}),g.displayName=l(h,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,l(e,r,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},w(b.prototype),l(b.prototype,s,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new b(c(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},w(m),l(m,r,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=x,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;P(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function ke(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}var Pe=Shopware.Component,Ce=Shopware.Utils.dom;Pe.register("swag-paypal-pui-details",{template:"{% block swag_paypal_pui_details %}\n    <sw-card\n        position-identifier=\"swag-paypal-pui-details\"\n        :title=\"$tc('swag-paypal-payment.puiDetails.cardTitle')\">\n\n        {% block swag_paypal_pui_details_textarea %}\n        <div class=\"swag-paypal-pui-details__textarea\">\n            <b>{{ $tc('swag-paypal-payment.puiDetails.bank') }}</b> {{ bankName }}<br>\n            <b>{{ $tc('swag-paypal-payment.puiDetails.iban') }}</b> {{ iban }}<br>\n            <b>{{ $tc('swag-paypal-payment.puiDetails.bic') }}</b> {{ bic }}<br>\n            <b>{{ $tc('swag-paypal-payment.puiDetails.accountHolder') }}</b> {{ accountHolderName }}<br>\n            <b>{{ $tc('swag-paypal-payment.puiDetails.amount') }}</b> {{ amount }}<br>\n            <b>{{ $tc('swag-paypal-payment.puiDetails.reference') }}</b> {{ reference }}<br>\n        </div>\n        {% endblock %}\n\n        {% block swag_paypal_pui_details_copy_button %}\n        <sw-button\n            class=\"swag-paypal-pui-details__copy-button\"\n            variant=\"ghost\"\n            size=\"small\"\n            @click=\"onCopy\">\n            {{ $tc('swag-paypal-payment.puiDetails.buttonCopy') }}\n        </sw-button>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n",props:{details:{type:Object,required:!0},purchaseUnitAmount:{type:Object,required:!0}},computed:{copyText:function(){return"".concat(this.$tc("swag-paypal-payment.puiDetails.bank")," ").concat(this.bankName,"\n").concat(this.$tc("swag-paypal-payment.puiDetails.iban")," ").concat(this.iban,"\n").concat(this.$tc("swag-paypal-payment.puiDetails.bic")," ").concat(this.bic,"\n").concat(this.$tc("swag-paypal-payment.puiDetails.accountHolder")," ").concat(this.accountHolderName,"\n").concat(this.$tc("swag-paypal-payment.puiDetails.amount")," ").concat(this.amount,"\n").concat(this.$tc("swag-paypal-payment.puiDetails.reference")," ").concat(this.reference)},bankName:function(){return this.details.deposit_bank_details.bank_name},iban:function(){return this.details.deposit_bank_details.iban},bic:function(){return this.details.deposit_bank_details.bic},accountHolderName:function(){return this.details.deposit_bank_details.account_holder_name},reference:function(){return this.details.payment_reference},amount:function(){return"".concat(this.purchaseUnitAmount.value," ").concat(this.purchaseUnitAmount.currency_code)}},methods:{onCopy:function(){var e,t=this;return(e=Se().mark((function e(){var n;return Se().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(null!==(n=navigator)&&void 0!==n&&n.clipboard){e.next=3;break}return Ce.copyToClipboard(t.copyText),e.abrupt("return");case 3:return e.next=5,navigator.clipboard.writeText(t.copyText);case 5:case"end":return e.stop()}}),e)})),function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){ke(o,a,i,s,r,"next",e)}function r(e){ke(o,a,i,s,r,"throw",e)}s(void 0)}))})()}}});Shopware.Component.extend("swag-paypal-text-field","sw-text-field",{template:'{% block sw_text_field %}\n    <sw-contextual-field\n            v-bind="$attrs"\n            v-on="$listeners"\n            class="sw-field--text"\n            :name="formFieldName"\n            @inheritance-restore="$emit(\'inheritance-restore\', $event)"\n            @inheritance-remove="$emit(\'inheritance-remove\', $event)">\n\n        <template v-if="hasPrefix" #sw-contextual-field-prefix="{ disabled, identification }">\n            <slot name="prefix" v-bind="{disabled, identification}"></slot>\n        </template>\n\n        <template #sw-field-input="{ identification, error, disabled, size, setFocusClass, removeFocusClass, hasSuffix, hasPrefix }">\n            <input v-bind="$attrs"\n                   v-on="additionalListeners"\n                   type="text"\n                   :name="identification"\n                   :id="identification"\n                   :disabled="disabled"\n                   :value="currentValue"\n                   :placeHolder="placeholder"\n                   @input="onInput"\n                   @change="onChange"\n                   @focus="setFocusClass"\n                   @blur="removeFocusClass">\n        </template>\n\n        <template v-if="copyable || hasSuffix" #sw-contextual-field-suffix="{disabled, identification}">\n            <slot name="suffix" v-bind="{ identification }"></slot>\n            <sw-field-copyable v-if="copyable"\n                               :displayName="identification"\n                               :copyableText="currentValue"\n                               :tooltip="copyableTooltip">\n            </sw-field-copyable>\n        </template>\n    </sw-contextual-field>\n{% endblock %}\n'});Shopware.Component.extend("swag-paypal-textarea-field","sw-textarea-field",{template:'{% block sw_block_field %}\n    <sw-block-field\n            v-bind="$attrs"\n            class="sw-field--textarea"\n            :name="formFieldName">\n\n        <template #sw-field-input="{identification, helpText, error, disabled, setFocusClass, removeFocusClass }">\n            <textarea v-bind="$attrs"\n                      :id="identification"\n                      :name="identification"\n                      :placeholder="placeholder"\n                      :disabled="disabled"\n                      :value="currentValue"\n                      @change="onChange"\n                      @input="onInput"\n                      @focus="setFocusClass"\n                      @blur="removeFocusClass">\n            </textarea>\n        </template>\n    </sw-block-field>\n{% endblock %}\n'});var xe=Shopware,Ie=xe.Component,$e=xe.Context,Le=Shopware.Utils.object.hasOwnProperty,Te=Shopware.Data.Criteria;Ie.override("sw-order-detail",{template:'{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n    <sw-tabs-item v-if="isPayPalPayment"\n                  :route="{ name: \'swag.paypal.payment.detail\', params: { id: $route.params.id } }"\n                  :title="$tc(\'swag-paypal.header\')">\n        {{ $tc(\'swag-paypal.header\') }}\n    </sw-tabs-item>\n{% endblock %}\n\n\n{% block sw_order_detail_actions_slot_smart_bar_actions %}\n    <template v-if="isEditable">\n        {% parent %}\n    </template>\n{% endblock %}\n',data:function(){return{isPayPalPayment:!1}},computed:{isEditable:function(){return!this.isPayPalPayment||"swag.paypal.payment.detail"!==this.$route.name}},watch:{orderId:{deep:!0,handler:function(){var e=this;if(this.orderId){var t=this.repositoryFactory.create("order"),n=new Te(1,1);n.addAssociation("transactions"),n.getAssociation("transactions").addSorting(Te.sort("createdAt","DESC")).setLimit(1),t.get(this.orderId,$e.api,n).then((function(t){var n=t.transactions.last();n&&(e.isPayPalPayment=Le(n,"customFields")&&(Le(n.customFields,"swag_paypal_order_id")||Le(n.customFields,"swag_paypal_transaction_id")))}))}},immediate:!0}}});n("bmUn");function Oe(e){return Oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Oe(e)}function Ee(){Ee=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,i){var o=t&&t.prototype instanceof u?t:u,s=Object.create(o.prototype),r=new C(i||[]);return a(s,"_invoke",{value:v(e,n,r)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d={};function u(){}function g(){}function h(){}var y={};l(y,o,(function(){return this}));var f=Object.getPrototypeOf,_=f&&f(f(x([])));_&&_!==t&&n.call(_,o)&&(y=_);var m=h.prototype=u.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(a,o,s,r){var l=p(e[a],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==Oe(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,r)}),(function(e){i("throw",e,s,r)})):t.resolve(d).then((function(e){c.value=e,s(c)}),(function(e){return i("throw",e,s,r)}))}r(l.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function v(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return I()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=S(s,n);if(r){if(r===d)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=p(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=p(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function x(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return g.prototype=h,a(m,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:g,configurable:!0}),g.displayName=l(h,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,l(e,r,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},w(b.prototype),l(b.prototype,s,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new b(c(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},w(m),l(m,r,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=x,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;P(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function Fe(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}Shopware.Component.override("sw-order-detail-details",{template:'{% block sw_order_detail_details_shipping_tracking_codes %}\n    {% parent %}\n\n    {% block sw_order_detail_details_shipping_paypal_carrier %}\n    <div class="swag-paypal-order-carrier"\n         v-if="payPalResourceId">\n        <sw-text-field\n            v-model="payPalCarrier"\n            disabled\n            :label="$tc(\'sw-order-detail.payPalCarrierLabel\')"\n            :helpText="$tc(\'sw-order-detail.payPalCarrierHelpText\')"\n            :placeholder="$tc(\'sw-order-detail.payPalCarrierPlaceholder\')"\n        />\n\n        <div\n            v-html="payPalCarrierDescription"\n            class="swag-paypal-order-carrier__description"\n        >\n        </div>\n    </div>\n    {% endblock %}\n\n{% endblock %}\n',inject:["systemConfigApiService"],data:function(){return{isPayPalSandbox:!1}},computed:{transaction:function(){var e;return null===(e=this.order)||void 0===e?void 0:e.transactions.last()},payPalResourceId:function(){var e,t;return null===(e=this.transaction)||void 0===e||null===(t=e.customFields)||void 0===t?void 0:t.swag_paypal_resource_id},payPalCarrier:function(){var e,t,n,a,i;return null!==(e=null===(t=this.order)||void 0===t||null===(n=t.deliveries)||void 0===n||null===(a=n.first().shippingMethod)||void 0===a||null===(i=a.customFields)||void 0===i?void 0:i.swag_paypal_carrier)&&void 0!==e?e:""},payPalOrderLink:function(){var e=this.isPayPalSandbox?"sandbox":"www";return"https://".concat(e,".paypal.com/activity/payment/").concat(this.payPalResourceId)},payPalCarrierDescription:function(){return this.$tc("sw-order-detail.payPalCarrierDescription",1,{orderLink:this.payPalOrderLink})}},watch:{payPalResourceId:{handler:function(e){var t,n=this;return(t=Ee().mark((function t(){var a,i;return Ee().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=2;break}return t.abrupt("return");case 2:return t.next=4,n.systemConfigApiService.getValues("SwagPayPal.settings",n.order.salesChannelId);case 4:return(a=t.sent).hasOwnProperty("SwagPayPal.settings.sandbox")&&(n.isPayPalSandbox=a["SwagPayPal.settings.sandbox"]),t.next=8,n.systemConfigApiService.getValues("SwagPayPal.settings");case 8:i=t.sent,n.isPayPalSandbox=i["SwagPayPal.settings.sandbox"];case 10:case"end":return t.stop()}}),t)})),function(){var e=this,n=arguments;return new Promise((function(a,i){var o=t.apply(e,n);function s(e){Fe(o,a,i,s,r,"next",e)}function r(e){Fe(o,a,i,s,r,"throw",e)}s(void 0)}))})()},immediate:!0}}});n("xz1P");function Ae(e){return Ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ae(e)}function De(){De=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,i){var o=t&&t.prototype instanceof u?t:u,s=Object.create(o.prototype),r=new C(i||[]);return a(s,"_invoke",{value:v(e,n,r)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d={};function u(){}function g(){}function h(){}var y={};l(y,o,(function(){return this}));var f=Object.getPrototypeOf,_=f&&f(f(x([])));_&&_!==t&&n.call(_,o)&&(y=_);var m=h.prototype=u.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(a,o,s,r){var l=p(e[a],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==Ae(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,r)}),(function(e){i("throw",e,s,r)})):t.resolve(d).then((function(e){c.value=e,s(c)}),(function(e){return i("throw",e,s,r)}))}r(l.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function v(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return I()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=S(s,n);if(r){if(r===d)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=p(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=p(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function x(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return g.prototype=h,a(m,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:g,configurable:!0}),g.displayName=l(h,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,l(e,r,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},w(b.prototype),l(b.prototype,s,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new b(c(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},w(m),l(m,r,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=x,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;P(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function je(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}Shopware.Component.override("sw-order-user-card",{template:'{% block sw_order_detail_base_secondary_info_order_overview_right_column_slot %}\n    {% parent %}\n\n    {% block sw_detail_base_secondary_info_order_overview_paypal_carrier %}\n    <template v-if="payPalResourceId">\n        <dt>\n            {{ $tc(\'sw-order-detail.payPalCarrierLabel\') }}\n            <sw-help-text :text="$tc(\'sw-order-detail.payPalCarrierHelpText\')" />\n        </dt>\n\n        <dd>\n            <div>\n                {{ payPalCarrier ? payPalCarrier : $tc(\'sw-order-detail.payPalCarrierPlaceholder\') }}\n            </div>\n\n            <div\n                v-html="payPalCarrierDescription"\n                class="sw-user-card__paypal-carrier-description"\n            >\n            </div>\n        </dd>\n    </template>\n    {% endblock %}\n\n{% endblock %}\n',inject:["systemConfigApiService"],data:function(){return{isPayPalSandbox:!1}},computed:{transaction:function(){var e;return null===(e=this.currentOrder.transactions)||void 0===e?void 0:e.last()},payPalResourceId:function(){var e,t;return null===(e=this.transaction)||void 0===e||null===(t=e.customFields)||void 0===t?void 0:t.swag_paypal_resource_id},payPalCarrier:function(){var e,t,n,a;return null!==(e=null===(t=this.delivery)||void 0===t||null===(n=t.shippingMethod)||void 0===n||null===(a=n.customFields)||void 0===a?void 0:a.swag_paypal_carrier)&&void 0!==e?e:""},payPalOrderLink:function(){var e=this.isPayPalSandbox?"sandbox":"www";return"https://".concat(e,".paypal.com/activity/payment/").concat(this.payPalResourceId)},payPalCarrierDescription:function(){return this.$tc("sw-order-detail.payPalCarrierDescription",1,{orderLink:this.payPalOrderLink})}},watch:{payPalResourceId:{handler:function(e){var t,n=this;return(t=De().mark((function t(){var a,i;return De().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e){t.next=2;break}return t.abrupt("return");case 2:return t.next=4,n.systemConfigApiService.getValues("SwagPayPal.settings",n.currentOrder.salesChannelId);case 4:return(a=t.sent).hasOwnProperty("SwagPayPal.settings.sandbox")&&(n.isPayPalSandbox=a["SwagPayPal.settings.sandbox"]),t.next=8,n.systemConfigApiService.getValues("SwagPayPal.settings");case 8:i=t.sent,n.isPayPalSandbox=i["SwagPayPal.settings.sandbox"];case 10:case"end":return t.stop()}}),t)})),function(){var e=this,n=arguments;return new Promise((function(a,i){var o=t.apply(e,n);function s(e){je(o,a,i,s,r,"next",e)}function r(e){je(o,a,i,s,r,"throw",e)}s(void 0)}))})()},immediate:!0}}});n("5sRV");var ze=Shopware,Re=ze.Component,Be=ze.Filter,Me=ze.Context,Ne=Shopware.Utils.types.isEmpty,Ve=Shopware.Data.Criteria;function qe(e){return qe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},qe(e)}function Ue(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ge(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==qe(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==qe(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===qe(o)?o:String(o)),a)}var i,o}function He(e,t){return He=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},He(e,t)}function Ze(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Ye(e);if(t){var i=Ye(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return Ke(this,n)}}function Ke(e,t){if(t&&("object"===qe(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Ye(e){return Ye=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ye(e)}Re.register("swag-paypal-payment-detail",{template:'{% block swag_paypal_payment_detail %}\n    <div class="swag-paypal-payment-detail">\n\n        {% block swag_paypal_payment_detail_components %}\n            <component v-if="!isLoading && showPayPalPayment"\n                       :is="\'swag-paypal-payment-details-v1\'"\n                       :paymentResource="paymentResource"\n                       :orderId="order.id">\n            </component>\n\n            <component v-if="!isLoading && showPayPalOrder"\n                       :is="\'swag-paypal-payment-details-v2\'"\n                       :paypalOrder="paypalOrder"\n                       :orderTransaction="orderTransaction"\n                       :orderTransactionId="orderTransaction.id"\n                       :paypalPartnerAttributionId="orderTransaction.customFields.swag_paypal_partner_attribution_id">\n            </component>\n        {% endblock %}\n\n        {% block swag_paypal_payment_detail_error_page %}\n            {% block swag_paypal_payment_detail_error_page_canceled %}\n                <div v-if="showCanceledPaymentError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.canceledPaymentContent\')"\n                            icon="regular-shopping-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_payment_detail_error_page_sandbox_live %}\n                <div v-if="showSandboxLiveError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.sandboxLiveContent\')"\n                            icon="regular-shopping-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_payment_detail_error_page_other %}\n                <div v-if="showGeneralError">\n                    <sw-empty-state\n                            :title="$tc(\'swag-paypal-payment.errorPage.title\')"\n                            :subline="$tc(\'swag-paypal-payment.errorPage.other\')"\n                            icon="regular-shopping-bag"\n                            color="#A092F0">\n                    </sw-empty-state>\n                </div>\n            {% endblock %}\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPaymentService","SwagPayPalOrderService","repositoryFactory"],mixins:["notification"],data:function(){return{order:{},orderTransaction:{},paypalOrder:{},paymentResource:{},isLoading:!0,orderTransactionState:null}},computed:{dateFilter:function(){return Be.getByName("date")},stateFailedCancelled:function(){return"failed"===this.orderTransactionState||"cancelled"===this.orderTransactionState},showCanceledPaymentError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!0===this.stateFailedCancelled},showSandboxLiveError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!1===this.stateFailedCancelled},showGeneralError:function(){return!1===this.isLoading&&!1===this.showPayPalPayment&&!1===this.showPayPalOrder&&!1===this.showCanceledPaymentError&&!1===this.showSandboxLiveError},showPayPalPayment:function(){return!1===Ne(this.paymentResource)},showPayPalOrder:function(){return!1===Ne(this.paypalOrder)}},watch:{$route:function(){this.resetDataAttributes(),this.createdComponent()},"order.orderNumber":function(){this.emitIdentifier()},isLoading:function(e){this.$emit("loading-change",e)}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.$emit("loading-change",!0);var t=this.$route.params.id,n=this.repositoryFactory.create("order"),a=new Ve(1,1);a.addAssociation("transactions.stateMachineState"),a.getAssociation("transactions").addSorting(Ve.sort("createdAt","DESC")).setLimit(1),n.get(t,Me.api,a).then((function(t){if(e.order=t,e.orderTransaction=t.transactions.last(),e.orderTransactionState=e.orderTransaction.stateMachineState.technicalName,null!==e.orderTransaction.customFields){var n=e.orderTransaction.customFields.swag_paypal_transaction_id;n&&e.handlePayPalPayment(n);var a=e.orderTransaction.customFields.swag_paypal_order_id;a&&e.handlePayPalOrder(a)}else e.isLoading=!1}))},handlePayPalOrder:function(e){var t=this;this.SwagPayPalOrderService.getOrderDetails(this.orderTransaction.id,e).then((function(e){t.paypalOrder=e,t.isLoading=!1})).catch(this.handleError)},handlePayPalPayment:function(e){var t=this;this.SwagPayPalPaymentService.getPaymentDetails(this.order.id,e).then((function(e){t.paymentResource=e,t.isLoading=!1})).catch(this.handleError)},handleError:function(e){try{this.createNotificationError({message:"".concat(this.$tc("swag-paypal-payment.paymentDetails.error.title"),": ").concat(e.response.data.errors[0].detail),autoClose:!1})}catch(t){this.createNotificationError({message:"".concat(this.$tc("swag-paypal-payment.paymentDetails.error.title"),": ").concat(e.message),autoClose:!1})}finally{this.isLoading=!1}},emitIdentifier:function(){var e=null!==this.order?this.order.orderNumber:"";this.$emit("identifier-change",e)},resetDataAttributes:function(){this.isLoading=!0,this.paypalOrder={}}}}),Shopware.Module.register("swag-paypal-payment",{type:"plugin",name:"SwagPayPal",title:"swag-paypal-payment.general.title",description:"swag-paypal-payment.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#2b52ff",routeMiddleware:function(e,t){"sw.order.detail"===t.name&&t.children.push({component:"swag-paypal-payment-detail",name:"swag.paypal.payment.detail",isChildren:!0,path:"/sw/order/detail/:id/paypal",meta:{parentPath:"sw.order.index",privilege:"order.viewer"}}),e(t)}});var We=Shopware.Classes.ApiService,Qe=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&He(e,t)}(o,e);var t,n,a,i=Ze(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return Ue(this,o),i.call(this,e,t,n)}return t=o,n=[{key:"validateApiCredentials",value:function(e,t,n){var a=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/validate-api-credentials"),{params:{clientId:e,clientSecret:t,sandboxActive:n},headers:a}).then((function(e){return We.handleResponse(e)}))}},{key:"getApiCredentials",value:function(e,t,n,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},s=i,r=this.getBasicHeaders(o);return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/get-api-credentials"),{authCode:e,sharedId:t,nonce:n,sandboxActive:a},{params:s,headers:r}).then((function(e){return We.handleResponse(e)}))}},{key:"getMerchantInformation",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.getBasicHeaders();return this.httpClient.get("_action/".concat(this.getApiBasePath(),"/merchant-information"),{params:{salesChannelId:e},headers:t}).then((function(e){return We.handleResponse(e)}))}}],n&&Ge(t.prototype,n),a&&Ge(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(We),Je=Qe;function Xe(e){return Xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Xe(e)}function et(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function tt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==Xe(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==Xe(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===Xe(o)?o:String(o)),a)}var i,o}function nt(e,t){return nt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},nt(e,t)}function at(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=ot(e);if(t){var i=ot(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return it(this,n)}}function it(e,t){if(t&&("object"===Xe(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function ot(e){return ot=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ot(e)}var st=Shopware.Classes.ApiService,rt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&nt(e,t)}(o,e);var t,n,a,i=at(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return et(this,o),i.call(this,e,t,n)}return t=o,n=[{key:"validateApiCredentials",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/validate-api-credentials"),{apiKey:e,salesChannelId:t},{headers:n}).then((function(e){return st.handleResponse(e)}))}},{key:"fetchInformation",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.getBasicHeaders(),a=e.extensions.paypalPosSalesChannel.apiKey;return this.httpClient.post("".concat(this.getApiBasePath(),"/fetch-information"),{apiKey:a},{headers:n}).then((function(n){var a=st.handleResponse(n);return delete a.extensions,null===a.languageId||null!==e.id&&!t?delete a.languageId:(e.languages.length=0,e.languages.push({id:a.languageId})),Object.assign(e,a),e.currencies.length=0,e.currencies.push({id:a.currencyId}),e.countries.length=0,e.countries.push({id:a.countryId}),a}))}},{key:"cloneProductVisibility",value:function(e,t){var n=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/clone-product-visibility"),{fromSalesChannelId:e,toSalesChannelId:t},{headers:n}).then((function(e){return st.handleResponse(e)}))}},{key:"getProductCount",value:function(e,t){var n=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/product-count"),{params:{salesChannelId:e,cloneSalesChannelId:t},headers:n}).then((function(e){return st.handleResponse(e)}))}},{key:"generateApiUrl",value:function(){return"https://my.izettle.com/apps/api-keys?name=Shopware%20integration&scopes=".concat(["READ:PURCHASE","READ:FINANCE","READ:USERINFO","READ:PRODUCT","WRITE:PRODUCT"].join("%20"),"&utm_source=local_partnership&utm_medium=ecommerce&utm_campaign=shopware")}}],n&&tt(t.prototype,n),a&&tt(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(st),lt=rt;function ct(e){return ct="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ct(e)}function pt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function dt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?pt(Object(n),!0).forEach((function(t){ut(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):pt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ut(e,t,n){return(t=yt(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function gt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ht(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,yt(a.key),a)}}function yt(e){var t=function(e,t){if("object"!==ct(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==ct(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===ct(t)?t:String(t)}function ft(e,t){return ft=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ft(e,t)}function _t(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=wt(e);if(t){var i=wt(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return mt(this,n)}}function mt(e,t){if(t&&("object"===ct(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function wt(e){return wt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},wt(e)}var bt=Shopware.Classes.ApiService,vt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ft(e,t)}(o,e);var t,n,a,i=_t(o);function o(e,t){var n,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return gt(this,o),(n=i.call(this,e,t,a)).basicConfig={timeout:3e5},n}return t=o,n=[{key:"startCompleteSync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"startProductSync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/products"),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"startInventorySync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/inventory"),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"startImageSync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/").concat(e,"/images"),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"startLogCleanup",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/log/cleanup/").concat(e),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"abortSync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/abort/").concat(e),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"resetSync",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/sync/reset/").concat(e),null,dt(dt({},this.basicConfig),{},{headers:t})).then((function(e){return bt.handleResponse(e)}))}},{key:"getProductLog",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,a=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/product-log/").concat(e),dt(dt({},this.basicConfig),{},{headers:a,params:{page:t,limit:n}})).then((function(e){return bt.handleResponse(e)}))}}],n&&ht(t.prototype,n),a&&ht(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(bt),St=vt;function kt(e){return kt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},kt(e)}function Pt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ct(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==kt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==kt(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===kt(o)?o:String(o)),a)}var i,o}function xt(e,t){return xt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},xt(e,t)}function It(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Lt(e);if(t){var i=Lt(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return $t(this,n)}}function $t(e,t){if(t&&("object"===kt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Lt(e){return Lt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Lt(e)}var Tt=Shopware.Classes.ApiService,Ot=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&xt(e,t)}(o,e);var t,n,a,i=It(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/pos";return Pt(this,o),i.call(this,e,t,n)}return t=o,(n=[{key:"registerWebhook",value:function(e){var t=this.getBasicHeaders();return this.httpClient.post("_action/".concat(this.getApiBasePath(),"/webhook/registration/").concat(e),{},{headers:t}).then((function(e){return Tt.handleResponse(e)}))}},{key:"unregisterWebhook",value:function(e){var t=this.getBasicHeaders();return this.httpClient.delete("_action/".concat(this.getApiBasePath(),"/webhook/registration/").concat(e),{},{headers:t}).then((function(e){return Tt.handleResponse(e)}))}}])&&Ct(t.prototype,n),a&&Ct(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(Tt),Et=Ot;function Ft(e){return Ft="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ft(e)}function At(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Dt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==Ft(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==Ft(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===Ft(o)?o:String(o)),a)}var i,o}function jt(e,t){return jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},jt(e,t)}function zt(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Bt(e);if(t){var i=Bt(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return Rt(this,n)}}function Rt(e,t){if(t&&("object"===Ft(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Bt(e){return Bt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Bt(e)}var Mt=Shopware.Classes.ApiService,Nt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&jt(e,t)}(o,e);var t,n,a,i=zt(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return At(this,o),i.call(this,e,t,n)}return t=o,(n=[{key:"getPaymentDetails",value:function(e,t){var n="".concat(this.getApiBasePath(),"/payment-details/").concat(e,"/").concat(t);return this.httpClient.get(n,{headers:this.getBasicHeaders()}).then((function(e){return Mt.handleResponse(e)}))}},{key:"capturePayment",value:function(e,t,n,a,i,o){var s="_action/".concat(this.getApiBasePath(),"/capture-payment/").concat(t,"/").concat(n,"/").concat(e);return this.httpClient.post(s,{captureAmount:a,currency:i,captureIsFinal:o},{headers:this.getBasicHeaders()}).then((function(e){return Mt.handleResponse(e)}))}},{key:"refundPayment",value:function(e,t,n,a,i,o,s,r){var l="_action/".concat(this.getApiBasePath(),"/refund-payment/").concat(t,"/").concat(n,"/").concat(e);return this.httpClient.post(l,{refundAmount:a,currency:i,description:o,reason:s,refundInvoiceNumber:r},{headers:this.getBasicHeaders()}).then((function(e){return Mt.handleResponse(e)}))}},{key:"voidPayment",value:function(e,t,n){var a="_action/".concat(this.getApiBasePath(),"/void-payment/").concat(t,"/").concat(n,"/").concat(e);return this.httpClient.post(a,{},{headers:this.getBasicHeaders()}).then((function(e){return Mt.handleResponse(e)}))}}])&&Dt(t.prototype,n),a&&Dt(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(Mt),Vt=Nt;function qt(e){return qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},qt(e)}function Ut(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function Gt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ut(Object(n),!0).forEach((function(t){Ht(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ut(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Ht(e,t,n){return(t=Yt(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Zt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Kt(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,Yt(a.key),a)}}function Yt(e){var t=function(e,t){if("object"!==qt(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==qt(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===qt(t)?t:String(t)}function Wt(e,t){return Wt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Wt(e,t)}function Qt(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=Xt(e);if(t){var i=Xt(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return Jt(this,n)}}function Jt(e,t){if(t&&("object"===qt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Xt(e){return Xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Xt(e)}var en=Shopware.Classes.ApiService,tn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Wt(e,t)}(o,e);var t,n,a,i=Qt(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal-v2";return Zt(this,o),i.call(this,e,t,n)}return t=o,n=[{key:"getOrderDetails",value:function(e,t){var n="".concat(this.getApiBasePath(),"/order/").concat(e,"/").concat(t);return this.httpClient.get(n,this.getDefaultOptions()).then((function(e){return en.handleResponse(e)}))}},{key:"refundCapture",value:function(e,t,n,a,i,o,s,r){var l="/".concat(e,"/").concat(t,"/").concat(n),c="".concat(this.getApiBasePath("","_action"),"/refund-capture").concat(l);return this.doPostRequest(c,r,{currency:a,amount:i,invoiceNumber:o,noteToPayer:s})}},{key:"captureAuthorization",value:function(e,t,n,a,i,o,s,r){var l="/".concat(e,"/").concat(t),c="".concat(this.getApiBasePath("","_action"),"/capture-authorization").concat(l);return this.doPostRequest(c,s,{currency:n,amount:a,invoiceNumber:i,noteToPayer:o,isFinal:r})}},{key:"voidAuthorization",value:function(e,t,n){var a="/".concat(e,"/").concat(t),i="".concat(this.getApiBasePath("","_action"),"/void-authorization").concat(a);return this.doPostRequest(i,n)}},{key:"doPostRequest",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=Gt({partnerAttributionId:t},n);return this.httpClient.post(e,a,this.getDefaultOptions()).then((function(e){return en.handleResponse(e)}))}},{key:"getDefaultOptions",value:function(){return{headers:this.getBasicHeaders(),version:Shopware.Context.api.apiVersion}}}],n&&Kt(t.prototype,n),a&&Kt(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(en),nn=tn;function an(e){return an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},an(e)}function on(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function sn(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==an(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==an(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===an(o)?o:String(o)),a)}var i,o}function rn(e,t){return rn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},rn(e,t)}function ln(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=pn(e);if(t){var i=pn(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return cn(this,n)}}function cn(e,t){if(t&&("object"===an(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function pn(e){return pn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},pn(e)}var dn=Shopware.Classes.ApiService,un=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&rn(e,t)}(o,e);var t,n,a,i=ln(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal";return on(this,o),i.call(this,e,t,n)}return t=o,n=[{key:"setDefaultPaymentForSalesChannel",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t="_action/".concat(this.getApiBasePath(),"/saleschannel-default");return this.httpClient.post(t,{salesChannelId:e},{headers:this.getBasicHeaders()}).then((function(e){return dn.handleResponse(e)}))}}],n&&sn(t.prototype,n),a&&sn(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(dn),gn=un;function hn(e){return hn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},hn(e)}function yn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function fn(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,(i=a.key,o=void 0,o=function(e,t){if("object"!==hn(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==hn(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"),"symbol"===hn(o)?o:String(o)),a)}var i,o}function _n(e,t){return _n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_n(e,t)}function mn(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=bn(e);if(t){var i=bn(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return wn(this,n)}}function wn(e,t){if(t&&("object"===hn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function bn(e){return bn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},bn(e)}var vn=Shopware.Classes.ApiService,Sn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_n(e,t)}(o,e);var t,n,a,i=mn(o);function o(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"paypal/dispute";return yn(this,o),i.call(this,e,t,n)}return t=o,n=[{key:"list",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=this.getBasicHeaders();return this.httpClient.get(this.getApiBasePath(),{params:{salesChannelId:e,disputeStateFilter:t},headers:n,version:Shopware.Context.api.apiVersion}).then((function(e){return vn.handleResponse(e)}))}},{key:"detail",value:function(e,t){var n=this.getBasicHeaders();return this.httpClient.get("".concat(this.getApiBasePath(),"/").concat(e),{params:{salesChannelId:t},headers:n,version:Shopware.Context.api.apiVersion}).then((function(e){return vn.handleResponse(e)}))}}],n&&fn(t.prototype,n),a&&fn(t,a),Object.defineProperty(t,"prototype",{writable:!1}),o}(vn),kn=Sn,Pn=Shopware.Application,Cn=Pn.getContainer("init");Pn.addServiceProvider("SwagPayPalApiCredentialsService",(function(e){return new Je(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalPosSettingApiService",(function(e){return new lt(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalPosApiService",(function(e){return new St(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalPosWebhookRegisterService",(function(e){return new Et(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalPaymentService",(function(e){return new Vt(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalOrderService",(function(e){return new nn(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPaypalPaymentMethodService",(function(e){return new gn(Cn.httpClient,e.loginService)})),Pn.addServiceProvider("SwagPayPalDisputeApiService",(function(e){return new kn(Cn.httpClient,e.loginService)}));var xn=n("B/de"),In=n("LQG9");Shopware.Locale.extend("de-DE",xn),Shopware.Locale.extend("en-GB",In);var $n,Ln=($n=n("B5KR")).keys().reduce((function(e,t){var n={name:t.split(".")[1].split("/")[1],functional:!0,render:function(e,n){var a=n.data;return e("span",{class:[a.staticClass,a.class],style:a.style,attrs:a.attrs,on:a.on,domProps:{innerHTML:$n(t)}})}};return e.push(n),e}),[]),Tn=Shopware.Component;Ln.map((function(e){return Tn.register(e.name,e)})),n("Z0zN");function On(e){return On="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},On(e)}function En(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==On(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==On(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===On(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Shopware.Component.register("swag-paypal-pos-status",{template:'{% block swag_paypal_pos_status %}\n    <sw-card position-identifier="swag-paypal-pos-status"\n             :class="statusClasses"\n             :isLoading="isLoading"\n             :title="title">\n\n        {% block swag_paypal_pos_status_icon %}\n            <div class="swag-paypal-pos-status__icon-base">\n                <sw-icon :class="iconClasses"\n                         :name="icon">\n                </sw-icon>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_status %}\n            <div class="swag-paypal-pos-status__status">\n                <slot name="status">{{ status }}</slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_detail %}\n            <div class="swag-paypal-pos-status__detail">\n                <slot name="detail"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_substatus %}\n            <div v-if="showSubStatus" class="swag-paypal-pos-status__substatus">\n\n                {% block swag_paypal_pos_status_substatus_icon %}\n                    <sw-icon v-if="showSubIcon"\n                             :class="subIconClasses"\n                             :name="subIcon">\n                    </sw-icon>\n                {% endblock %}\n\n                {% block swag_paypal_pos_status_substatus_content %}\n                    <span>\n                        <slot name="substatus"></slot>\n                    </span>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_actions %}\n            <div class="swag-paypal-pos-status__actions">\n                <slot name="actions"></slot>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_disabled %}\n            <div v-if="disabled" class="swag-paypal-pos-status__disabled">\n                <slot name="disabledText">{{ disabledText }}</slot>\n            </div>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',props:{title:{type:String,required:!1,default:""},status:{type:String,required:!0},disabled:{type:Boolean,required:!1,default:!1},disabledText:{type:String,required:!1,default:""},icon:{type:String,required:!0},iconAnimated:{type:Boolean,required:!1,default:!1},subIcon:{type:String,required:!1,default:""},showSubStatus:{type:Boolean,required:!1,default:!1},isLoading:{type:Boolean,required:!0},variant:{type:String,default:"info",validValues:["info","warning","error","success"],validator:function(e){return["info","warning","error","success"].includes(e)}},subVariant:{type:String,default:"info",validValues:["info","warning","error","success"],validator:function(e){return["info","warning","error","success"].includes(e)}}},computed:{statusClasses:function(){var e;return En(e={"swag-paypal-pos-status":!0},"swag-paypal-pos-status--".concat(this.variant),!0),En(e,"swag-paypal-pos-status--disabled",this.disabled),e},iconClasses:function(){return{"swag-paypal-pos-status__icon":!0,"swag-paypal-pos-status__icon-animated":this.iconAnimated}},subIconClasses:function(){return["swag-paypal-pos-status__subicon","swag-paypal-pos-status--".concat(this.subVariant)]},showSubIcon:function(){return null!==this.subIcon&&void 0!==this.subIcon&&this.subIcon!==this.icon}}});n("eQ20");Shopware.Component.register("swag-paypal-pos-account",{template:'{% block swag_paypal_pos_account %}\n    <sw-card class="swag-paypal-pos-account"\n             position-identifier="swag-paypal-pos-account"\n             :title="$tc(\'sw-sales-channel.detail.titleAccount\')"\n             :isLoading="isLoading">\n\n        {% block swag_paypal_pos_account_grid %}\n            <sw-container columns="min-content 1fr" align="center">\n\n                {% block swag_paypal_pos_account_grid_logo %}\n                    <img class="swag-paypal-pos-account__logo"\n                         alt="Zettle Logo"\n                         :src="\'/swagpaypal/static/img/paypal-pos-logo.svg\' | asset">\n                {% endblock %}\n\n                {% block swag_paypal_pos_account_grid_container %}\n                    <div class="swag-paypal-pos-account__container">\n\n                        {% block swag_paypal_pos_account_grid_container_info %}\n                            <div class="swag-paypal-pos-account__account-info">\n\n                                {% block swag_paypal_pos_account_grid_container_info_name %}\n                                    <div class="swag-paypal-pos-account__name">\n                                        {{ accountName }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_email %}\n                                    <div class="swag-paypal-pos-account__email">\n                                        {{ accountEmail }}\n                                    </div>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_link %}\n                                    <sw-external-link href="https://my.zettle.com"\n                                                      class="swag-paypal-pos-account__manage-link">\n\n                                        {% block swag_paypal_pos_account_grid_container_info_link_text %}\n                                            {{ $tc(\'swag-paypal-pos.account.manageAccount\') }}\n                                        {% endblock %}\n\n                                    </sw-external-link>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_info_edit_button %}\n                                    {# ToDo PPI-109 - Implement edit connection functionality #}\n                                    <sw-button v-if="false"\n                                               class="swag-paypal-pos-account__edit-connection-button"\n                                               size="small"\n                                               block>\n                                        {{ $tc(\'swag-paypal-pos.account.editConnection\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_account_grid_container_status %}\n                            <div class="swag-paypal-pos-account__status-container">\n\n                                {% block swag_paypal_pos_account_grid_container_status_label %}\n                                    <sw-label class="swag-paypal-pos-account__status-label"\n                                              size="medium"\n                                              appearance="pill"\n                                              :variant="connectionStatusVariant"\n                                              :ghost="false"\n                                              :caps="false">\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_badge %}\n                                            <sw-color-badge class="swag-paypal-pos-account__status-color-badge"\n                                                            rounded\n                                                            :variant="connectionStatusVariant">\n                                            </sw-color-badge>\n                                        {% endblock %}\n\n                                        {% block swag_paypal_pos_account_grid_container_status_label_text %}\n                                            <span class="swag-paypal-pos-account__status-text">\n                                                {{ connectionStatusText }}\n                                            </span>\n                                        {% endblock %}\n                                    </sw-label>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_account_grid_container_status_updated %}\n                                    <div v-if="lastRun"\n                                         class="swag-paypal-pos-account__status-updated">\n                                        {{ $tc(\'swag-paypal-pos.account.lastUpdated\') }} {{ lastRun.updatedAt | date({\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            second: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'short\',\n                                            year: \'numeric\'\n                                        }) }}\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService","repositoryFactory"],props:{salesChannel:{type:Object,require:!1,default:null},lastRun:{type:Object,require:!1,default:null}},data:function(){return{isLoading:!1,isError:!1,merchantInfo:null}},computed:{accountName:function(){return this.isError?this.$tc("swag-paypal-pos.account.errorName"):this.merchantInfo?this.merchantInfo.name:this.$tc("swag-paypal-pos.account.loadingName")},accountEmail:function(){return this.isError?this.$tc("swag-paypal-pos.account.errorEmail"):this.merchantInfo?this.merchantInfo.contactEmail:this.$tc("swag-paypal-pos.account.loadingEmail")},connectionStatusText:function(){return this.isError?this.$tc("swag-paypal-pos.account.noConnectionStatus"):this.$tc("swag-paypal-pos.account.connectedStatus")},connectionStatusVariant:function(){return this.isError?"danger":"success"},runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")}},watch:{salesChannel:function(){this.loadMerchantData()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.loadMerchantData()},loadMerchantData:function(){var e=this;return this.isError=!1,this.isLoading=!0,null===this.salesChannel?Promise.resolve():this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel).then((function(t){var n=t.merchantInformation;e.merchantInfo=n,e.isError=!1})).catch((function(){e.merchantInfo=null,e.isError=!0})).finally((function(){e.isLoading=!1}))}}});function Fn(e){return function(e){if(Array.isArray(e))return An(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return An(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return An(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function An(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}Shopware.Component.register("swag-paypal-pos-status-view",{template:'{% block swag_paypal_pos_status_view %}\n    <swag-paypal-pos-status :disabled="disabled"\n                            :disabledText="$tc(\'swag-paypal-pos.detail.overview.status.disabled\')"\n                            :icon="statusIcon"\n                            :subIcon="statusIconComplete"\n                            :iconAnimated="isSyncing"\n                            :isLoading="isLoading || status === null"\n                            :status="statusTitle"\n                            :showSubStatus="incompleteLastRun"\n                            :title="$tc(\'swag-paypal-pos.detail.overview.titleSync\')"\n                            :variant="statusVariant"\n                            :subVariant="statusCompleteErrorLevel">\n\n        {% block swag_paypal_pos_status_view_actions %}\n            <template #actions>\n                <slot name="actions"></slot>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_detail %}\n            <template #detail v-if="isSyncing">\n\n                {% block swag_paypal_pos_status_view_detail_syncing %}\n                    {{ $tc(\'swag-paypal-pos.detail.overview.status.syncingDetail\') }}\n                {% endblock %}\n            </template>\n            <template #detail v-else-if="lastFinishedRun">\n                <div>\n\n                    {% block swag_paypal_pos_status_view_detail_static %}\n                        {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSynced\') }}:\n                        {{ lastFinishedRun.updatedAt | date({\n                                hour: \'2-digit\',\n                                minute: \'2-digit\',\n                                second: \'2-digit\',\n                                day: \'2-digit\',\n                                month: \'short\',\n                                year: \'numeric\'\n                            })\n                        }}\n                    {% endblock %}\n                </div>\n\n                {% block swag_paypal_pos_status_view_detail_errors %}\n                    <sw-alert v-if="syncErrors"\n                              variant="error"\n                              :closable="true"\n                              :title="$tc(\'swag-paypal-pos.detail.overview.syncErrorTitle\')">\n                        <ul>\n                            <li v-for="error in syncErrors">{{ error.detail }} ({{ error.code }})</li>\n                        </ul>\n                    </sw-alert>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_status_view_substatus %}\n            <template #substatus v-if="incompleteLastRun">\n                {{ $tc(\'swag-paypal-pos.detail.overview.status.lastSyncedComplete\') }}:\n                {{ lastCompleteRun.updatedAt | date({\n                        hour: \'2-digit\',\n                        minute: \'2-digit\',\n                        second: \'2-digit\',\n                        day: \'2-digit\',\n                        month: \'short\',\n                        year: \'numeric\'\n                    })\n                }}\n            </template>\n        {% endblock %}\n    </swag-paypal-pos-status>\n{% endblock %}\n',props:{lastFinishedRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null},isLoading:{type:Boolean,default:!1},isSyncing:{type:Boolean,default:!1},salesChannel:{type:Object,required:!1,default:null},syncErrors:{type:Array,required:!1,default:null}},data:function(){return{statusErrorLevel:null,statusCompleteErrorLevel:null,iconConfig:{syncing:"regular-sync",warning:"regular-exclamation-triangle",error:"regular-times-xs",success:"regular-checkmark",noRunYet:"regular-blocked-circle"}}},computed:{status:function(){return this.isSyncing?"syncing":this.noRunYet?"noRunYet":this.statusErrorLevel},statusVariant:function(){return this.isSyncing||this.noRunYet?"info":this.statusErrorLevel},statusIcon:function(){return this.iconConfig[this.status]||"regular-info-circle"},statusIconComplete:function(){return this.iconConfig[this.statusCompleteErrorLevel]},noRunYet:function(){return null===this.salesChannel||null===this.salesChannel.id||null===this.lastFinishedRun},incompleteLastRun:function(){return null!==this.salesChannel&&null!==this.salesChannel.id&&null!==this.lastFinishedRun&&null!==this.lastCompleteRun&&this.lastFinishedRun.id!==this.lastCompleteRun.id},statusTitle:function(){var e=this.$tc("swag-paypal-pos.detail.overview.status.message.".concat(this.status));if(this.incompleteLastRun){var t=this.$tc("swag-paypal-pos.detail.overview.status.task.".concat(this.lastFinishedRun.task));this.isSyncing||(e+=" (".concat(t,")"))}return this.lastFinishedRun&&"cancelled"===this.lastFinishedRun.status&&!this.isSyncing&&(e=this.$tc("swag-paypal-pos.detail.overview.status.message.aborted")),e},disabled:function(){return null!==this.salesChannel&&null!==this.salesChannel.id&&!1===this.salesChannel.active}},watch:{lastFinishedRun:{handler:function(){this.statusErrorLevel=this.getHighestLevel(this.lastFinishedRun)},immediate:!0},lastCompleteRun:{handler:function(){this.statusCompleteErrorLevel=this.getHighestLevel(this.lastCompleteRun)},immediate:!0}},methods:{getHighestLevel:function(e){if(null===e)return null;if("cancelled"===e.status)return"info";var t=Math.max.apply(Math,Fn(e.logs.map((function(e){return e.level}))));return t>=400?"error":t>=300?"warning":"success"}}});n("rIaE");function Dn(e){return Dn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Dn(e)}function jn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function zn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?jn(Object(n),!0).forEach((function(t){Rn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):jn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Rn(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==Dn(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==Dn(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===Dn(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Bn=Shopware.Component,Mn=Shopware.Utils;Bn.register("swag-paypal-pos-boolean-radio",{template:'{% block swag_paypal_pos_boolean_radio %}\n    <sw-radio-field\n        v-model="castedValue"\n        v-bind="$attrs"\n        class="swag-paypal-pos-boolean-radio"\n        :name="name"\n        :options="options">\n    </sw-radio-field>\n{% endblock %}\n',model:{prop:"value",event:"change"},props:{value:{type:Boolean,required:!1,default:!1},optionTrue:{type:Object,required:!0,validator:function(e){return e.hasOwnProperty("name")}},optionFalse:{type:Object,required:!0,validator:function(e){return e.hasOwnProperty("name")}}},data:function(){return{inputId:Mn.createId()}},computed:{options:function(){return[zn({value:!0},this.optionTrue),zn({value:!1},this.optionFalse)]},castedValue:{get:function(){return this.value},set:function(e){this.$emit("change",e)}},name:function(){return"swag-paypal-pos-boolean-radio-".concat(this.inputId)}}});n("UTAG");var Nn=Shopware,Vn=Nn.Component,qn=Nn.Context,Un=Shopware.Data.Criteria;Vn.register("swag-paypal-pos-detail-logs",{template:'{% block swag_paypal_pos_detail_logs %}\n    {% block swag_paypal_pos_detail_logs_grid %}\n        <sw-data-grid identifier="swag-paypal-pos-detail-logs"\n                      :columns="columns"\n                      :dataSource="logs"\n                      :isLoading="isLoading || loadingLogs"\n                      :showActions="true"\n                      :showSelection="false"\n                      :showSettings="true"\n                      :allowColumnEdit="true"\n                      :sortBy="sortBy"\n                      :sortDirection="sortDirection"\n                      :skeletonItemAmount="limit"\n                      @column-sort="onSortColumn">\n\n            {% block swag_paypal_pos_detail_logs_grid_pagination %}\n                <template #pagination>\n                    <sw-pagination :limit="limit"\n                                   :page="page"\n                                   :total="total"\n                                   :total-visible="7"\n                                   @page-change="onPageChange">\n                    </sw-pagination>\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_date %}\n                <template #column-date="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_formatted %}\n                        <template v-if="item.createdAt">\n                            {{ item.createdAt | date({\n                                hour: \'2-digit\',\n                                minute: \'2-digit\',\n                                day: \'2-digit\',\n                                month: \'2-digit\',\n                                year: \'2-digit\'\n                            })\n                            }}\n                        </template>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_date_empty %}\n                        <template v-else>\n                            {{ $tc(\'swag-paypal-pos.detail.logs.noEntry\') }}\n                        </template>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n            {% block swag_paypal_pos_detail_logs_grid_column_state %}\n                <template #column-state="{ item }">\n\n                    {% block swag_paypal_pos_detail_logs_grid_column_state_label %}\n                        <sw-label v-if="item.level"\n                                  appearance="pill"\n                                  :variant="getLabelVariantForItem(item)">\n                            {{ $tc(getLabelForItem(item)) }}\n                        </sw-label>\n                    {% endblock %}\n\n                </template>\n            {% endblock %}\n\n        </sw-data-grid>\n    {% endblock %}\n{% endblock %}\n',inject:["SwagPayPalPosApiService","repositoryFactory"],mixins:["notification","swag-paypal-pos-log-label","listing"],props:{runId:{type:String,required:!0}},data:function(){return{logs:[],limit:10,sortBy:"createdAt",sortDirection:"DESC",loadingLogs:!1,isLoading:!1,disableRouteParams:!0}},computed:{logRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run_log")},columns:function(){return[{property:"date",dataIndex:"createdAt",label:"swag-paypal-pos.detail.syncedProducts.columns.date",width:"140px",sortable:!0},{property:"state",dataIndex:"level",label:"swag-paypal-pos.detail.syncedProducts.columns.state",width:"120px",sortable:!0},{property:"message",dataIndex:"message",label:"swag-paypal-pos.detail.logs.columnLastSync",sortable:!0}]}},methods:{getListCriteria:function(){var e=this.getMainListingParams(),t=new Un(this.page,this.limit);return t.addFilter(Un.equals("runId",this.runId)),t.addAssociation("posSalesChannelRun"),t.addSorting(Un.sort(e.sortBy,e.sortDirection,e.naturalSorting)),t.addSorting(Un.sort("level","DESC")),t.addSorting(Un.sort("createdAt","DESC")),t},getList:function(){var e=this;return this.loadingLogs=!0,this.logRepository.search(this.getListCriteria(),qn.api).then((function(t){e.logs=t,e.total=t.total,e.page=t.criteria.page,e.limit=t.criteria.limit,e.loadingLogs=!1}))},getLabelVariantForItem:function(e){return e.posSalesChannelRun&&"cancelled"===e.posSalesChannelRun.status?"info":this.getLabelVariant(e.level)},getLabelForItem:function(e){return e.posSalesChannelRun&&"cancelled"===e.posSalesChannelRun.status?"swag-paypal-pos.detail.logs.states.aborted":this.getLabel(e.level)}}});n("dyn+");Shopware.Component.register("swag-paypal-pos-getting-started",{template:'{% block swag_paypal_pos_getting_started %}\n    <sw-card position-identifier="swag-paypal-pos-getting-started"\n             :title="$tc(\'swag-paypal-pos.gettingStarted.cardTitle\')">\n\n        {% block swag_paypal_pos_getting_started_reader %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-reader"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_reader_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="\'swagpaypal/static/img/paypal-pos-reader.png\' | asset"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.readerImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_reader_description %}\n                    <div class="swag-paypal-pos-getting-started__description">\n\n                        {% block swag_paypal_pos_getting_started_reader_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_reader_description_text %}\n                            <div class="swag-paypal-pos-getting-started__description-text">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.readerText\') }}\n\n                                {% block swag_paypal_pos_getting_started_reader_description_link %}\n                                    <sw-external-link :href="$tc(\'swag-paypal-pos.gettingStarted.readerLinkTarget\')"\n                                                      class="swag-paypal-pos-getting-started__description-text-link">\n                                        {{ $tc(\'swag-paypal-pos.gettingStarted.readerLinkText\') }}\n                                    </sw-external-link>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n\n        {% block swag_paypal_pos_getting_started_app %}\n            <sw-container\n                    class="swag-paypal-pos-getting-started__container-app"\n                    columns="1fr 3fr"\n                    justify="left"\n                    align="center">\n\n                {% block swag_paypal_pos_getting_started_app_image %}\n                    <img class="swag-paypal-pos-getting-started__image"\n                         :src="\'swagpaypal/static/img/paypal-pos-app.png\' | asset"\n                         :alt="$tc(\'swag-paypal-pos.gettingStarted.appImageAlt\')"/>\n                {% endblock %}\n\n                {% block swag_paypal_pos_getting_started_app_description %}\n                    <div class="swag-paypal-pos-getting-started__description ">\n\n                        {% block swag_paypal_pos_getting_started_app_description_headline %}\n                            <div class="swag-paypal-pos-getting-started__description-headline">\n                                {{ $tc(\'swag-paypal-pos.gettingStarted.appHeadline\') }}\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_getting_started_app_description_text %}\n                            <div v-html="$tc(\'swag-paypal-pos.gettingStarted.appText\')"\n                                 class="swag-paypal-pos-getting-started__description-text">\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'});n("lx2N");Shopware.Component.register("swag-paypal-pos-continue-setup",{template:"{% block swag_paypal_pos_continue_setup %}\n    <sw-card position-identifier=\"swag-paypal-pos-continue-setup\"\n             :title=\"$tc('swag-paypal-pos.detail.overview.continueSetup.cardTitle')\">\n\n        {% block swag_paypal_pos_continue_setup_container %}\n            <div class=\"swag-paypal-pos__continue-setup\">\n\n                {% block swag_paypal_pos_continue_setup_container_headline %}\n                    <h6>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}</h6>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_firstLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.firstLine') }}</p>\n                {% endblock %}\n\n                {% block swag_paypal_pos_continue_setup_container_secondLine %}\n                    <p>{{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.secondLine') }}</p>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_continue_setup_button %}\n            <sw-button variant=\"ghost\"\n                       @click=\"onContinueSetup\">\n                {{ $tc('swag-paypal-pos.detail.overview.continueSetup.content.headline') }}\n            </sw-button>\n        {% endblock %}\n\n    </sw-card>\n{% endblock %}\n",methods:{onContinueSetup:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.$route.params.id}})}}});n("OjzJ");Shopware.Component.override("sw-sales-channel-menu",{computed:{buildMenuTree:function(){var e=this.$super("buildMenuTree"),t=[];return this.salesChannels.forEach((function(e){e.type.id===o&&t.push(e.id)})),e.forEach((function(e){t.includes(e.id)&&(e.path="swag.paypal.pos.detail")})),e}}}),Shopware.Component.override("sw-sales-channel-modal",{methods:{onAddChannel:function(e){if(this.isPayPalPosSalesChannel(e))return this.onCloseModal(),void this.$router.push({name:"swag.paypal.pos.wizard"});this.$super("onAddChannel",e)},isPayPalPosSalesChannel:function(e){return e===o}}});n("TQwE");var Gn=Shopware.Component,Hn=Shopware.Data.Criteria;Gn.register("swag-paypal-pos",{template:'{% block swag_paypal_pos %}\n    <sw-page class="swag-paypal-pos">\n\n        {% block swag_paypal_pos_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'swag-paypal-pos.header\') }}\n                </h2>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_actions %}\n            <template #smart-bar-actions>\n                <sw-button v-for="button in buttonConfig"\n                           size="small"\n                           :key="button.key"\n                           :disabled="button.disabled"\n                           :isLoading="button.isLoading || isLoading"\n                           :variant="button.variant"\n                           @click="onButtonClick(button.action)">\n                    {{ button.label }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_pos_content %}\n            <template #content>\n                <sw-card-view>\n\n                    {% block swag_paypal_pos_content_tabs %}\n                        <sw-tabs v-if="!isLoading" position-identifier="swag_paypal_pos_content_tabs" class="swag-paypal-pos__tabs">\n\n                            {%  block swag_paypal_pos_content_tab_base %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.overview\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.overview\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.overview\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_synced_products %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.syncedProducts\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.syncedProducts\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.syncedProducts\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_settings %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.settings\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.settings\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.settings\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_runs %}\n                                <sw-tabs-item :route="{ name: \'swag.paypal.pos.detail.runs\', params: { id: $route.params.id } }"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.runs\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.runs\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n\n                            {%  block swag_paypal_pos_content_tab_help %}\n                                <sw-tabs-item href="https://www.izettle.com/help/articles/1083274-what-is-pos"\n                                              target="_blank"\n                                              class="swag-paypal-pos__tab-help"\n                                              :title="$tc(\'swag-paypal-pos.tabTitle.help\')">\n                                    {{ $tc(\'swag-paypal-pos.tabTitle.help\') }}\n                                </sw-tabs-item>\n                            {% endblock %}\n                        </sw-tabs>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_account %}\n                        <swag-paypal-pos-account :lastRun="lastRun"\n                                                 :salesChannel="salesChannel">\n                        </swag-paypal-pos-account>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_content_card %}\n                        <router-view v-if="!isLoading"\n                                     :key="$route.params.id"\n                                     :salesChannel="salesChannel"\n                                     :cloneSalesChannelId="cloneSalesChannelId"\n                                     :lastRun="lastRun"\n                                     :lastCompleteRun="lastCompleteRun"\n                                     @buttons-update="updateButtons"\n                                     @load-sales-channel="loadSalesChannel"\n                                     @run-update="loadLastRun"\n                                     @update-clone-sales-channel="updateCloneSalesChannel">\n                        </router-view>\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_disclaimer_hero %}\n                        <sw-card v-show="!isLoading"\n                                 class="swag-paypal-pos__disclaimer-card"\n                                 position-identifier="swag-paypal-pos-disclaimer"\n                                 :hero="true">\n\n                            {% block swag_paypal_pos_disclaimer_container %}\n                                <div class="swag-paypal-pos__disclaimer">\n\n                                    {% block swag_paypal_pos_disclaimer_title %}\n                                        <div class="swag-paypal-pos__disclaimer-title disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.headline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_subtitle %}\n                                        <div class="swag-paypal-pos__disclaimer-subtitle disclaimer-content">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.subheadline\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_disclaimer_link %}\n                                        <a :href="$tc(\'swag-paypal-pos.detail.disclaimer.linkTarget\')"\n                                           class="link swag-paypal-pos__disclaimer-link disclaimer-content"\n                                           target="_blank">\n                                            {{ $tc(\'swag-paypal-pos.detail.disclaimer.linkText\') }}\n                                        </a>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-card>\n                    {% endblock %}\n                </sw-card-view>\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n',inject:["salesChannelService","repositoryFactory"],mixins:["placeholder"],data:function(){return{isLoading:!1,previousApiKey:null,salesChannel:{},lastRun:null,lastCompleteRun:null,cloneSalesChannelId:null,buttonConfig:[]}},metaInfo:function(){return{title:this.title}},computed:{title:function(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("sw-sales-channel.general.titleMenuItems"),this.$tc("swag-paypal-pos.general.moduleTitle")].reverse().join(" | ")},paypalPosSalesChannelRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},salesChannelCriteria:function(){var e=new Hn(1,500);return e.addAssociation(s),e.addAssociation("countries"),e.addAssociation("currencies"),e.addAssociation("domains"),e.addAssociation("languages"),e}},watch:{"$route.params.id":function(){this.loadSalesChannel()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.loadSalesChannel()},loadSalesChannel:function(){var e=this;return this.$route.params.id?(this.salesChannel&&(this.salesChannel=null),this.isLoading=!0,this.salesChannelRepository.get(this.$route.params.id,Shopware.Context.api,this.salesChannelCriteria).then((function(t){e.salesChannel=t,e.previousApiKey=t.extensions.paypalPosSalesChannel.apiKey,e.updateRun(),e.isLoading=!1}))):Promise.resolve()},updateCloneSalesChannel:function(e){this.cloneSalesChannelId=e},updateButtons:function(e){this.buttonConfig=e},onButtonClick:function(e){"string"!=typeof e?"function"==typeof e&&e.call():this.redirect(e)},updateRun:function(){return setTimeout(this.updateRun,2e4),this.loadLastRun()},loadLastRun:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=new Hn(1,1);return n.addFilter(Hn.equals("salesChannelId",this.salesChannel.id)),n.addFilter(Hn.not("AND",[Hn.equals("status","in_progress")])),n.addSorting(Hn.sort("createdAt","DESC")),t?n.addFilter(Hn.equals("task","complete")):n.addAssociation("logs"),this.runRepository.search(n,Shopware.Context.api).then((function(n){if(t)return e.lastCompleteRun=n.first(),void e.$forceUpdate();e.lastRun=n.first(),null!==e.lastRun&&"complete"!==e.lastRun.task?e.loadLastRun(!0):e.lastCompleteRun=e.lastRun,e.$forceUpdate()}))}}});n("Uj3z");Shopware.Component.register("swag-paypal-pos-detail-synced-products",{template:'{% block swag_paypal_pos_synced_products %}\n    <div class="swag-paypal-pos-detail-synced-products">\n\n        {% block swag_paypal_pos_synced_products_grid %}\n            <sw-card position-identifier="swag-paypal-pos-synced-products-grid"\n                     :title="$tc(\'swag-paypal-pos.detail.syncedProducts.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_synced_products_grid %}\n                    <template #grid>\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-synced-products"\n                                      :dataSource="products"\n                                      :columns="columns"\n                                      :isLoading="isLoading"\n                                      :showActions="actions.length > 0"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_synced_products_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_formatted %}\n                                        <template v-if="hasSync(item)">\n                                            {{ getSyncDate(item) | date({\n                                                hour: \'2-digit\',\n                                                minute: \'2-digit\',\n                                                day: \'2-digit\',\n                                                month: \'2-digit\',\n                                                year: \'2-digit\'\n                                            })\n                                            }}\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_date_empty %}\n                                        <template v-else>\n                                            {{ $tc(\'swag-paypal-pos.detail.syncedProducts.notSyncedYet\') }}\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_synced_products_grid_column_state_label_log %}\n                                        <template v-if="hasSync(item)">\n                                            <sw-label appearance="pill"\n                                                      :variant="getLabelVariant(getLevel(item))">\n                                                {{ $tc(getLabel(getLevel(item))) }}\n                                            </sw-label>\n                                        </template>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_synced_products_grid_actions %}\n                                <template v-if="actions"\n                                          #actions="{ item }">\n                                    <sw-context-menu-item v-for="action in actions"\n                                                          :key="action.label"\n                                                          @click="action.callback(item)">\n                                        {{ $tc(action.label) }}\n                                    </sw-context-menu-item>\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_synced_products_empty_state %}\n                    <sw-empty-state v-if="total < 1"\n                                    class="swag-paypal-pos-detail-synced-products__empty-state"\n                                    :title="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.title\')"\n                                    :subline="$tc(\'swag-paypal-pos.detail.syncedProducts.emptyState.message\')">\n                    </sw-empty-state>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService"],mixins:["swag-paypal-pos-log-label","listing"],props:{salesChannel:{type:Object,required:!0}},data:function(){return{products:[],limit:10,isLoading:!1,actions:[{label:"swag-paypal-pos.detail.syncedProducts.actions.productDetails",callback:this.onProductDetails}],columns:[{property:"name",label:"swag-paypal-pos.detail.syncedProducts.columns.name",sortable:!1},{property:"state",label:"swag-paypal-pos.detail.syncedProducts.columns.state",sortable:!1},{property:"date",label:"swag-paypal-pos.detail.syncedProducts.columns.date",sortable:!1}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$emit("buttons-update",[]),this.getList()},getList:function(){var e=this;if(null===this.salesChannel||null===this.salesChannel.id)return Promise.resolve();this.isLoading=!0;var t=this.getMainListingParams();return this.SwagPayPalPosApiService.getProductLog(this.salesChannel.id,t.page,t.limit).then((function(t){e.products=Object.values(t.elements),e.total=t.total,e.isLoading=!1}))},onProductDetails:function(e){this.$router.push({name:"sw.product.detail.base",params:{id:e.id}})},hasSync:function(e){return e.extensions.paypalPosLog.length||e.extensions.paypalPosSync.length},getSyncDate:function(e){return this.hasSync(e)?e.extensions.paypalPosLog[0]?e.extensions.paypalPosLog[0].posSalesChannelRun.updatedAt||e.extensions.paypalPosLog[0].createdAt:e.extensions.paypalPosSync[0].updatedAt||e.extensions.paypalPosSync[0].createdAt:null},getLevel:function(e){return e.extensions.paypalPosLog[0]?e.extensions.paypalPosLog[0].level:200}}});n("IGlU");var Zn=Shopware.Component,Kn=Shopware.Data.Criteria;Zn.register("swag-paypal-pos-detail-overview",{template:'{% block swag_paypal_pos_detail_overview %}\n    <div class="sw-sales-channel-detail-overview">\n\n        {% block swag_paypal_pos_detail_overview_status %}\n            <swag-paypal-pos-status-view\n                    v-if="salesChannel.active"\n                    :isLoading="isLoading"\n                    :isSyncing="isSyncing"\n                    :lastCompleteRun="lastCompleteRun"\n                    :lastFinishedRun="lastRun"\n                    :salesChannel="salesChannel"\n                    :syncErrors="syncErrors">\n\n                {% block swag_paypal_pos_detail_overview_status_actions %}\n                    <template #actions>\n                        <sw-button-group v-if="salesChannel && salesChannel.active && !isSyncing">\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_button %}\n                                <sw-button class="swag-paypal-pos-detail-overview__sync-button"\n                                           variant="primary"\n                                           @click="onStartSync">\n                                    {{ $tc(\'swag-paypal-pos.detail.overview.buttonSync\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu %}\n                                <sw-context-button>\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_button %}\n                                        <template #button>\n                                            <sw-button class="swag-paypal-pos-detail-overview__sync-button-context"\n                                                       variant="primary"\n                                                       square\n                                                       :disabled="isSyncing">\n                                                <sw-icon name="regular-chevron-down-xs" size="16"></sw-icon>\n                                            </sw-button>\n                                        </template>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_products %}\n                                        <sw-context-menu-item @click="onStartProductSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncProducts\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_image %}\n                                        <sw-context-menu-item @click="onStartImageSync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncImages\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_pos_detail_overview_status_actions_sync_context_menu_item_inventory %}\n                                        <sw-context-menu-item @click="onStartInventorySync">\n                                            {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncInventory\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                            {% endblock %}\n                        </sw-button-group>\n\n                        {% block swag_paypal_pos_detail_overview_status_actions_sync_abort_button %}\n                            <sw-button v-if="isSyncing"\n                                       @click="onSyncAbort">\n                                {{ $tc(\'swag-paypal-pos.detail.overview.buttonSyncAbort\') }}\n                            </sw-button>\n                        {% endblock %}\n                    </template>\n                {% endblock %}\n            </swag-paypal-pos-status-view>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_setup %}\n            <swag-paypal-pos-continue-setup v-else>\n            </swag-paypal-pos-continue-setup>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_overview_getting_started %}\n            <swag-paypal-pos-getting-started>\n            </swag-paypal-pos-getting-started>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","salesChannelService","repositoryFactory"],mixins:["placeholder"],props:{salesChannel:{type:Object,required:!1,default:null},lastRun:{type:Object,required:!1,default:null},lastCompleteRun:{type:Object,required:!1,default:null}},data:function(){return{isSyncing:!1,syncErrors:null,syncingRunId:null,statusErrorLevel:null,isLoading:!1}},computed:{runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")}},watch:{"salesChannel.id":function(){this.checkForSync()},lastRun:function(){this.$forceUpdate()}},created:function(){this.createdComponent()},mounted:function(){this.mountedComponent()},methods:{createdComponent:function(){this.checkForSync()},mountedComponent:function(){this.updateButtons()},forceUpdate:function(){this.$forceUpdate()},startSync:function(e){var t=this;this.syncErrors=null,this.isSyncing=!0,this.updateButtons(!0),e(this.salesChannel.id).then((function(e){t.syncingRunId=e.runId,t.updateSync()})).catch((function(e){t.syncErrors=e.response.data.errors,t.$emit("run-update"),t.isSyncing=!1,t.updateButtons()}))},updateSync:function(){var e=this;null!==this.syncingRunId&&this.runRepository.get(this.syncingRunId,Shopware.Context.api).then((function(t){null===t||"in_progress"!==t.status?(e.syncingRunId=null,e.$emit("run-update"),e.isSyncing=!1,e.updateButtons()):setTimeout(e.updateSync,1500)}))},onStartSync:function(){this.startSync(this.SwagPayPalPosApiService.startCompleteSync.bind(this.SwagPayPalPosApiService))},onStartProductSync:function(){this.startSync(this.SwagPayPalPosApiService.startProductSync.bind(this.SwagPayPalPosApiService))},onStartImageSync:function(){this.startSync(this.SwagPayPalPosApiService.startImageSync.bind(this.SwagPayPalPosApiService))},onStartInventorySync:function(){this.startSync(this.SwagPayPalPosApiService.startInventorySync.bind(this.SwagPayPalPosApiService))},onSyncAbort:function(){var e=this;null!==this.syncingRunId&&this.SwagPayPalPosApiService.abortSync(this.syncingRunId).then((function(){e.updateSync()}))},checkForSync:function(){var e=this;if(null!==this.salesChannel&&null!==this.salesChannel.id){var t=new Kn(1,1);t.addFilter(Kn.equals("salesChannelId",this.salesChannel.id)),t.addFilter(Kn.equals("status","in_progress")),t.addSorting(Kn.sort("createdAt","DESC")),this.runRepository.search(t,Shopware.Context.api).then((function(t){null!==t.first()&&(e.isSyncing=!0,e.syncingRunId=t.first().id,e.updateSync())}))}},updateButtons:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=[{key:"sync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSync"),variant:"primary",action:this.onStartSync,disabled:!(this.salesChannel&&this.salesChannel.active),isLoading:this.isSyncing}];e&&t.unshift({key:"abortSync",label:this.$tc("swag-paypal-pos.detail.overview.buttonSyncAbort"),action:this.onSyncAbort,disabled:!(this.salesChannel&&this.salesChannel.active)}),this.$emit("buttons-update",t)}}});n("EO6S");function Yn(e){return Yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Yn(e)}function Wn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function Qn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Wn(Object(n),!0).forEach((function(t){Jn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Wn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Jn(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==Yn(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==Yn(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===Yn(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Xn=Shopware,ea=Xn.Component,ta=Xn.Context,na=Xn.State,aa=ea.getComponentHelper().mapPropertyErrors,ia=Shopware.Classes.ShopwareError;ea.register("swag-paypal-pos-detail-settings",{template:'{% block swag_paypal_pos_detail_settings %}\n    <div class="swag-paypal-pos-detail-settings">\n\n        {% block swag_paypal_pos_detail_settings_alert %}\n            <sw-alert class="swag-paypal-pos-detail-settings__save-alert">\n                {{ $tc(\'swag-paypal-pos.detail.settings.saveAlert\') }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_basic %}\n            <sw-card position-identifier="swag-paypal-pos-detail-settings-basic"\n                     :isLoading="isLoading"\n                     :title="$tc(\'swag-paypal-pos.detail.settings.titleGeneralSettings\')">\n                <sw-container columns="1fr 200px" gap="0px 30px">\n\n                    {% block swag_paypal_pos_detail_settings_input_name %}\n                        <sw-text-field v-model="salesChannel.name"\n                                       required\n                                       type="text"\n                                       validation="required"\n                                       :error="salesChannelNameError"\n                                       :disabled="!acl.can(\'sales_channel.editor\')"\n                                       :label="$tc(\'sw-sales-channel.detail.labelInputName\')"\n                                       :placeholder="placeholder(salesChannel, \'name\', $tc(\'sw-sales-channel.detail.placeholderName\'))">\n                        </sw-text-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_input_active %}\n                        <sw-switch-field v-model="salesChannel.active"\n                                         bordered\n                                         :disabled="!acl.can(\'sales_channel.editor\')"\n                                         :label="$tc(\'sw-sales-channel.detail.labelInputActive\')"\n                                         :helpText="$tc(\'swag-paypal-pos.detail.settings.activeHelpText\')">\n                        </sw-switch-field>\n                    {% endblock %}\n\n                </sw-container>\n\n                {% block swag_paypal_pos_detail_settings_input_media_domain %}\n                    <swag-paypal-pos-url-field v-model="swagPaypalPosSalesChannel.mediaDomain"\n                                               required\n                                               validation="required"\n                                               :error="swagPaypalPosSalesChannelMediaDomainError"\n                                               :disabled="!acl.can(\'sales_channel.editor\')"\n                                               :label="$tc(\'swag-paypal-pos.detail.settings.domain\')"\n                                               :helpText="$tc(\'swag-paypal-pos.detail.settings.domainHelpText\')"\n                                               @input="forceUpdate">\n                    </swag-paypal-pos-url-field>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_language %}\n                    <sw-entity-single-select v-model="salesChannel.languageId"\n                                             entity="language"\n                                             required\n                                             :disabled="!acl.can(\'sales_channel.editor\')"\n                                             :label="$tc(\'global.entities.language\')"\n                                             @change="changeLanguage">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_input_product_stream %}\n                    {# ToDo PPI-56 - implement support for product streams #}\n                    <sw-entity-single-select v-if="false"\n                                             v-model="swagPaypalPosSalesChannel.productStreamId"\n                                             entity="product_stream"\n                                             :disabled="!acl.can(\'sales_channel.editor\')"\n                                             :label="$tc(\'swag-paypal-pos.detail.settings.productStream\')"\n                                             @change="forceUpdate">\n                    </sw-entity-single-select>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_sync %}\n            <div class="sw-sales-channel-detail-sync">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-sync"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titleSync\')">\n\n                    {% block swag_paypal_pos_detail_settings_sync_input %}\n                        <sw-radio-field\n                            v-model="salesChannel.extensions.paypalPosSalesChannel.replace"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                            class="swag-paypal-pos-boolean-radio"\n                            :options="optionsReplace"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @input="forceUpdate">\n                        </sw-radio-field>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_prices %}\n            <div class="sw-sales-channel-detail-prices">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-prices"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titlePrices\')">\n\n                    {% block swag_paypal_pos_detail_settings_prices_input %}\n                        <swag-paypal-pos-boolean-radio\n                            v-model="swagPaypalPosSalesChannel.syncPrices"\n                            class="swag-paypal-pos-detail-settings__sync-prices-input"\n                            :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                            :optionTrue="optionSyncPrices"\n                            :optionFalse="optionNotSyncPrices"\n                            :disabled="!acl.can(\'sales_channel.editor\')"\n                            @input="forceUpdate">\n                        </swag-paypal-pos-boolean-radio>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_credentials %}\n            <div class="sw-sales-channel-detail-credentials">\n                <sw-card position-identifier="swag-paypal-pos-detail-settings-credentials"\n                         :isLoading="isLoading"\n                         :title="$tc(\'swag-paypal-pos.detail.settings.titleCredentials\')">\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey %}\n                        <sw-password-field v-model="swagPaypalPosSalesChannel.apiKey"\n                                           class="swag-paypal-pos-detail-settings__apikey-field"\n                                           required\n                                           :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                                           :disabled="!acl.can(\'sales_channel.editor\')"\n                                           :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                                           @input="forceUpdate">\n                            <template #suffix>\n\n                                {% block swag_paypal_pos_detail_settings_credentials_apikey_suffix %}\n                                    <sw-icon name="regular-low-vision"\n                                             class="swag-paypal-pos-detail-settings__apikey-suffix"\n                                             size="22px">\n                                    </sw-icon>\n                                {% endblock %}\n                            </template>\n                        </sw-password-field>\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description %}\n                        <div class="swag-paypal-pos-detail-settings__apikey-description">\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_text %}\n                                <div class="swag-paypal-pos-detail-settings__apikey-description-text">\n                                    {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link %}\n                                <sw-external-link v-if="acl.can(\'sales_channel.editor\')"\n                                                  :href="apiKeyUrl"\n                                                  class="swag-paypal-pos-detail-settings__apikey-description-link">\n\n                                    {% block swag_paypal_pos_detail_settings_credentials_apikey_description_link_text %}\n                                        {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                                    {% endblock %}\n                                </sw-external-link>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                </sw-card>\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_settings_options %}\n            <sw-card position-identifier="swag-paypal-pos-detail-settings-options"\n                     :title="$tc(\'swag-paypal-pos.detail.settings.optionsTitle\')"\n                     :isLoading="isLoading">\n                <template #grid>\n                    <sw-container rows="auto auto">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset %}\n                            <sw-card-section>\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="swag-paypal-pos-detail-settings__reset-sync">\n\n                                    {% block sw_sales_channel_detail_base_options_reset_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            {{ $tc(\'swag-paypal-pos.detail.settings.reset.descriptionText\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_reset_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button size="small"\n                                                       :disabled="!acl.can(\'sales_channel.editor\')"\n                                                       @click="showResetModal = true">\n                                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.buttonTitle\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_detail_settings_options_delete %}\n                            <sw-card-section divider="top">\n                                <sw-container columns="1fr 175px" gap="0px 30px" class="sw-sales-channel-detail-settings__delete-sales-channel">\n\n                                    {% block sw_sales_channel_detail_base_options_delete_text %}\n                                        <div class="swag-paypal-pos-detail-settings__options-description-text">\n                                            <strong>{{ $tc(\'global.default.warning\') }}</strong>\n                                            {{ $tc(\'sw-sales-channel.detail.textDeleteSalesChannelWarning\') }}\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block sw_sales_channel_detail_base_options_delete_button %}\n                                        <div class="swag-paypal-pos-detail-settings__options-button">\n                                            <sw-button\n                                                variant="danger"\n                                                size="small"\n                                                :disabled="!acl.can(\'sales_channel.deleter\')"\n                                                @click="showDeleteModal = true">\n                                                {{ $tc(\'sw-sales-channel.detail.buttonDelete\') }}\n                                            </sw-button>\n                                        </div>\n                                    {% endblock %}\n\n                                </sw-container>\n                            </sw-card-section>\n                        {% endblock %}\n\n                    </sw-container>\n                </template>\n\n                {% block swag_paypal_pos_detail_settings_options_reset_modal %}\n                    <sw-modal v-if="showResetModal"\n                              class="swag-paypal-pos-detail-settings__reset-sync-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'swag-paypal-pos.detail.settings.reset.modalTitle\')"\n                              @modal-close="showResetModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_reset_modal_confirmtext %}\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-confirm-text">\n                                {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalConfirmText\') }}\n                            </p>\n                            <p class="swag-paypal-pos-detail-settings__reset-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'swag-paypal-pos.detail.settings.reset.modalTextInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_reset_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_abort %}\n                                    <sw-button size="small" @click="showResetModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_reset_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmReset">\n                                        {{ $tc(\'swag-paypal-pos.detail.settings.reset.modalButtonConfirm\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_settings_options_delete_modal %}\n                    <sw-modal v-if="showDeleteModal"\n                              class="sw-sales-channel-detail-settings__delete-modal"\n                              ref="modal"\n                              variant="small"\n                              :title="$tc(\'sw-sales-channel.detail.deleteModalTitle\')"\n                              @modal-close="showDeleteModal = false">\n\n                        {% block swag_paypal_pos_detail_settings_options_delete_modal_confirmtext %}\n                            <p class="sw-sales-channel-detail-settings__delete-modal-confirm-text">\n                                {{ $tc(\'sw-sales-channel.detail.textConfirmDelete\') }}\n                            </p>\n                            <p class="sw-sales-channel-detail-settings__delete-modal-name">\n                                <strong>{{ placeholder(salesChannel, \'name\') }}</strong>\n                            </p>\n                            <p>{{ $tc(\'sw-sales-channel.detail.textDeleteInfo\') }}</p>\n                        {% endblock %}\n\n                        {% block sw_sales_channel_detail_options_delete_modal_footer %}\n                            <template #modal-footer>\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_abort %}\n                                    <sw-button size="small" @click="showDeleteModal = false">\n                                        {{ $tc(\'global.default.cancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_settings_options_delete_modal_confirm %}\n                                    <sw-button size="small"\n                                               variant="danger"\n                                               @click="onConfirmDelete">\n                                        {{ $tc(\'sw-sales-channel.detail.buttonConfirmDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </template>\n                        {% endblock %}\n\n                    </sw-modal>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory","acl"],mixins:["swag-paypal-pos-catch-error","placeholder","notification"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,showDeleteModal:!1,showResetModal:!1,isSaveSuccessful:!1,isTestingCredentials:!1,isTestCredentialsSuccessful:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl(),previousApiKey:this.salesChannel.extensions.paypalPosSalesChannel.apiKey}},computed:Qn(Qn(Qn({},aa("salesChannel",["name"])),aa("swagPaypalPosSalesChannel",["mediaDomain"])),{},{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},optionSyncPrices:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionNotSyncPrices:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}},optionsReplace:function(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]},swagPaypalPosSalesChannel:function(){return this.salesChannel.extensions.paypalPosSalesChannel}}),mounted:function(){this.mountedComponent()},methods:{mountedComponent:function(){this.updateButtons()},forceUpdate:function(){this.$forceUpdate()},onSave:function(){var e=this;return this.isLoading=!0,this.isSaveSuccessful=!1,this.updateButtons(),this.swagPaypalPosSalesChannel.apiKey===this.previousApiKey?this.save():this.SwagPayPalPosSettingApiService.validateApiCredentials(this.swagPaypalPosSalesChannel.apiKey,this.salesChannel.id).then((function(){return e.SwagPayPalPosSettingApiService.fetchInformation(e.salesChannel,!0)})).then(this.save).catch((function(t){throw e.catchAuthenticationError(t),e.isLoading=!1,e.updateButtons(),t}))},save:function(){var e=this;return this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id).catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError")),this.salesChannelRepository.save(this.salesChannel,ta.api).then((function(){e.isLoading=!1,e.isSaveSuccessful=!0,e.updateButtons(),e.$emit("load-sales-channel"),e.$root.$emit("sales-channel-change"),null!==e.cloneSalesChannelId&&e.SwagPayPalPosSettingApiService.cloneProductVisibility(e.cloneSalesChannelId,e.salesChannel.id).catch(e.catchError.bind(e,"swag-paypal-pos.messageCloneError"))})).catch((function(){e.isLoading=!1,e.updateButtons(),e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageSaveError",0,{name:e.salesChannel.name||e.placeholder(e.salesChannel,"name")})})})).finally((function(){if(null===e.swagPaypalPosSalesChannel.mediaDomain){var t="swag_paypal_pos_sales_channel.".concat(e.swagPaypalPosSalesChannel.id,".mediaDomain"),n=new ia({code:"INVALID_URL"});na.commit("error/addApiError",{expression:t,error:n})}}))},testCredentials:function(){var e=this,t=this.swagPaypalPosSalesChannel.apiKey;this.isTestingCredentials=!0,this.isTestCredentialsSuccessful=!1,this.SwagPayPalPosSettingApiService.validateApiCredentials(t).then((function(t){var n=t.credentialsValid;e.isTestingCredentials=!1,e.isTestCredentialsSuccessful=n})).catch((function(t){e.catchAuthenticationError(t),e.isTestingCredentials=!1}))},catchAuthenticationError:function(e){this.catchError("swag-paypal-pos.authentication.messageTestError",e),this.isTestingCredentials=!1,this.isTestCredentialsSuccessful=!1},updateButtons:function(){var e=[{key:"save",label:this.$tc("global.default.save"),variant:"primary",action:this.onSave,disabled:!1,isLoading:this.isLoading}];this.$emit("buttons-update",e)},onConfirmDelete:function(){var e=this;this.showDeleteModal=!1,this.$nextTick((function(){e.deleteSalesChannel(e.salesChannel.id),e.$router.push({name:"sw.dashboard.index"})}))},deleteSalesChannel:function(e){var t=this;return this.SwagPayPalPosWebhookRegisterService.unregisterWebhook(e).finally((function(){return t.salesChannelRepository.delete(e,Shopware.Context.api).then((function(){t.$root.$emit("sales-channel-change")}))}))},onConfirmReset:function(){var e=this;this.showResetModal=!1,this.$nextTick((function(){e.SwagPayPalPosApiService.resetSync(e.salesChannel.id).then((function(){e.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:e.salesChannel.id}})}))}))},changeLanguage:function(){var e=this;this.$nextTick((function(){e.salesChannel.languages.length=0,e.salesChannel.languages.push({id:e.salesChannel.languageId}),e.$forceUpdate()}))}}});n("mcvk");var oa=Shopware,sa=oa.Component,ra=oa.Context,la=Shopware.Data.Criteria;sa.register("swag-paypal-pos-detail-runs",{template:'{% block swag_paypal_pos_detail_runs %}\n    <div class="swag-paypal-pos-detail-runs">\n\n        {% block swag_paypal_pos_detail_runs_card %}\n            <sw-card position-identifier="swag-paypal-pos-detail-runs"\n                     :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                     :isLoading="isLoading">\n\n                {% block swag_paypal_pos_detail_runs_card_grid %}\n                    <template #grid>\n\n                        <sw-data-grid v-if="total > 0"\n                                      identifier="swag-paypal-pos-detail-runs"\n                                      :columns="columns"\n                                      :dataSource="runs"\n                                      :isLoading="isLoading || total === 0"\n                                      :showActions="true"\n                                      :showSelection="false"\n                                      :showSettings="true"\n                                      :allowColumnEdit="true"\n                                      :sortBy="sortBy"\n                                      :sortDirection="sortDirection"\n                                      :skeletonItemAmount="limit"\n                                      @column-sort="onSortColumn">\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination :limit="limit"\n                                                   :page="page"\n                                                   :total="total"\n                                                   :total-visible="7"\n                                                   @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_other_grid_column_log %}\n                                <template #column-task="{ item }">\n                                    {{ $tc(`swag-paypal-pos.detail.runs.${item.task}Task`) }}\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_state %}\n                                <template #column-state="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_state_label %}\n                                        <sw-label appearance="pill"\n                                                  :variant="getLabelVariant(item)">\n                                            {{ $tc(getLabel(item)) }}\n                                        </sw-label>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_column_date %}\n                                <template #column-date="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_column_date_formatted %}\n                                        {{ item.finishedAt | date({\n                                            hour: \'2-digit\',\n                                            minute: \'2-digit\',\n                                            day: \'2-digit\',\n                                            month: \'2-digit\',\n                                            year: \'2-digit\'\n                                        }) }}\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_detail_runs_card_grid_actions %}\n                                <template #actions="{ item }">\n\n                                    {% block swag_paypal_pos_detail_runs_card_grid_actions_details %}\n                                        <sw-context-menu-item :disabled="item.logs.length <= 0"\n                                                              @click="onShowModal(item.id)">\n                                            {{ $tc(\'swag-paypal-pos.detail.runs.actions.showDetails\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_empty_state %}\n                    <template #default>\n                        <sw-empty-state v-if="total < 1"\n                                        class="swag-paypal-pos-detail-runs__empty-state"\n                                        :title="$tc(\'swag-paypal-pos.detail.runs.emptyState.title\')"\n                                        :subline="$tc(\'swag-paypal-pos.detail.runs.emptyState.message\')">\n                        </sw-empty-state>\n                    </template>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_card_toolbar %}\n                    <template #toolbar v-if="total > 0">\n\n                        {% block swag_paypal_pos_detail_runs_card_toolbar_container %}\n                            <sw-container columns="1fr min-content"\n                                          align="center">\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_text %}\n                                    <p>{{ $tc(\'swag-paypal-pos.detail.runs.toolbarText\') }}</p>\n                                {% endblock %}\n\n                                {% block swag_paypal_pos_detail_runs_card_toolbar_container_button %}\n                                    <sw-button\n                                            :disabled="!acl.can(\'sales_channel.editor\')"\n                                            @click="onClearLogs">\n                                        {{ $tc(\'swag-paypal-pos.detail.cleanLog\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                            </sw-container>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-card>\n        {% endblock %}\n\n        {% block swag_paypal_pos_detail_runs_log_modal %}\n            <sw-modal v-if="showModal"\n                      class="swag-paypal-pos-detail-runs__modal"\n                      :title="$tc(\'swag-paypal-pos.detail.runs.title\')"\n                      :isLoading="isLoading"\n                      variant="large"\n                      @modal-close="onCloseModal">\n\n                {% block swag_paypal_pos_detail_runs_log_modal_logs %}\n                    <swag-paypal-pos-detail-logs :runId="currentRunId"></swag-paypal-pos-detail-logs>\n                {% endblock %}\n\n                {% block swag_paypal_pos_detail_runs_log_modal_footer %}\n                    <template #modal-footer>\n\n                        {% block swag_paypal_pos_detail_runs_log_modal_footer_close_modal_button %}\n                            <sw-button variant="primary"\n                                       @click="onCloseModal">\n                                {{ $tc(\'global.default.cancel\') }}\n                            </sw-button>\n                        {% endblock %}\n\n                    </template>\n                {% endblock %}\n\n            </sw-modal>\n        {% endblock %}\n\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService","repositoryFactory","acl"],mixins:["swag-paypal-pos-catch-error","notification","listing"],props:{salesChannel:{type:Object,required:!1,default:null}},data:function(){return{runs:[],limit:10,sortBy:"finishedAt",sortDirection:"DESC",isLoading:!1,isCleaningLog:!1,showModal:!1,currentRunId:""}},computed:{runRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel_run")},columns:function(){return[{property:"task",dataIndex:"task",label:"swag-paypal-pos.detail.runs.columns.task",sortable:!0},{property:"state",dataIndex:"logs.level",label:"swag-paypal-pos.detail.runs.columns.state",sortable:!0},{property:"date",dataIndex:"finishedAt",label:"swag-paypal-pos.detail.runs.columns.date",sortable:!0}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.$emit("buttons-update",[])},getListCriteria:function(){var e=new la(this.page,this.limit);e.addFilter(la.equals("salesChannelId",this.salesChannel.id)),e.addFilter(la.not("AND",[la.equals("status","in_progress")])),e.addAssociation("logs"),e.getAssociation("logs").limit=1,e.getAssociation("logs").addSorting(la.sort("level","DESC"));var t=this.getMainListingParams();return e.addSorting(la.sort(t.sortBy,t.sortDirection,t.naturalSorting)),e.addSorting(la.sort("finishedAt","DESC")),e},getList:function(){var e=this;return null===this.salesChannel||null===this.salesChannel.id?Promise.resolve():(this.isLoading=!0,this.runRepository.search(this.getListCriteria(),ra.api).then((function(t){e.runs=t,e.total=t.total,e.page=t.criteria.page,e.limit=t.criteria.limit,e.isLoading=!1})))},onShowModal:function(e){this.currentRunId=e,this.showModal=!0},onCloseModal:function(){this.showModal=!1,this.currentRunId=""},onClearLogs:function(){var e=this;return this.isLoading=!0,this.SwagPayPalPosApiService.startLogCleanup(this.salesChannel.id).then((function(){return e.$emit("run-update"),e.getList()})).catch((function(t){e.catchError(null,t),e.getList()}))},getLabelVariant:function(e){return"cancelled"===e.status?"info":"failed"===e.status?"danger":e.logs.length<=0?"success":e.logs[0].level>=400?"danger":e.logs[0].level>=300?"warning":e.logs[0].level>200?"info":"success"},getLabel:function(e){return"cancelled"===e.status?"swag-paypal-pos.detail.runs.states.aborted":"failed"===e.status?"swag-paypal-pos.detail.runs.states.failed":e.logs.length<=0?"swag-paypal-pos.detail.runs.states.successful":e.logs[0].level>200?"swag-paypal-pos.detail.runs.states.withWarnings":"swag-paypal-pos.detail.runs.states.successful"}}});n("VNZe");function ca(e){return ca="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ca(e)}function pa(){pa=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",s=i.asyncIterator||"@@asyncIterator",r=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function c(e,t,n,i){var o=t&&t.prototype instanceof u?t:u,s=Object.create(o.prototype),r=new C(i||[]);return a(s,"_invoke",{value:v(e,n,r)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var d={};function u(){}function g(){}function h(){}var y={};l(y,o,(function(){return this}));var f=Object.getPrototypeOf,_=f&&f(f(x([])));_&&_!==t&&n.call(_,o)&&(y=_);var m=h.prototype=u.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(a,o,s,r){var l=p(e[a],e,o);if("throw"!==l.type){var c=l.arg,d=c.value;return d&&"object"==ca(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,s,r)}),(function(e){i("throw",e,s,r)})):t.resolve(d).then((function(e){c.value=e,s(c)}),(function(e){return i("throw",e,s,r)}))}r(l.arg)}var o;a(this,"_invoke",{value:function(e,n){function a(){return new t((function(t,a){i(e,n,t,a)}))}return o=o?o.then(a,a):a()}})}function v(e,t,n){var a="suspendedStart";return function(i,o){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===i)throw o;return I()}for(n.method=i,n.arg=o;;){var s=n.delegate;if(s){var r=S(s,n);if(r){if(r===d)continue;return r}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var l=p(e,t,n);if("normal"===l.type){if(a=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(a="completed",n.method="throw",n.arg=l.arg)}}}function S(e,t){var n=t.method,a=e.iterator[n];if(void 0===a)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=p(a,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var o=i.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function P(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function x(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return g.prototype=h,a(m,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:g,configurable:!0}),g.displayName=l(h,r,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,l(e,r,"GeneratorFunction")),e.prototype=Object.create(m),e},e.awrap=function(e){return{__await:e}},w(b.prototype),l(b.prototype,s,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,a,i,o){void 0===o&&(o=Promise);var s=new b(c(t,n,a,i),o);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},w(m),l(m,r,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var a in t)n.push(a);return n.reverse(),function e(){for(;n.length;){var a=n.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},e.values=x,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],s=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var r=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(r&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(r){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var s=o?o.completion:{};return s.type=e,s.arg=t,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),P(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var i=a.arg;P(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:x(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function da(e,t,n,a,i,o,s){try{var r=e[o](s),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(a,i)}function ua(e){return function(){var t=this,n=arguments;return new Promise((function(a,i){var o=e.apply(t,n);function s(e){da(o,a,i,s,r,"next",e)}function r(e){da(o,a,i,s,r,"throw",e)}s(void 0)}))}}var ga=Shopware,ha=ga.Component,ya=ga.Context,fa=Shopware.Data.Criteria;ha.extend("swag-paypal-pos-wizard","sw-first-run-wizard-modal",{template:'{% block sw_first_run_wizard_modal %}\n    <div class="swag-paypal-pos-wizard">\n        <sw-modal v-if="showModal"\n                  class="swag-paypal-pos-wizard-modal"\n                  position-identifier="swag-paypal-pos-wizard-modal"\n                  :title="title"\n                  :variant="variant"\n                  @modal-close="onCloseModal">\n\n            {% block swag_paypal_pos_wizard_modal_content %}\n                <div class="swag-paypal-pos-wizard__modal-content">\n                    <sw-container class="swag-paypal-pos-wizard__columns"\n                                  :class="{ \'swag-paypal-pos-wizard__columns--two\': showSteps }">\n\n                        {% block swag_paypal_pos_wizard_modal_content_steps %}\n                            <div v-if="showSteps"\n                                 class="swag-paypal-pos-wizard__steps">\n                                <sw-step-display :initialItemVariants="stepInitialItemVariants"\n                                                 :itemIndex="stepIndex"\n                                                 :itemVariant="stepVariant">\n                                    <sw-step-item v-for="pageName in displayStepperPages" :key="pageName">\n                                        {{ $tc(`swag-paypal-pos.wizard.stepItemTitle.${pageName}`) }}\n                                    </sw-step-item>\n                                </sw-step-display>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_content_page %}\n                            <div class="swag-paypal-pos-wizard__page">\n                                <router-view :salesChannel="salesChannel"\n                                             :cloneSalesChannelId="cloneSalesChannelId"\n                                             :saveSalesChannel="save"\n                                             :isLoading="isLoading"\n                                             @buttons-update="updateButtons"\n                                             @frw-set-title="setTitle"\n                                             @frw-finish="onFinishWizard"\n                                             @toggle-loading="toggleLoading"\n                                             @recreate-sales-channel="createNewSalesChannel"\n                                             @update-clone-sales-channel="updateCloneSalesChannel">\n                                </router-view>\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                </div>\n            {% endblock %}\n\n            {% block swag_paypal_pos_wizard_modal_footer %}\n                <template #modal-footer>\n                    <div class="swag-paypal-pos-wizard__footer">\n\n                        {% block swag_paypal_pos_wizard_modal_footer_left %}\n                            <div class="footer-left">\n                                <sw-button v-for="button in buttons.left"\n                                           size="small"\n                                           :key="button.key"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n\n                        {% block swag_paypal_pos_wizard_modal_footer_right %}\n                            <div class="footer-right">\n                                <sw-button v-for="button in buttons.right"\n                                           size="small"\n                                           :key="button.key"\n                                           :disabled="button.disabled"\n                                           :isLoading="isLoading"\n                                           :variant="button.variant"\n                                           @click="onButtonClick(button.action)">\n                                    {{ button.label }}\n                                </sw-button>\n                            </div>\n                        {% endblock %}\n                    </div>\n                </template>\n            {% endblock %}\n        </sw-modal>\n    </div>\n{% endblock %}\n\n',inject:["SwagPayPalPosApiService","SwagPayPalPosSettingApiService","SwagPayPalPosWebhookRegisterService","salesChannelService","repositoryFactory"],mixins:["swag-paypal-pos-catch-error","notification"],data:function(){return{showModal:!0,isLoading:!1,salesChannel:{},cloneSalesChannelId:null,stepperPages:["connection","connectionSuccess","connectionDisconnect","customization","productSelection","syncLibrary","syncPrices","finish"],stepper:{},currentStep:{}}},metaInfo:function(){return{title:this.wizardTitle}},computed:{displayStepperPages:function(){return this.stepperPages.filter((function(e){return"connectionDisconnect"!==e}))},stepInitialItemVariants:function(){for(var e=this.stepperPages.length,t=this.currentStep.navigationIndex,n=[],a=1;a<=e;a+=1)a<t?n.push("success"):a===t?n.push("info"):n.push("disabled");return n},paypalPosSalesChannelRepository:function(){return this.repositoryFactory.create("swag_paypal_pos_sales_channel")},salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},salesChannelCriteria:function(){return new fa(1,500).addAssociation(s).addAssociation("countries").addAssociation("currencies").addAssociation("domains").addAssociation("languages")},wizardTitle:function(){return[this.$tc("global.sw-admin-menu.textShopwareAdmin"),this.$tc("swag-paypal-pos.general.moduleTitle"),this.title].reverse().join(" | ")}},watch:{$route:function(e){var t=e.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[t]}},mounted:function(){this.mountedComponent()},methods:{createdComponent:function(){this.generateStepper(),this.$route.params.id?this.loadSalesChannel():this.createNewSalesChannel()},mountedComponent:function(){var e=this.$route.name.replace("swag.paypal.pos.wizard.","");this.currentStep=this.stepper[e]},generateStepper:function(){var e=this,t=1;this.stepper=this.stepperPages.reduce((function(n,a){return"connectionDisconnect"===a&&(t-=1),n[a]={name:"swag.paypal.pos.wizard.".concat(a),variant:"large",navigationIndex:t},1===t&&(e.currentStep=n[a]),t+=1,n}),{})},onCloseModal:function(){this.salesChannel._isNew||!this.$route.params.id&&!this.salesChannel.id?this.routeToDashboard():this.routeToDetailOverview()},onFinishWizard:function(){this.routeToDetailOverview(!0)},routeToDashboard:function(){var e=this;this.showModal=!1,this.$nextTick((function(){e.$router.push({name:"sw.dashboard.index"})}))},routeToDetailOverview:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.showModal=!1,this.save(t).then((function(){t&&e.SwagPayPalPosApiService.startCompleteSync(e.salesChannel.id),e.$router.push({name:"swag.paypal.pos.detail.overview",params:{id:e.salesChannel.id}})}))},save:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t&&(this.salesChannel.active=!0),this.salesChannelRepository.save(this.salesChannel,ya.api).then(ua(pa().mark((function t(){return pa().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.isLoading=!1,e.isSaveSuccessful=!0,e.isNewEntity=!1,e.$root.$emit("sales-channel-change"),t.next=6,e.loadSalesChannel();case 6:e.cloneProductVisibility(),e.registerWebhook(n);case 8:case"end":return t.stop()}}),t)})))).catch((function(){e.isLoading=!1,e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageSaveError",0,{name:e.salesChannel.name||e.placeholder(e.salesChannel,"name")})})}))},registerWebhook:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.SwagPayPalPosWebhookRegisterService.registerWebhook(this.salesChannel.id);return e?t:t.catch(this.catchError.bind(this,"swag-paypal-pos.messageWebhookRegisterError"))},cloneProductVisibility:function(){var e=this;null!==this.cloneSalesChannelId&&this.SwagPayPalPosSettingApiService.cloneProductVisibility(this.cloneSalesChannelId,this.salesChannel.id).catch((function(t){t.response.data&&t.response.data.errors&&e.createNotificationError({message:e.$tc("swag-paypal-pos.messageCloneError")})}))},createNewSalesChannel:function(){var e=this;ya.api.languageId!==ya.api.systemLanguageId&&(ya.api.languageId=ya.api.systemLanguageId),this.previousApiKey=null,this.salesChannel=this.salesChannelRepository.create(ya.api),this.salesChannel.typeId=o,this.salesChannel.name=this.$tc("swag-paypal-pos.wizard.salesChannelPrototypeName"),this.salesChannel.active=!1,this.salesChannel.extensions.paypalPosSalesChannel=this.paypalPosSalesChannelRepository.create(ya.api),Object.assign(this.salesChannel.extensions.paypalPosSalesChannel,{mediaDomain:"",apiKey:"",imageDomain:"",productStreamId:null,syncPrices:!0,replace:0}),this.salesChannelService.generateKey().then((function(t){e.salesChannel.accessKey=t.accessKey})).catch((function(){e.createNotificationError({message:e.$tc("sw-sales-channel.detail.messageAPIError")})}))},loadSalesChannel:function(){var e=this,t=this.$route.params.id||this.salesChannel.id;return t?(this.isLoading=!0,this.salesChannelRepository.get(t,Shopware.Context.api,this.salesChannelCriteria).then((function(t){e.salesChannel=t,e.previousApiKey=t.extensions.paypalPosSalesChannel.apiKey,e.isLoading=!1}))):new Promise((function(e){e()}))},updateCloneSalesChannel:function(e){this.cloneSalesChannelId=e},toggleLoading:function(e){this.isLoading=e}}});n("1DpW");Shopware.Component.register("swag-paypal-pos-wizard-connection",{template:'{% block swag_paypal_pos_wizard_connection %}\n    <div class="swag-paypal-pos-wizard-connection">\n\n        {% block swag_paypal_pos_wizard_connection_headline %}\n            <div class="swag-paypal-pos-wizard-connection__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerConnect\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey %}\n            <sw-password-field\n                    v-model="salesChannel.extensions.paypalPosSalesChannel.apiKey"\n                    class="swag-paypal-pos-wizard-connection__apikey-field"\n                    required\n                    :label="$tc(\'swag-paypal-pos.authentication.labelApiKey\')"\n                    :placeholder="$tc(\'swag-paypal-pos.authentication.placeholderApiKey\')"\n                    @input="forceUpdate">\n                <template #suffix>\n\n                    {% block swag_paypal_pos_wizard_connection_apikey_suffix %}\n                        <sw-icon name="regular-low-vision"\n                                 class="swag-paypal-pos-wizard-connection__apikey-suffix"\n                                 size="22px">\n                        </sw-icon>\n                    {% endblock %}\n                </template>\n            </sw-password-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_apikey_description %}\n            <div class="swag-paypal-pos-wizard-connection__apikey-description">\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_text %}\n                    <div class="swag-paypal-pos-wizard-connection__apikey-description-text">\n                        {{ $tc(\'swag-paypal-pos.authentication.apiKeyDescription\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_apikey_description_link %}\n                    <sw-external-link :href="apiKeyUrl"\n                                      class="swag-paypal-pos-wizard-connection__apikey-description-link">\n\n                        {% block swag_paypal_pos_wizard_connection_apikey_description_link_text %}\n                            {{ $tc(\'swag-paypal-pos.authentication.buttonGenerateKey\') }}\n                        {% endblock %}\n                    </sw-external-link>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_header_new_customer %}\n            <div class="swag-paypal-pos-wizard-connection__new-customer-headline">\n                {{ $tc(\'swag-paypal-pos.wizard.connection.headerNewCustomer\') }}\n            </div>\n        {% endblock %}\n\n\n        {% block swag_paypal_pos_wizard_connection_new_customer %}\n            <sw-card position-identifier="swag-paypal-pos-wizard-connection-new-customer"\n                     :isLoading="isConnecting">\n                <sw-container\n                        class="swag-paypal-pos-wizard-connection__new-customer-container"\n                        columns="1fr 1fr"\n                        align="center"\n                        gap="300px">\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_image %}\n                        <img class="swag-paypal-pos-wizard-connection__pos-logo"\n                             :src="\'swagpaypal/static/img/paypal-pos-logo-full.png\' | asset"\n                             alt="Zettle logo">\n                    {% endblock %}\n\n                    {% block swag_paypal_pos_wizard_connection_new_customer_button %}\n                        <sw-button class="swag-paypal-pos-wizard-connection__pos-link"\n                                   variant="ghost"\n                                   size="small"\n                                   :link="$tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccountLink\')">\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_text %}\n                                <span class="swag-paypal-pos-wizard-connection__pos-link-text">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connection.buttonCreateAccount\') }}\n                                </span>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_new_customer_button_icon %}\n                                <sw-icon name="regular-external-link-s"\n                                         class="swag-paypal-pos-wizard-connection__pos-link-icon"\n                                         size="10px">\n                                </sw-icon>\n                            {% endblock %}\n                        </sw-button>\n                    {% endblock %}\n                </sw-container>\n            </sw-card>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService"],mixins:["notification","swag-paypal-pos-catch-error"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},isLoading:{type:Boolean,required:!1,default:!1}},data:function(){return{isConnecting:!1,apiKeyUrl:this.SwagPayPalPosSettingApiService.generateApiUrl()}},watch:{"salesChannel.extensions.paypalPosSalesChannel.apiKey":function(e){e&&this.updateButtons()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connection.modalTitle"))},updateButtons:function(){var e=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToConnectionSuccess,disabled:this.isLoading||!this.salesChannel.extensions.paypalPosSalesChannel.apiKey}];this.$emit("buttons-update",e)},routeToConnectionSuccess:function(){var e=this;this.toggleLoadingState(!0);var t=this.salesChannel.extensions.paypalPosSalesChannel.apiKey;this.SwagPayPalPosSettingApiService.validateApiCredentials(t).then((function(t){!0===t.credentialsValid&&(e.toggleLoadingState(!1),e.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess"}))})).catch(this.catchError.bind(this,"swag-paypal-pos.authentication.messageTestError")).finally((function(){e.toggleLoadingState(!1)}))},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});n("tOAw");var _a=Shopware,ma=_a.Component,wa=_a.Context;ma.register("swag-paypal-pos-wizard-connection-success",{template:'{% block swag_paypal_pos_wizard_connection_success %}\n    <div class="swag-paypal-pos-wizard-connection-success">\n\n        {% block swag_paypal_pos_wizard_connection_success_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-success__content">\n\n                {% block swag_paypal_pos_wizard_connection_success_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-success__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-success__icon"\n                                 name="regular-thumbs-up"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-success__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_info %}\n                    <div class="swag-paypal-pos-wizard-connection-success__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_success_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-success__user"\n                             position-identifier="swag-paypal-pos-wizard-connection-success-user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-success__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_avatar %}\n                                <sw-avatar\n                                        class="swag-paypal-pos-wizard-connection-success__user-avatar"\n                                        size="40px"\n                                        :firstName="posUser.firstName"\n                                        :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-success__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_success_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-success__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_success_user_disconnect_button %}\n                                <sw-button class="swag-paypal-pos-wizard-connection-success__user-disconnect"\n                                           variant="ghost"\n                                           size="small"\n                                           @click="onDisconnect">\n                                    {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disconnectButton\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-connection-success__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.connectionSuccess.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:["placeholder"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{posData:null,isFetchingInformation:!0}},computed:{posUser:function(){if(this.isFetchingInformation){var e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),t=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName"),n=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail");return{firstName:e,lastName:t,fullName:"".concat(e," ").concat(t),mail:n}}var a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;return this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then((function(t){return e.posData=t,null===e.salesChannel.languageId&&(e.salesChannel.languageId=wa.api.systemLanguageId,e.salesChannel.languages.push({id:wa.api.systemLanguageId})),e.saveSalesChannel(!1,!0)})).finally((function(){e.isFetchingInformation=!1,e.updateButtons()}))},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionSuccess.modalTitle"))},updateButtons:function(){var e=[{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToCustomization,disabled:this.isFetchingInformation}];this.$emit("buttons-update",e)},routeToCustomization:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},onDisconnect:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionDisconnect",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()}}});n("8O+Y");var ba=Shopware,va=ba.Component,Sa=ba.Context;va.register("swag-paypal-pos-wizard-connection-disconnect",{template:'{% block swag_paypal_pos_wizard_connection_disconnect %}\n    <div class="swag-paypal-pos-wizard-connection-disconnect">\n\n        {% block swag_paypal_pos_wizard_connection_disconnect_headline_content %}\n            <div class="swag-paypal-pos-wizard-connection-disconnect__content">\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_icon %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-connection-disconnect__icon"\n                                 name="regular-exclamation-triangle"\n                                 size="80px"\n                                 color="#de294c">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_headline %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__headline">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_info %}\n                    <div class="swag-paypal-pos-wizard-connection-disconnect__info">\n                        {{ $tc(\'swag-paypal-pos.wizard.connectionDisconnect.info\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_connection_disconnect_user %}\n                    <sw-card class="swag-paypal-pos-wizard-connection-disconnect__user"\n                             position-identifier="swag-paypal-pos-wizard-connection-disconnect-user"\n                             :isLoading="isFetchingInformation">\n                        <sw-container class="swag-paypal-pos-wizard-connection-disconnect__user-container"\n                                      columns="30px auto 150px"\n                                      align="center"\n                                      gap="30px">\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_avatar %}\n                                <sw-avatar\n                                    class="swag-paypal-pos-wizard-connection-disconnect__user-avatar"\n                                    size="40px"\n                                    :firstName="posUser.firstName"\n                                    :lastName="posUser.lastName">\n                                </sw-avatar>\n                            {% endblock %}\n\n                            {% block swag_paypal_pos_wizard_connection_disconnect_user_information %}\n                                <div class="swag-paypal-pos-wizard-connection-disconnect__user-info">\n\n                                    {% block swag_paypal_pos_wizard_connection_disconnect_user_information_real %}\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-name">\n                                            {{ posUser.fullName }}\n                                        </div>\n                                        <div class="swag-paypal-pos-wizard-connection-disconnect__user-info-mail">\n                                            {{ posUser.mail }}\n                                        </div>\n                                    {% endblock %}\n                                </div>\n                            {% endblock %}\n                        </sw-container>\n                    </sw-card>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["repositoryFactory","SwagPayPalPosSettingApiService"],mixin:["placeholder","notification"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{posData:null,isFetchingInformation:!0}},computed:{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")},posUser:function(){if(this.isFetchingInformation){var e=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeFirstName"),t=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeLastName"),n=this.$tc("swag-paypal-pos.wizard.connectionSuccess.fakeMail");return{firstName:e,lastName:t,fullName:"".concat(e," ").concat(t),mail:n}}var a=this.posData.merchantInformation.name.split(" ");return{firstName:a[0],lastName:a[a.length-1],fullName:this.posData.merchantInformation.name,mail:this.posData.merchantInformation.contactEmail}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isFetchingInformation=!0,this.updateButtons(),this.setTitle(),this.SwagPayPalPosSettingApiService.fetchInformation(this.salesChannel,!0).then((function(t){e.posData=t})).finally((function(){e.isFetchingInformation=!1,e.updateButtons()}))},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.connectionDisconnect.modalTitle"))},updateButtons:function(){var e=[{key:"cancel",label:this.$tc("global.default.cancel"),position:"right",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectButton"),position:"right",variant:"danger",action:this.onDisconnect,disabled:this.isFetchingInformation}];this.$emit("buttons-update",e)},routeBackToConnectionSuccess:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},onDisconnect:function(){var e=this;this.salesChannelRepository.delete(this.salesChannel.id,Sa.api).then((function(){e.$root.$emit("sales-channel-change"),e.$emit("recreate-sales-channel"),e.forceUpdate(),e.$router.push({name:"swag.paypal.pos.wizard.connection"})})).catch((function(){e.createNotificationError({message:e.$tc("swag-paypal-pos.wizard.connectionDisconnect.disconnectErrorMessage")})}))},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()}}});n("WD85");Shopware.Component.register("swag-paypal-pos-wizard-customization",{template:'{% block swag_paypal_pos_wizard_customization %}\n    <div v-if="!isLoading"\n         class="swag-paypal-pos-wizard-customization">\n\n        {% block swag_paypal_pos_wizard_customization_name %}\n            <sw-text-field v-model="salesChannel.name"\n                           class="swag-paypal-pos-wizard-customization__name-field"\n                           validation="required"\n                           required\n                           :label="$tc(\'swag-paypal-pos.wizard.customization.salesChannelLabel\')"\n                           :placeholder="$tc(\'sw-sales-channel.detail.placeholderName\')"\n                           @input="forceUpdate">\n            </sw-text-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_language %}\n            <sw-entity-single-select v-model="salesChannel.languageId"\n                                     entity="language"\n                                     required\n                                     :label="$tc(\'global.entities.language\')"\n                                     @change="changeLanguage">\n            </sw-entity-single-select>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_customization_media_domain %}\n            <sw-url-field v-model="salesChannel.extensions.paypalPosSalesChannel.mediaDomain"\n                          class="swag-paypal-pos-wizard-customization__domain-field"\n                          required\n                          :label="$tc(\'swag-paypal-pos.wizard.customization.labelDomain\')"\n                          :placeholder="$tc(\'swag-paypal-pos.wizard.customization.placeholderDomain\')"\n                          @input="forceUpdate">\n            </sw-url-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_connection_success_disclaimer %}\n            <div class="swag-paypal-pos-wizard-customization__subtitle">\n                {{ $tc(\'swag-paypal-pos.wizard.customization.subtitle\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0},isLoading:{type:Boolean,required:!1,default:!1}},watch:{isLoading:function(e){e||this.updateButtons()}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle(),this.changeLanguage()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.customization.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToConnectionSuccess,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToProductSelection,disabled:this.nextButtonDisabled()}];this.$emit("buttons-update",e)},nextButtonDisabled:function(){return this.isLoading||!this.salesChannel.name||!this.salesChannel.languageId||!this.salesChannel.extensions.paypalPosSalesChannel.mediaDomain},routeBackToConnectionSuccess:function(){this.$router.push({name:"swag.paypal.pos.wizard.connectionSuccess",params:{id:this.salesChannel.id}})},routeToProductSelection:function(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},forceUpdate:function(){var e=this;this.$forceUpdate(),this.$nextTick().then((function(){e.updateButtons()}))},changeLanguage:function(){this.salesChannel.languages.length=0,this.salesChannel.languages.push({id:this.salesChannel.languageId}),this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});var ka=Shopware.Component,Pa=Shopware.Data.Criteria;ka.register("swag-paypal-pos-wizard-product-selection",{template:'{% block swag_paypal_pos_wizard_product_selection %}\n    <div class="swag-paypal-pos-wizard-product-selection">\n\n        {% block swag_paypal_pos_wizard_product_selection_info %}\n            <p class="swag-paypal-pos-wizard-product-selection__info">\n                {{ $tc(\'swag-paypal-pos.wizard.productSelection.info\') }}\n            </p>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_toggle %}\n            <sw-switch-field v-model="hasClone"\n                             class="swag-paypal-pos-wizard-product-selection__clone-switch"\n                             bordered\n                             :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelToggle\')"\n                             @change="updateClone">\n            </sw-switch-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_product_selection_sales_channel_select %}\n            <sw-entity-single-select v-model="localCloneSalesChannelId"\n                                     class="swag-paypal-pos-wizard-product-selection__saleschannel-select"\n                                     entity="sales_channel"\n                                     :criteria="salesChannelCriteria"\n                                     :disabled="!hasClone"\n                                     :label="$tc(\'swag-paypal-pos.wizard.productSelection.labelSelect\')"\n                                     @input="forceUpdate">\n            </sw-entity-single-select>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{manualSalesChannel:!1,hasClone:!1}},computed:{localCloneSalesChannelId:{get:function(){return this.updateButtons(),this.cloneSalesChannelId},set:function(e){this.$emit("update-clone-sales-channel",e)}},salesChannelCriteria:function(){var e=new Pa(1,500);return e.addFilter(Pa.not("and",[Pa.equals("id",this.salesChannel.id)])),e}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.productSelection.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToCustomization,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncLibrary,disabled:!1}];this.$emit("buttons-update",e)},routeBackToCustomization:function(){this.$router.push({name:"swag.paypal.pos.wizard.customization",params:{id:this.salesChannel.id}})},routeToSyncLibrary:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},updateClone:function(){this.$emit("update-clone-sales-channel",null),this.forceUpdate()},forceUpdate:function(){this.$forceUpdate(),this.updateButtons()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});n("ot/U");Shopware.Component.register("swag-paypal-pos-wizard-sync-prices",{template:'{% block swag_paypal_pos_wizard_sync_prices %}\n    <div class="swag-paypal-pos-wizard-sync-prices">\n\n        {% block swag_paypal_pos_wizard_sync_prices_header %}\n            <div class="swag-paypal-pos-wizard-sync-prices__headline">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.header\') }}\n            </div>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_description_input %}\n            <swag-paypal-pos-boolean-radio\n                v-model="salesChannel.extensions.paypalPosSalesChannel.syncPrices"\n                :label="$tc(\'swag-paypal-pos.wizard.syncPrices.description\')"\n                :optionTrue="optionTrue"\n                :optionFalse="optionFalse">\n            </swag-paypal-pos-boolean-radio>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_prices_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-prices__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncPrices.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},computed:{optionTrue:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionTrueDescription")}},optionFalse:function(){return{name:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseLabel"),description:this.$tc("swag-paypal-pos.wizard.syncPrices.optionFalseDescription")}}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncPrices.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncLibrary,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToFinish,disabled:!1}];this.$emit("buttons-update",e)},routeBackToSyncLibrary:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncLibrary",params:{id:this.salesChannel.id}})},routeToFinish:function(){this.$router.push({name:"swag.paypal.pos.wizard.finish",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)}}});n("+Z+Y");Shopware.Component.register("swag-paypal-pos-wizard-sync-library",{template:'{% block swag_paypal_pos_wizard_sync_library %}\n    <div class="swag-paypal-pos-wizard-sync-library">\n\n        {% block swag_paypal_pos_wizard_sync_library_header %}\n            <i18n class="swag-paypal-pos-wizard-sync-library__headline"\n                  path="swag-paypal-pos.wizard.syncLibrary.header"\n                  tag="div">\n                <template #shopwareProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.shopwareProducts\', shopwareProductsCount) }}</span>\n                </template>\n                <template #posProducts>\n                    <span>{{ $tc(\'swag-paypal-pos.wizard.syncLibrary.posProducts\', posProductsCount) }}</span>\n                </template>\n            </i18n>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_description_input %}\n            <sw-radio-field\n                v-model="salesChannel.extensions.paypalPosSalesChannel.replace"\n                class="swag-paypal-pos-boolean-radio"\n                :label="$tc(\'swag-paypal-pos.wizard.syncLibrary.description\')"\n                :options="options">\n            </sw-radio-field>\n        {% endblock %}\n\n        {% block swag_paypal_pos_wizard_sync_library_disclaimer %}\n            <div class="swag-paypal-pos-wizard-sync-library__disclaimer">\n                {{ $tc(\'swag-paypal-pos.wizard.syncLibrary.disclaimer\') }}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosSettingApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null},saveSalesChannel:{type:Function,required:!0}},data:function(){return{shopwareProductsCount:0,posProductsCount:0}},computed:{options:function(){return[{value:2,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplacePermanentlyDescription")},{value:1,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceOneTimeDescription")},{value:0,name:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotLabel"),description:this.$tc("swag-paypal-pos.wizard.syncLibrary.optionReplaceNotDescription")}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle(),this.fetchProductCounts()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.syncLibrary.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToProductSelection,disabled:!1},{key:"next",label:this.$tc("sw-first-run-wizard.general.buttonNext"),position:"right",variant:"primary",action:this.routeToSyncPrices,disabled:!1}];this.$emit("buttons-update",e)},routeBackToProductSelection:function(){this.$router.push({name:"swag.paypal.pos.wizard.productSelection",params:{id:this.salesChannel.id}})},routeToSyncPrices:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},forceUpdate:function(){this.$forceUpdate()},toggleLoadingState:function(e){this.isConnecting=e,this.$emit("toggle-loading",e)},fetchProductCounts:function(){var e=this;this.toggleLoadingState(!0),this.SwagPayPalPosSettingApiService.getProductCount(this.salesChannel.id,this.cloneSalesChannelId).then((function(t){e.shopwareProductsCount=t.localCount,e.posProductsCount=t.remoteCount})).finally((function(){e.toggleLoadingState(!1)}))}}});n("QeKy");Shopware.Component.register("swag-paypal-pos-wizard-finish",{template:'{% block swag_paypal_pos_wizard_finish %}\n    <div class="swag-paypal-pos-wizard-finish">\n\n        {% block swag_paypal_pos_wizard_finish_content %}\n            <div class="swag-paypal-pos-wizard-finish__content">\n\n                {% block swag_paypal_pos_wizard_finish_content_icon %}\n                    <div class="swag-paypal-pos-wizard-finish__icon-wrapper">\n                        <sw-icon class="swag-paypal-pos-wizard-finish__icon"\n                                 name="regular-checkmark"\n                                 size="80px"\n                                 color="#37D046">\n                        </sw-icon>\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_header %}\n                    <div class="swag-paypal-pos-wizard-finish__content-header">\n                        {{ $tc(\'swag-paypal-pos.wizard.finish.header\') }}\n                    </div>\n                {% endblock %}\n\n                {% block swag_paypal_pos_wizard_finish_content_description %}\n                    <div class="swag-paypal-pos-wizard-finish__content-description">\n                        <p class="swag-paypal-pos-wizard-finish__first-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.firstParagraph\') }}\n                        </p>\n\n                        <p class="swag-paypal-pos-wizard-finish__second-paragraph">\n                            {{ $tc(\'swag-paypal-pos.wizard.finish.secondParagraph\') }}\n                        </p>\n                    </div>\n                {% endblock %}\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n',inject:["SwagPayPalPosApiService"],props:{salesChannel:{type:Object,required:!0},cloneSalesChannelId:{type:String,required:!1,default:null}},created:function(){this.createdComponent()},methods:{createdComponent:function(){this.updateButtons(),this.setTitle()},setTitle:function(){this.$emit("frw-set-title",this.$tc("swag-paypal-pos.wizard.finish.modalTitle"))},updateButtons:function(){var e=[{key:"back",label:this.$tc("sw-first-run-wizard.general.buttonBack"),position:"left",action:this.routeBackToSyncPrices,disabled:!1},{key:"finish",label:this.$tc("sw-first-run-wizard.general.buttonFinish"),position:"right",variant:"primary",action:this.onFinish,disabled:!1}];this.$emit("buttons-update",e)},routeBackToSyncPrices:function(){this.$router.push({name:"swag.paypal.pos.wizard.syncPrices",params:{id:this.salesChannel.id}})},onFinish:function(){this.$emit("frw-finish")}}}),Shopware.Module.register("swag-paypal-pos",{type:"plugin",name:"SwagPayPalPos",title:"swag-paypal.general.mainMenuItemGeneral",description:"swag-paypal.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#9AA8B5",icon:"regular-sync",routes:{detail:{component:"swag-paypal-pos",path:":id/detail",redirect:{name:"swag.paypal.pos.detail.overview"},meta:{privilege:"sales_channel.viewer"},children:{overview:{component:"swag-paypal-pos-detail-overview",path:"overview",meta:{privilege:"sales_channel.viewer"}},syncedProducts:{component:"swag-paypal-pos-detail-synced-products",path:"synced-products",meta:{privilege:"sales_channel.viewer"}},settings:{component:"swag-paypal-pos-detail-settings",path:"settings",meta:{privilege:"sales_channel.viewer"}},runs:{component:"swag-paypal-pos-detail-runs",path:"runs",meta:{privilege:"sales_channel.viewer"}}}},wizard:{component:"swag-paypal-pos-wizard",path:":id?/wizard",redirect:{name:"swag.paypal.pos.wizard.connection"},meta:{privilege:"sales_channel.creator"},children:{connection:{component:"swag-paypal-pos-wizard-connection",path:"connection",meta:{privilege:"sales_channel.creator"}},connectionSuccess:{component:"swag-paypal-pos-wizard-connection-success",path:"connection-success",meta:{privilege:"sales_channel.creator"}},connectionDisconnect:{component:"swag-paypal-pos-wizard-connection-disconnect",path:"connection-disconnect",meta:{privilege:"sales_channel.creator"}},customization:{component:"swag-paypal-pos-wizard-customization",path:"customization",meta:{privilege:"sales_channel.creator"}},productSelection:{component:"swag-paypal-pos-wizard-product-selection",path:"product-selection",meta:{privilege:"sales_channel.creator"}},syncPrices:{component:"swag-paypal-pos-wizard-sync-prices",path:"sync-prices",meta:{privilege:"sales_channel.creator"}},syncLibrary:{component:"swag-paypal-pos-wizard-sync-library",path:"sync-library",meta:{privilege:"sales_channel.creator"}},finish:{component:"swag-paypal-pos-wizard-finish",path:"finish",meta:{privilege:"sales_channel.creator"}}}}}});n("IK4k"),n("LqEn");var Ca=Shopware,xa=Ca.Context,Ia=Ca.Component,$a=Ca.Filter,La=Ca.Utils,Ta=Shopware.Data.Criteria,Oa=Shopware.Utils.string.capitalizeString;Ia.register("swag-paypal-disputes-detail",{template:'{% block swag_paypal_disputes_detail %}\n    <sw-page class="swag-paypal-disputes-detail">\n\n        {% block swag_paypal_disputes_detail_smart_bar_header %}\n            <template #smart-bar-header>\n\n                {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n                    <h2>\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title %}\n                            {{ $tc(\'swag-paypal-disputes.detail.title\') }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_dispute_id %}\n                            {{ disputeId }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_detail_smart_bar_header_title_addition %}\n                            {{ $tc(\'swag-paypal-disputes.detail.titleAddition\') }}\n                        {% endblock %}\n\n                    </h2>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_detail_content %}\n            <template #content>\n                <sw-card-view>\n\n                    {% block swag_paypal_disputes_detail_content_details %}\n                        <sw-card position-identifier="swag-paypal-disputes-detail-content-details"\n                                 :isLoading="isLoading"\n                                 :title="$tc(\'swag-paypal-disputes.detail.mainFieldsCardTitle\')">\n\n                            {% block swag_paypal_disputes_detail_content_details_fields %}\n                                <template v-if="dispute">\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_external_link %}\n                                        <div class="swag-paypal-disputes-detail__links">\n                                            <sw-external-link :href="externalDetailPageLink">\n                                                {{ $tc(\'swag-paypal-disputes.detail.externalLinkText\') }}\n                                            </sw-external-link>\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_order_module_link %}\n                                        <div class="swag-paypal-disputes-detail__links">\n                                            <router-link v-if="orderModuleLink"\n                                                         :to="orderModuleLink"\n                                                         target="_blank"\n                                                         rel="noopener">\n                                                {{ $tc(\'swag-paypal-disputes.detail.orderModuleLinkText\') }}\n                                            </router-link>\n                                        </div>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_separator %}\n                                        <hr class="swag-paypal-disputes-detail__separator"/>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_id %}\n                                        <sw-text-field :value="dispute.dispute_id"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_id\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_update_time %}\n                                        <sw-text-field :value="formatDate(dispute.update_time)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.update_time\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_due_date %}\n                                        <sw-text-field v-if="dispute.seller_response_due_date || dispute.buyer_response_due_date"\n                                                       :value="getDueDate(dispute.seller_response_due_date, dispute.buyer_response_due_date)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.response_due_date.label\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_status %}\n                                        <sw-text-field :value="`${formatTechnicalText(dispute.status)} (${formatTechnicalText(dispute.reason)})`"\n                                                       :label="$tc(\'swag-paypal-disputes.common.status\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_life_cycle_stage %}\n                                        <sw-text-field :value="formatTechnicalText(dispute.dispute_life_cycle_stage)"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_life_cycle_stage\')"\n                                                       :class="getInquiryClass(dispute.dispute_life_cycle_stage)"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_details_fields_dispute_amount %}\n                                        <sw-text-field :value="`${dispute.dispute_amount.value} ${dispute.dispute_amount.currency_code}`"\n                                                       :label="$tc(\'swag-paypal-disputes.common.dispute_amount\')"\n                                                       disabled>\n                                        </sw-text-field>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-card>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_detail_content_raw_data %}\n                        <sw-card position-identifier="swag-paypal-disputes-detail-content-raw-data"\n                                 :isLoading="isLoading"\n                                 :title="$tc(\'swag-paypal-disputes.detail.rawDataCardTitle\')">\n\n                            {% block swag_paypal_disputes_detail_content_raw_data_content %}\n                                <template v-if="dispute">\n\n                                    {% block swag_paypal_disputes_detail_content_raw_data_text %}\n                                        <sw-textarea-field :value="JSON.stringify(dispute, null, 2)"\n                                                           disabled>\n                                        </sw-textarea-field>\n                                    {% endblock %}\n\n                                    {% block swag_paypal_disputes_detail_content_raw_data_copy_button %}\n                                        <sw-button @click="copyToClipboard">\n                                            {{ $tc(\'swag-paypal-disputes.detail.copyButtonLabel\') }}\n                                        </sw-button>\n                                    {% endblock %}\n\n                                </template>\n                            {% endblock %}\n\n                        </sw-card>\n                    {% endblock %}\n\n                </sw-card-view>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["SwagPayPalDisputeApiService","systemConfigApiService","repositoryFactory"],mixins:["notification"],props:{disputeId:{type:String,required:!0},salesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,dispute:null,resolutionCenterUrl:"https://www.paypal.com/resolutioncenter",orderModuleLink:null}},computed:{orderTransactionRepository:function(){return this.repositoryFactory.create("order_transaction")},orderTransactionCriteria:function(){var e,t;if(!this.dispute.disputed_transactions)return null;var n=this.dispute.disputed_transactions[0];if(null==n||!n.custom)return null;var a=null!==(e=null===(t=JSON.parse(n.custom))||void 0===t?void 0:t.orderTransactionId)&&void 0!==e?e:n.custom;if("string"!=typeof a||32!==a.length)return null;var i=new Ta(1,1);return i.setIds([a]),i},externalDetailPageLink:function(){return"".concat(this.resolutionCenterUrl,"/").concat(this.dispute.dispute_id)},dateFilter:function(){return $a.getByName("date")}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings").then((function(t){t["SwagPayPal.settings.sandbox"]&&(e.resolutionCenterUrl="https://www.sandbox.paypal.com/resolutioncenter"),e.getDetail()}))},getDetail:function(){var e=this;this.SwagPayPalDisputeApiService.detail(this.disputeId,this.salesChannelId).then((function(t){e.dispute=t,e.setLinkToOrderModule(),e.isLoading=!1})).catch(this.handleError)},handleError:function(e){var t=e.response.data.errors[0].detail;this.createNotificationError({message:"".concat(this.$tc("swag-paypal-disputes.list.errorTitle"),": ").concat(t),autoClose:!1}),this.isLoading=!1},getExternalDetailPageLink:function(){return"".concat(this.resolutionCenterUrl,"/").concat(this.dispute.dispute_id)},setLinkToOrderModule:function(){var e=this;this.orderTransactionCriteria||(this.orderModuleLink=null),this.orderTransactionRepository.search(this.orderTransactionCriteria,xa.api,this.orderTransactionCriteria).then((function(t){var n=t[0];null!==n&&(e.orderModuleLink={name:"sw.order.detail.general",params:{id:n.orderId}})}))},formatTechnicalText:function(e){return Oa(e).replace(/_/g," ")},getInquiryClass:function(e){return"INQUIRY"===e?"swag-paypal-disputes-detail__stage-inquiry":"swag-paypal-disputes-detail__stage-other"},getDueDate:function(e,t){return null!==e?"".concat(this.$tc("swag-paypal-disputes.common.response_due_date.seller"),": ").concat(this.formatDate(e)):null!==t?"".concat(this.$tc("swag-paypal-disputes.common.response_due_date.buyer"),": ").concat(this.formatDate(t)):""},copyToClipboard:function(){if(null!==this.dispute)try{La.dom.copyToClipboard(JSON.stringify(this.dispute)),this.createNotificationInfo({message:this.$tc("global.sw-field.notification.notificationCopySuccessMessage")})}catch(e){this.createNotificationError({message:this.$tc("global.sw-field.notification.notificationCopyFailureMessage")})}},formatDate:function(e){return this.dateFilter(e,{hour:"2-digit",minute:"2-digit",second:"2-digit"})}}});var Ea="REQUIRED_ACTION",Fa="REQUIRED_OTHER_PARTY_ACTION",Aa="UNDER_PAYPAL_REVIEW",Da="RESOLVED",ja="OPEN_INQUIRIES",za="APPEALABLE",Ra=(n("boBf"),Shopware),Ba=Ra.Component,Ma=Ra.Filter,Na=Shopware.Utils.debounce,Va=Shopware.Utils.string.capitalizeString;Ba.register("swag-paypal-disputes-list",{template:'{% block swag_paypal_disputes_list %}\n    <sw-page class="swag-paypal-disputes-list">\n\n        {% block swag_paypal_disputes_list_smart_bar_header %}\n            <template #smart-bar-header>\n\n                {% block swag_paypal_disputes_list_smart_bar_header_title %}\n                    <h2>\n\n                        {% block swag_paypal_disputes_list_smart_bar_header_title_text %}\n                            {{ $tc(\'swag-paypal-disputes.list.title\') }}\n                        {% endblock %}\n\n                        {% block swag_paypal_disputes_list_smart_bar_header_amount %}\n                            <template v-if="!isLoading">\n                                ({{ total }})\n                            </template>\n                        {% endblock %}\n\n                    </h2>\n                {% endblock %}\n\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_list_content %}\n            <template #content>\n                <sw-loader v-if="isLoading"></sw-loader>\n                <template v-else>\n\n                    {% block swag_paypal_disputes_list_content_grid %}\n                        <sw-data-grid v-if="disputes.length > 0"\n                                      :dataSource="visibleDisputes"\n                                      :columns="disputesColumns"\n                                      :showActions="false"\n                                      :showSelection="false">\n\n                            {% block swag_paypal_disputes_list_content_grid_column_update_time %}\n                                <template #column-update_time="{ item }">\n                                    <div>\n                                        <div>{{ formatUpdateDate(item.update_time) }}</div>\n                                        <div>{{ formatUpdateTime(item.update_time) }}</div>\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n\n                            {% block swag_paypal_disputes_list_content_grid_column_seller_response_due_date %}\n                                <template #column-response_due_date="{ item }">\n                                    <template v-if="item.seller_response_due_date">\n                                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.seller\') }}</strong>:\n                                        {{ formatDate(item.seller_response_due_date) }}\n                                    </template>\n                                    <template v-else-if="item.buyer_response_due_date">\n                                        <strong>{{ $tc(\'swag-paypal-disputes.common.response_due_date.buyer\') }}</strong>:\n                                        {{ formatDate(item.buyer_response_due_date) }}\n                                    </template>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_status %}\n                                <template #column-status="{ item }">\n                                    <div>\n                                        <div>\n                                            {{ formatTechnicalText(item.dispute_state) }}\n                                            <template v-if="item.dispute_state !== item.status"> ({{ formatTechnicalText(item.status) }})</template>\n                                        </div>\n                                        <div class="swag-paypal-disputes-list__reason">\n                                            {{ formatTechnicalText(item.reason) }}\n                                        </div>\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_id %}\n                                <template #column-dispute_id="{ item }">\n                                    <router-link :to="{ name: \'swag.paypal.disputes.detail\', params: { disputeId: item.dispute_id , salesChannelId} }">\n                                        {{ item.dispute_id }}\n                                    </router-link>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_life_cycle_stage %}\n                                <template #column-dispute_life_cycle_stage="{ item }">\n                                    <div v-if="item.dispute_life_cycle_stage === \'INQUIRY\'"\n                                          class="swag-paypal-disputes-list__stage-inquiry">\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                                    </div>\n                                    <div v-else\n                                          class="swag-paypal-disputes-list__stage-other">\n                                        {{ formatTechnicalText(item.dispute_life_cycle_stage) }}\n                                    </div>\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_column_dispute_amount %}\n                                <template #column-dispute_amount="{ item }">\n                                    {{ item.dispute_amount.value }} {{ item.dispute_amount.currency_code }}\n                                </template>\n                            {% endblock %}\n\n                            {% block swag_paypal_disputes_list_content_grid_pagination %}\n                                <template #pagination>\n                                    <sw-pagination\n                                        :page="page"\n                                        :limit="limit"\n                                        :total="total"\n                                        @page-change="onPageChange">\n                                    </sw-pagination>\n                                </template>\n                            {% endblock %}\n\n                        </sw-data-grid>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_list_content_empty_state %}\n                        <sw-empty-state\n                            v-if="disputes.length === 0"\n                            :title="$tc(\'swag-paypal-disputes.list.emptyState.title\')"\n                            :subline="$tc(\'swag-paypal-disputes.list.emptyState.subline\')"\n                            icon="regular-comments"\n                            color="#F88962">\n                        </sw-empty-state>\n                    {% endblock %}\n\n                </template>\n            </template>\n        {% endblock %}\n\n        {% block swag_paypal_disputes_list_sidebar %}\n            <template #sidebar>\n                <sw-sidebar class="swag-paypal-disputes-list__sidebar">\n\n                    {% block swag_paypal_disputes_list_sidebar_refresh %}\n                        <sw-sidebar-item\n                            icon="regular-sync"\n                            :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh">\n                        </sw-sidebar-item>\n                    {% endblock %}\n\n                    {% block swag_paypal_disputes_list_sidebar_filter %}\n                        <sw-sidebar-item icon="regular-filter"\n                                         :title="$tc(\'swag-paypal-disputes.list.titleSidebarItemFilter\')">\n\n                            {% block swag_paypal_disputes_list_sidebar_filter_items %}\n                                {% block swag_paypal_disputes_list_sidebar_filter_sales_channel %}\n                                    <sw-sales-channel-switch :label="$tc(\'sw-settings.system-config.labelSalesChannelSelect\')"\n                                                             @change-sales-channel-id="onSalesChannelChanged">\n                                    </sw-sales-channel-switch>\n                                {% endblock %}\n\n                                {% block swag_paypal_disputes_list_sidebar_filter_dispute_state %}\n                                    <sw-multi-select\n                                        :label="$tc(\'swag-paypal-disputes.common.status\')"\n                                        :options="disputeStates"\n                                        :value="disputeStateFilter"\n                                        @change="onChangeDisputeStateFilter">\n                                    </sw-multi-select>\n                                {% endblock %}\n                            {% endblock %}\n\n                        </sw-sidebar-item>\n                    {% endblock %}\n\n                </sw-sidebar>\n            </template>\n        {% endblock %}\n\n    </sw-page>\n{% endblock %}\n',inject:["SwagPayPalDisputeApiService","systemConfigApiService"],mixins:["notification"],data:function(){return{isLoading:!1,disputes:[],disputeStates:[{value:Ea,label:this.formatTechnicalText(Ea)},{value:Fa,label:this.formatTechnicalText(Fa)},{value:Aa,label:this.formatTechnicalText(Aa)},{value:Da,label:this.formatTechnicalText(Da)},{value:ja,label:this.formatTechnicalText(ja)},{value:za,label:this.formatTechnicalText(za)}],disputeStateFilter:[],salesChannelId:null,total:0,limit:10,page:1,resolutionCenterUrl:"https://www.paypal.com/resolutioncenter"}},computed:{dateFilter:function(){return Ma.getByName("date")},disputesColumns:function(){return[{property:"dispute_id",label:this.$tc("swag-paypal-disputes.common.dispute_id")},{property:"update_time",label:this.$tc("swag-paypal-disputes.common.update_time")},{property:"response_due_date",label:this.$tc("swag-paypal-disputes.common.response_due_date.label")},{property:"status",label:this.$tc("swag-paypal-disputes.common.status")},{property:"dispute_life_cycle_stage",label:this.$tc("swag-paypal-disputes.common.dispute_life_cycle_stage")},{property:"dispute_amount",label:this.$tc("swag-paypal-disputes.common.dispute_amount")}]},visibleDisputes:function(){return this.disputes.slice((this.page-1)*this.limit,(this.page-1)*this.limit+this.limit)}},created:function(){this.createdComponent()},methods:{createdComponent:function(){var e=this;this.isLoading=!0,this.systemConfigApiService.getValues("SwagPayPal.settings").then((function(t){t["SwagPayPal.settings.sandbox"]&&(e.resolutionCenterUrl="https://www.sandbox.paypal.com/resolutioncenter"),e.getList()}))},getList:function(){var e=this;this.isLoading=!0,this.disputes=[];var t=null;this.disputeStateFilter.length>0&&(t=this.disputeStateFilter.join(",")),this.SwagPayPalDisputeApiService.list(this.salesChannelId,t).then((function(t){null!==t.items&&(e.disputes=e.sortDisputes(t.items)),e.total=e.disputes.length,e.isLoading=!1})).catch(this.handleError)},sortDisputes:function(e){return e.sort((function(e,t){return"RESOLVED"===e.status?1:"RESOLVED"===t.status?-1:0})),e},debouncedGetList:Na((function(){this.getList()}),850),handleError:function(e){var t=e.response.data.errors[0].detail;this.createNotificationError({message:"".concat(this.$tc("swag-paypal-disputes.list.errorTitle"),": ").concat(t),autoClose:!1}),this.isLoading=!1},formatUpdateDate:function(e){return this.formatDate(e,{})},formatUpdateTime:function(e){return this.formatDate(e,{day:void 0,month:void 0,year:void 0,hour:"2-digit",minute:"2-digit",second:"2-digit"})},formatTechnicalText:function(e){return Va(e).replace(/_/g," ")},onPageChange:function(e){var t=e.page,n=e.limit;this.page=t,this.limit=n,this.$emit("page-change")},onRefresh:function(){this.getList()},onChangeDisputeStateFilter:function(e){this.disputeStateFilter=e,this.debouncedGetList()},onSalesChannelChanged:function(e){this.salesChannelId=e,this.getList()},getExternalDetailPageLink:function(e){return"".concat(this.resolutionCenterUrl,"/").concat(e.dispute_id)},formatDate:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{hour:"2-digit",minute:"2-digit",second:"2-digit"};return this.dateFilter(e,t)}}}),Shopware.Module.register("swag-paypal-disputes",{type:"plugin",name:"paypal-disputes",title:"swag-paypal-disputes.general.mainMenuItemGeneral",description:"swag-paypal-disputes.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#F88962",icon:"regular-comments",favicon:"icon-module-customers.png",routes:{index:{component:"swag-paypal-disputes-list",path:"index",meta:{privilege:"swag_paypal_disputes.viewer"}},detail:{component:"swag-paypal-disputes-detail",path:"detail/:disputeId/:salesChannelId?",props:{default:function(e){return{disputeId:e.params.disputeId,salesChannelId:e.params.salesChannelId}}},meta:{privilege:"swag_paypal_disputes.viewer",parentPath:"swag.paypal.disputes.index"}}},navigation:[{id:"swag-paypal-disputes",path:"swag.paypal.disputes.index",label:"swag-paypal-disputes.general.mainMenuItemGeneral",parent:"sw-customer",privilege:"swag_paypal_disputes.viewer"}]})},"0wGc":function(e,t,n){var a=n("URHp");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("9472c7f4",a,!0,{})},"1/ja":function(e,t){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t,a){return(t=function(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var i=a.call(e,t||"default");if("object"!==n(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===n(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var s=Shopware.Mixin,r=Shopware.Utils.debug;s.register("swag-paypal-credentials-loader",{inject:["SwagPayPalApiCredentialsService"],data:function(){return{isGetCredentialsSuccessful:!1,lastOnboardingSandbox:!1,nonceLive:"".concat(Shopware.Utils.createId()).concat(Shopware.Utils.createId()),nonceSandbox:"".concat(Shopware.Utils.createId()).concat(Shopware.Utils.createId()),payPalPartnerIdLive:"DYKPBPEAW5JNA",payPalPartnerClientIdLive:"AR1aQ13lHxH1c6b3CDd8wSY6SWad2Lt5fv5WkNIZg-qChBoGNfHr2kT180otUmvE_xXtwkgahXUBBurW",payPalPartnerIdSandbox:"45KXQA7PULGAG",payPalPartnerClientIdSandbox:"AQ9g8qMYHpE8s028VCq_GO3Roy9pjeqGDjKTkR_sxzX0FtncBb3QUWbFtoQMtdpe2lG9NpnDT419dK8s",requestParams:{channelId:"partner",product:"ppcp",secondaryProducts:"payment_methods",capabilities:"PAY_UPON_INVOICE",integrationType:"FO",features:["PAYMENT","REFUND","READ_SELLER_DISPUTE","UPDATE_SELLER_DISPUTE","ADVANCED_TRANSACTIONS_SEARCH","ACCESS_MERCHANT_INFORMATION","TRACKING_SHIPMENT_READWRITE"],displayMode:"minibrowser",partnerLogoUrl:"https://assets.shopware.com/media/logos/shopware_logo_blue.svg"}}},computed:{onboardingUrlLive:function(){var e=this.createRequestParameter({partnerId:this.payPalPartnerIdLive,partnerClientId:this.payPalPartnerClientIdLive,returnToPartnerUrl:this.returnUrl(),sellerNonce:this.nonceLive});return"https://www.paypal.com/bizsignup/partner/entry?".concat(e.toString())},onboardingUrlSandbox:function(){var e=this.createRequestParameter({partnerId:this.payPalPartnerIdSandbox,partnerClientId:this.payPalPartnerClientIdSandbox,returnToPartnerUrl:this.returnUrl(),sellerNonce:this.nonceSandbox});return"https://www.sandbox.paypal.com/bizsignup/partner/entry?".concat(e.toString())}},created:function(){this.$root.$on("paypal-onboarding-finish",this.getPayPalCredentials),window.onboardingCallbackLive=function(e,t){Shopware.Application.getApplicationRoot().$emit("paypal-onboarding-finish",{authCode:e,sharedId:t,sandbox:!1})},window.onboardingCallbackSandbox=function(e,t){Shopware.Application.getApplicationRoot().$emit("paypal-onboarding-finish",{authCode:e,sharedId:t,sandbox:!0})}},mounted:function(){this.createScript()},destroyed:function(){this.$root.$off("paypal-onboarding-finish")},methods:{returnUrl:function(){return"".concat(window.location.origin).concat(window.location.pathname,"#").concat(this.$route.path)},createRequestParameter:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=i(i({},this.requestParams),e);return Object.keys(t).reduce((function(e,n){var a=t[n];return Array.isArray(a)&&(a=a.join(",")),e.append(n,a),e}),new URLSearchParams)},createScript:function(){var e="paypal-js";if(document.getElementById(e))window.PAYPAL&&this.renderPayPalButton();else{var t=document.createElement("script");t.id=e,t.type="text/javascript",t.src="https://www.paypal.com/webapps/merchantboarding/js/lib/lightbox/partner.js",t.async=!0,t.addEventListener("load",this.renderPayPalButton.bind(this),!1),document.head.appendChild(t)}},renderPayPalButton:function(){window.PAYPAL.apps.Signup.render=function(){window.PAYPAL.apps.Signup.timeout&&clearTimeout(window.PAYPAL.apps.Signup.timeout),window.PAYPAL.apps.Signup.timeout=setTimeout(window.PAYPAL.apps.Signup.render,300)},window.PAYPAL.apps.Signup.render()},getPayPalCredentials:function(e){var t=this,n=e.authCode,a=e.sharedId,i=e.sandbox;return this.isLoading?Promise.resolve(!1):(this.isGetCredentialsSuccessful=null,this.lastOnboardingSandbox=i,this.$emit("on-change-loading",!0),this.SwagPayPalApiCredentialsService.getApiCredentials(n,a,i?this.nonceSandbox:this.nonceLive,i).then((function(e){t.isGetCredentialsSuccessful=!0,t.onPayPalCredentialsLoadSuccess(e.client_id,e.client_secret,e.payer_id,i)})).catch((function(){t.isGetCredentialsSuccessful=!1,t.onPayPalCredentialsLoadFailed(i)})).finally((function(){t.$emit("on-change-loading",!1)})))},onPayPalCredentialsLoadSuccess:function(){r.warn("swag-paypal-credentials-loader Mixin",'When using the paypal-credentials-loader mixin you have to implement your custom "onPayPalCredentialsLoadSuccess()" method.')},onPayPalCredentialsLoadFailed:function(){r.warn("swag-paypal-credentials-loader Mixin",'When using the paypal-credentials-loader mixin you have to implement your custom "onPayPalCredentialsLoadFailed()" method.')}}})},"1B+8":function(e,t,n){var a=n("vs3l");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("9592110a",a,!0,{})},"1DpW":function(e,t,n){var a=n("CBON");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("77dff2c2",a,!0,{})},"1QT+":function(e,t,n){},"2fJH":function(e,t,n){},"3FjW":function(e,t,n){var a=n("5ara");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("746d9db0",a,!0,{})},"4QCF":function(e,t,n){},"4c/n":function(e,t,n){var a=n("bNoY");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("a89440e0",a,!0,{})},"4y4Y":function(e,t,n){var a=n("bI3c");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("6be41e12",a,!0,{})},"5ara":function(e,t,n){},"5sRV":function(e,t,n){var a=n("orkJ");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("24f5b1ef",a,!0,{})},"614q":function(e,t,n){},"7EQS":function(e,t,n){var a=n("YUG2");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0da4aa75",a,!0,{})},"8O+Y":function(e,t,n){var a=n("ix2S");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("5f889df0",a,!0,{})},"8SZt":function(e,t,n){},"97CA":function(e,t,n){var a=n("xkJH");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0df0b32e",a,!0,{})},AThi:function(e,t,n){},"B/de":function(e){e.exports=JSON.parse('{"swag-paypal-frw-credentials":{"buttonGetCredentials":"Hole API Zugangsdaten","textIntroPayPal":"Um PayPal zu nutzen müssen nur die API Zugangsdaten eingegeben werden.","labelClientId":"Client-ID","labelClientSecret":"Client-Secret","labelMerchantPayerId":"PayPal-Händler-ID","labelClientIdSandbox":"Sandbox-Client-ID","labelClientSecretSandbox":"Sandbox-Client-Secret","labelMerchantPayerIdSandbox":"Sandbox-PayPal-Händler-ID","labelSandbox":"Sandbox verwenden","tooltipSandbox":"Je nach Aktivierung der Sandbox werden unterschiedliche Zugangsdaten hinterlegt.","labelSetDefault":"Als Standard-Zahlungsmethode festlegen","tooltipSetDefault":"PayPal wird als Standard-Zahlungsmethode für alle Verkaufskanäle festgelegt. Sie können individuelle Standard-Zahlungsmethoden pro Verkaufskanal im Einstellungsmodul festlegen.","messageFetchedError":" Bitte versuche es erneut oder nutze die erweiterten Einstellungen um die Zugangsdaten direkt einzugeben.","textFetchedSuccessful":"Die Zugangsdaten wurden erfolgreich abgerufen.","messageNoCredentials":"Es wurden keine Zugangsdaten hinterlegt.","messageTestSuccess":"Die Zugangsdaten sind gültig."}}')},B5KR:function(e,t,n){var a={"./icons-paypal-multicolor.svg":"hGlr"};function i(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}i.keys=function(){return Object.keys(a)},i.resolve=o,e.exports=i,i.id="B5KR"},BdfI:function(e,t,n){},CBON:function(e,t,n){},ECJk:function(e,t,n){},EO6S:function(e,t,n){var a=n("rSzP");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("4f7ded13",a,!0,{})},Eugn:function(e,t,n){var a=n("ZMa3");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("37ee2084",a,!0,{})},GQ5b:function(e,t,n){var a=n("IUvJ");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("49477456",a,!0,{})},GfZD:function(e,t,n){},IGlU:function(e,t,n){var a=n("tIa/");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("315ce2bd",a,!0,{})},IK4k:function(e,t){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal_disputes",roles:{viewer:{privileges:["sales_channel:read"],dependencies:[]}}})},IUvJ:function(e,t,n){},"K/IQ":function(e,t,n){var a=n("ECJk");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("6e626871",a,!0,{})},LKNZ:function(e,t,n){},LQG9:function(e){e.exports=JSON.parse('{"swag-paypal-frw-credentials":{"buttonGetCredentials":"Get API credentials","textIntroPayPal":"To get PayPal up and running you only need to provide your PayPal API credentials.","labelClientId":"Client ID","labelClientSecret":"Client secret","labelMerchantPayerId":"PayPal Merchant ID","labelClientIdSandbox":"Sandbox client ID","labelClientSecretSandbox":"Sandbox client secret","labelMerchantPayerIdSandbox":"Sandbox PayPal Merchant ID","labelSandbox":"Use sandbox","tooltipSandbox":"Depending on activation of the sandbox, separate credentials are saved.","labelSetDefault":"Set as default payment method","tooltipSetDefault":"PayPal will be set as default payment method of all Sales Channels. You can set individual default payment methods per Sales Channel in the settings module.","messageFetchedError":"Try again or use the advanced settings to provide your credentials.","textFetchedSuccessful":"Credentials have been fetched.","messageNoCredentials":"No credentials provided.","messageTestSuccess":"Credentials are valid."}}')},LqEn:function(e,t,n){var a=n("g8od");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7c28d555",a,!0,{})},Oiq3:function(e,t,n){var a=n("/9C4");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("8d94fe7a",a,!0,{})},OjzJ:function(e,t){Shopware.Component.extend("swag-paypal-pos-url-field","sw-url-field",{methods:{changeMode:function(){},getSSLMode:function(){return!0}}})},QILv:function(e,t){Shopware.Mixin.register("swag-paypal-pos-log-label",{methods:{getLabelVariant:function(e){return e>=400?"danger":e>=300?"warning":e>200?"info":"success"},getLabel:function(e){return e>=300?"swag-paypal-pos.detail.logs.states.failed":"swag-paypal-pos.detail.logs.states.success"}}})},QeKy:function(e,t,n){var a=n("XhSQ");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7a871ea0",a,!0,{})},SDUR:function(e,t,n){},SSo7:function(e,t,n){},SZ7m:function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var o=t[i],s=o[0],r={id:e+":"+i,css:o[1],media:o[2],sourceMap:o[3]};a[s]?a[s].parts.push(r):n.push(a[s]={id:s,parts:[r]})}return n}n.r(t),n.d(t,"default",(function(){return h}));var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},s=i&&(document.head||document.getElementsByTagName("head")[0]),r=null,l=0,c=!1,p=function(){},d=null,u="data-vue-ssr-id",g="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e,t,n,i){c=n,d=i||{};var s=a(e,t);return y(s),function(t){for(var n=[],i=0;i<s.length;i++){var r=s[i];(l=o[r.id]).refs--,n.push(l)}t?y(s=a(e,t)):s=[];for(i=0;i<n.length;i++){var l;if(0===(l=n[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete o[l.id]}}}}function y(e){for(var t=0;t<e.length;t++){var n=e[t],a=o[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(_(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var s=[];for(i=0;i<n.parts.length;i++)s.push(_(n.parts[i]));o[n.id]={id:n.id,refs:1,parts:s}}}}function f(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function _(e){var t,n,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(c)return p;a.parentNode.removeChild(a)}if(g){var i=l++;a=r||(r=f()),t=b.bind(null,a,i,!1),n=b.bind(null,a,i,!0)}else a=f(),t=v.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var m,w=(m=[],function(e,t){return m[e]=t,m.filter(Boolean).join("\n")});function b(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=w(t,i);else{var o=document.createTextNode(i),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(o,s[t]):e.appendChild(o)}}function v(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),d.ssrId&&e.setAttribute(u,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},TQwE:function(e,t,n){var a=n("V+gV");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7922ea65",a,!0,{})},URHp:function(e,t,n){},UTAG:function(e,t,n){var a=n("tjX7");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("507e5e0e",a,!0,{})},Uj3z:function(e,t,n){var a=n("8SZt");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("83431c8e",a,!0,{})},"V+gV":function(e,t,n){},VNZe:function(e,t,n){var a=n("AThi");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("6d0d53a6",a,!0,{})},WD85:function(e,t,n){var a=n("2fJH");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("1b3d9820",a,!0,{})},XhSQ:function(e,t,n){},"XvI/":function(e,t,n){},YDOV:function(e,t,n){var a=n("xlzb");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("cc5aadcc",a,!0,{})},YUG2:function(e,t,n){},"Z+jC":function(e,t,n){var a=n("614q");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("4d352182",a,!0,{})},Z0zN:function(e,t,n){var a=n("4QCF");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("3a916960",a,!0,{})},Z7zI:function(e,t,n){},ZMa3:function(e,t,n){},bI3c:function(e,t,n){},bNoY:function(e,t,n){},bmUn:function(e,t,n){var a=n("xlo/");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("54e1140c",a,!0,{})},boBf:function(e,t,n){var a=n("gAOY");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("6212110e",a,!0,{})},c6EI:function(e,t){Shopware.Mixin.register("swag-paypal-pos-catch-error",{methods:{catchError:function(e,t){var n=this;this._i18n=this.$root._i18n;var a=e?this.$tc(e):"";try{if(t.response.data&&t.response.data.errors){var i=t.response.data.errors.map((function(e){if("SWAG_PAYPAL_POS__EXISTING_POS_ACCOUNT"===e.code&&(a=n.$tc("swag-paypal-pos.authentication.messageDuplicateError")),e.hasOwnProperty("meta")&&e.meta.hasOwnProperty("parameters")){if(e.meta.parameters.salesChannelIds)return"<br>".concat(e.meta.parameters.salesChannelIds);if(e.meta.parameters.message)return"".concat(e.meta.parameters.message," (").concat(e.meta.parameters.name,")");if(e.meta.parameters.name)return e.meta.parameters.name}return e.detail}),this).join(" / ");i&&(a=a?"".concat(a,": ").concat(i):i)}}finally{this.createNotificationError({message:a})}}}})},dHUK:function(e,t,n){},"dyn+":function(e,t,n){var a=n("s/Mg");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("b3c0da9c",a,!0,{})},eQ20:function(e,t,n){var a=n("BdfI");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("51217d9a",a,!0,{})},eXCM:function(e,t,n){},g8od:function(e,t,n){},gAOY:function(e,t,n){},hGlr:function(e,t){e.exports='<svg xmlns="http://www.w3.org/2000/svg" width="32" height="40" viewBox="0 0 48 48"><g fill="none" fill-rule="evenodd"><path fill="#013088" d="M1.36196923,45.9634625 C0.525969231,45.9634625 -0.113723077,45.2159 0.0165846154,44.3907125 L6.62843077,2.599775 C6.80104615,1.4978375 7.75381538,0.6878375 8.87073846,0.6878375 L24.7445846,0.6878375 C30.2124308,0.6878375 34.4855077,1.8387125 36.8530462,4.5269 C39.0005846,6.9687125 39.6284308,9.6653375 39.0056615,13.6259 C39.8924308,14.0946875 40.6522769,14.670125 41.2648923,15.3636875 C43.2888923,17.66375 43.6848923,20.934125 42.9199692,24.8508125 C41.0888923,34.2265625 34.8239692,37.4665625 26.8210462,37.4665625 L25.5856615,37.4665625 C24.6075077,37.4665625 23.7748923,38.1753125 23.6225846,39.1405625 L23.5227385,39.6805625 L21.9675077,49.5220625 L21.8862769,49.9405625 C21.7322769,50.9024375 20.9013538,51.6111875 19.9232,51.6111875 L11.6630462,51.6111875 C10.9319692,51.6111875 10.3735077,50.9598125 10.4868923,50.2375625 L11.1620698,45.9634625 L1.36196923,45.9634625 Z"></path><path fill="#019CDE" d="M39.0039692,13.6255625 C38.9565846,13.927625 38.9024308,14.2364375 38.8415077,14.5536875 C36.7481231,25.271 29.5862769,28.973375 20.4393538,28.973375 L15.7821231,28.973375 C14.6635077,28.973375 13.7208923,29.783375 13.5465846,30.883625 L11.1621231,45.963125 L10.4868923,50.2375625 C10.3735077,50.9598125 10.9319692,51.6111875 11.6630462,51.6111875 L19.9232,51.6111875 C20.9013538,51.6111875 21.7322769,50.9024375 21.8862769,49.9405625 L21.9675077,49.5220625 L23.5227385,39.6805625 L23.6225846,39.1405625 C23.7748923,38.1753125 24.6075077,37.4665625 25.5856615,37.4665625 L26.8210462,37.4665625 C34.8239692,37.4665625 41.0888923,34.2265625 42.9199692,24.8508125 C43.6848923,20.934125 43.2888923,17.66375 41.2648923,15.3636875 C40.6522769,14.670125 39.8924308,14.0946875 39.0039692,13.6255625"></path><path fill="#012269" d="M36.8142923,12.7546437 C36.4944462,12.6618312 36.1644462,12.5774562 35.8259846,12.5015187 C35.4858308,12.4272687 35.1372154,12.3614562 34.7784462,12.3040812 C33.5227538,12.1015812 32.1469077,12.0053937 30.6729077,12.0053937 L18.2310615,12.0053937 C17.9247538,12.0053937 17.6336769,12.0745812 17.3730615,12.1994562 C16.7993692,12.4745187 16.3729077,13.0162062 16.2696769,13.6793937 L13.6229077,30.3957687 L13.5467538,30.8834562 C13.7210615,29.7832062 14.6636769,28.9732062 15.7822923,28.9732062 L20.4395231,28.9732062 C29.5864462,28.9732062 36.7482923,25.2691437 38.8416769,14.5535187 C38.9042923,14.2362687 38.9567538,13.9274562 39.0041385,13.6253937 C38.4744462,13.3452687 37.9007538,13.1056437 37.2830615,12.9014562 C37.1307538,12.8508312 36.9733692,12.8018937 36.8142923,12.7546437"></path></g></svg>'},ix2S:function(e,t,n){},kZ4G:function(e,t,n){var a=n("1QT+");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("0e20e19b",a,!0,{})},lV9L:function(e,t){Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:"swag_paypal",key:"swag_paypal",roles:{viewer:{privileges:["sales_channel:read","sales_channel_payment_method:read","system_config:read"],dependencies:[]},editor:{privileges:["sales_channel:update","sales_channel_payment_method:create","sales_channel_payment_method:update","system_config:update","system_config:create","system_config:delete"],dependencies:["swag_paypal.viewer"]}}}),Shopware.Service("privileges").addPrivilegeMappingEntry({category:"permissions",parent:null,key:"sales_channel",roles:{viewer:{privileges:["swag_paypal_pos_sales_channel:read","swag_paypal_pos_sales_channel_run:read","swag_paypal_pos_sales_channel_run:update","swag_paypal_pos_sales_channel_run:create","swag_paypal_pos_sales_channel_run_log:read","sales_channel_payment_method:read"]},editor:{privileges:["swag_paypal_pos_sales_channel:update","swag_paypal_pos_sales_channel_run:delete","payment_method:update"]},creator:{privileges:["swag_paypal_pos_sales_channel:create","payment_method:create","shipping_method:create","delivery_time:create"]},deleter:{privileges:["swag_paypal_pos_sales_channel:delete"]}}})},lx2N:function(e,t,n){var a=n("eXCM");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("41521fbb",a,!0,{})},mcvk:function(e,t,n){var a=n("SDUR");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("7f0bcc6e",a,!0,{})},orkJ:function(e,t,n){},"ot/U":function(e,t,n){var a=n("xA+S");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("47cdf892",a,!0,{})},pYo2:function(e,t,n){var a=n("SSo7");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("333a4132",a,!0,{})},r8kz:function(e,t,n){},rEJf:function(e,t,n){var a=n("dHUK");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("1fc829da",a,!0,{})},rIaE:function(e,t,n){var a=n("LKNZ");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("dad0b1d0",a,!0,{})},rSzP:function(e,t,n){},"s/Mg":function(e,t,n){},"tIa/":function(e,t,n){},tOAw:function(e,t,n){var a=n("Z7zI");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("24536bbd",a,!0,{})},tVt6:function(e,t,n){},tjX7:function(e,t,n){},uem7:function(e,t,n){var a=n("r8kz");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("298bafb6",a,!0,{})},vs3l:function(e,t,n){},"xA+S":function(e,t,n){},xkJH:function(e,t,n){},"xlo/":function(e,t,n){},xlzb:function(e,t,n){},xz1P:function(e,t,n){var a=n("tVt6");a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("76bac638",a,!0,{})}});
//# sourceMappingURL=swag-pay-pal.js.map